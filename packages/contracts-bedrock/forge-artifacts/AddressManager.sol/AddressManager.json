{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldAddress",
          "type": "address"
        }
      ],
      "name": "AddressSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6105ef8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c80639b2ea4bd116100505780639b2ea4bd146100b9578063bf40fac1146100cc578063f2fde38b146100df57600080fd5b8063715018a61461006c5780638da5cb5b14610076575b600080fd5b6100746100f2565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100746100c73660046104fa565b610106565b6100906100da366004610548565b6101d9565b6100746100ed366004610585565b610215565b6100fa6102d1565b6101046000610352565b565b61010e6102d1565b6000610119836103c7565b60008181526001602052604090819020805473ffffffffffffffffffffffffffffffffffffffff8681167fffffffffffffffffffffffff00000000000000000000000000000000000000008316179092559151929350169061017c9085906105a7565b6040805191829003822073ffffffffffffffffffffffffffffffffffffffff808716845284166020840152917f9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c910160405180910390a250505050565b6000600160006101e8846103c7565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1692915050565b61021d6102d1565b73ffffffffffffffffffffffffffffffffffffffff81166102c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102ce81610352565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610104576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102bc565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000816040516020016103da91906105a7565b604051602081830303815290604052805190602001209050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261043757600080fd5b813567ffffffffffffffff80821115610452576104526103f7565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610498576104986103f7565b816040528381528660208588010111156104b157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104f557600080fd5b919050565b6000806040838503121561050d57600080fd5b823567ffffffffffffffff81111561052457600080fd5b61053085828601610426565b92505061053f602084016104d1565b90509250929050565b60006020828403121561055a57600080fd5b813567ffffffffffffffff81111561057157600080fd5b61057d84828501610426565b949350505050565b60006020828403121561059757600080fd5b6105a0826104d1565b9392505050565b6000825160005b818110156105c857602081860181015185830152016105ae565b818111156105d7576000828501525b50919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "508:1684:29:-:0;;;;;;;;;;;;-1:-1:-1;936:32:117;719:10:136;936:18:117;:32::i;:::-;508:1684:29;;2433:187:117;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:117;;;-1:-1:-1;;;;;;2541:17:117;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;508:1684:29:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100675760003560e01c80639b2ea4bd116100505780639b2ea4bd146100b9578063bf40fac1146100cc578063f2fde38b146100df57600080fd5b8063715018a61461006c5780638da5cb5b14610076575b600080fd5b6100746100f2565b005b60005473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200160405180910390f35b6100746100c73660046104fa565b610106565b6100906100da366004610548565b6101d9565b6100746100ed366004610585565b610215565b6100fa6102d1565b6101046000610352565b565b61010e6102d1565b6000610119836103c7565b60008181526001602052604090819020805473ffffffffffffffffffffffffffffffffffffffff8681167fffffffffffffffffffffffff00000000000000000000000000000000000000008316179092559151929350169061017c9085906105a7565b6040805191829003822073ffffffffffffffffffffffffffffffffffffffff808716845284166020840152917f9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c910160405180910390a250505050565b6000600160006101e8846103c7565b815260208101919091526040016000205473ffffffffffffffffffffffffffffffffffffffff1692915050565b61021d6102d1565b73ffffffffffffffffffffffffffffffffffffffff81166102c5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6102ce81610352565b50565b60005473ffffffffffffffffffffffffffffffffffffffff163314610104576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016102bc565b6000805473ffffffffffffffffffffffffffffffffffffffff8381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000816040516020016103da91906105a7565b604051602081830303815290604052805190602001209050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261043757600080fd5b813567ffffffffffffffff80821115610452576104526103f7565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610498576104986103f7565b816040528381528660208588010111156104b157600080fd5b836020870160208301376000602085830101528094505050505092915050565b803573ffffffffffffffffffffffffffffffffffffffff811681146104f557600080fd5b919050565b6000806040838503121561050d57600080fd5b823567ffffffffffffffff81111561052457600080fd5b61053085828601610426565b92505061053f602084016104d1565b90509250929050565b60006020828403121561055a57600080fd5b813567ffffffffffffffff81111561057157600080fd5b61057d84828501610426565b949350505050565b60006020828403121561059757600080fd5b6105a0826104d1565b9392505050565b6000825160005b818110156105c857602081860181015185830152016105ae565b818111156105d7576000828501525b50919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "508:1684:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1831:101:117;;;:::i;:::-;;1201:85;1247:7;1273:6;;;1201:85;;;190:42:165;178:55;;;160:74;;148:2;133:18;1201:85:117;;;;;;;1274:278:29;;;;;;:::i;:::-;;:::i;1763:127::-;;;;;;:::i;:::-;;:::i;2081:198:117:-;;;;;;:::i;:::-;;:::i;1831:101::-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1274:278:29:-;1094:13:117;:11;:13::i;:::-;1362:16:29::1;1381:19;1394:5;1381:12;:19::i;:::-;1410:18;1431:19:::0;;;:9:::1;:19;::::0;;;;;;;;::::1;1460:30:::0;;::::1;::::0;;::::1;;::::0;;;1506:39;;1362:38;;-1:-1:-1;1431:19:29::1;::::0;1506:39:::1;::::0;1517:5;;1506:39:::1;:::i;:::-;;::::0;;;;;::::1;::::0;;2954:42:165;3023:15;;;3005:34;;3075:15;;3070:2;3055:18;;3048:43;1506:39:29;::::1;::::0;2917:18:165;1506:39:29::1;;;;;;;1352:200;;1274:278:::0;;:::o;1763:127::-;1827:7;1853:9;:30;1863:19;1876:5;1863:12;:19::i;:::-;1853:30;;;;;;;;;;;-1:-1:-1;1853:30:29;;;;;1763:127;-1:-1:-1;;1763:127:29:o;2081:198:117:-;1094:13;:11;:13::i;:::-;2169:22:::1;::::0;::::1;2161:73;;;::::0;::::1;::::0;;3304:2:165;2161:73:117::1;::::0;::::1;3286:21:165::0;3343:2;3323:18;;;3316:30;3382:34;3362:18;;;3355:62;3453:8;3433:18;;;3426:36;3479:19;;2161:73:117::1;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;1422:23;1273:6;719:10:136;1422:23:117;1414:68;;;;;;;3711:2:165;1414:68:117;;;3693:21:165;;;3730:18;;;3723:30;3789:34;3769:18;;;3762:62;3841:18;;1414:68:117;3509:356:165;2433:187:117;2506:16;2525:6;;;2541:17;;;;;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2057:133:29:-;2123:7;2176:5;2159:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;2149:34;;;;;;2142:41;;2057:133;;;:::o;245:184:165:-;297:77;294:1;287:88;394:4;391:1;384:15;418:4;415:1;408:15;434:778;477:5;530:3;523:4;515:6;511:17;507:27;497:55;;548:1;545;538:12;497:55;584:6;571:20;610:18;647:2;643;640:10;637:36;;;653:18;;:::i;:::-;787:2;781:9;849:4;841:13;;692:66;837:22;;;861:2;833:31;829:40;817:53;;;885:18;;;905:22;;;882:46;879:72;;;931:18;;:::i;:::-;971:10;967:2;960:22;1006:2;998:6;991:18;1052:3;1045:4;1040:2;1032:6;1028:15;1024:26;1021:35;1018:55;;;1069:1;1066;1059:12;1018:55;1133:2;1126:4;1118:6;1114:17;1107:4;1099:6;1095:17;1082:54;1180:1;1173:4;1168:2;1160:6;1156:15;1152:26;1145:37;1200:6;1191:15;;;;;;434:778;;;;:::o;1217:196::-;1285:20;;1345:42;1334:54;;1324:65;;1314:93;;1403:1;1400;1393:12;1314:93;1217:196;;;:::o;1418:396::-;1496:6;1504;1557:2;1545:9;1536:7;1532:23;1528:32;1525:52;;;1573:1;1570;1563:12;1525:52;1613:9;1600:23;1646:18;1638:6;1635:30;1632:50;;;1678:1;1675;1668:12;1632:50;1701;1743:7;1734:6;1723:9;1719:22;1701:50;:::i;:::-;1691:60;;;1770:38;1804:2;1793:9;1789:18;1770:38;:::i;:::-;1760:48;;1418:396;;;;;:::o;1819:322::-;1888:6;1941:2;1929:9;1920:7;1916:23;1912:32;1909:52;;;1957:1;1954;1947:12;1909:52;1997:9;1984:23;2030:18;2022:6;2019:30;2016:50;;;2062:1;2059;2052:12;2016:50;2085;2127:7;2118:6;2107:9;2103:22;2085:50;:::i;:::-;2075:60;1819:322;-1:-1:-1;;;;1819:322:165:o;2146:186::-;2205:6;2258:2;2246:9;2237:7;2233:23;2229:32;2226:52;;;2274:1;2271;2264:12;2226:52;2297:29;2316:9;2297:29;:::i;:::-;2287:39;2146:186;-1:-1:-1;;;2146:186:165:o;2337:428::-;2468:3;2506:6;2500:13;2531:1;2541:129;2555:6;2552:1;2549:13;2541:129;;;2653:4;2637:14;;;2633:25;;2627:32;2614:11;;;2607:53;2570:12;2541:129;;;2688:6;2685:1;2682:13;2679:48;;;2723:1;2714:6;2709:3;2705:16;2698:27;2679:48;-1:-1:-1;2743:16:165;;;;;2337:428;-1:-1:-1;;2337:428:165:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getAddress(string)": "bf40fac1",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "setAddress(string,address)": "9b2ea4bd",
    "transferOwnership(address)": "f2fde38b"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldAddress\",\"type\":\"address\"}],\"name\":\"AddressSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:legacy\":\"@title AddressManager\",\"events\":{\"AddressSet(string,address,address)\":{\"params\":{\"name\":\"String name being set in the registry.\",\"newAddress\":\"Address set for the given name.\",\"oldAddress\":\"Address that was previously set for the given name.\"}}},\"kind\":\"dev\",\"methods\":{\"getAddress(string)\":{\"params\":{\"_name\":\"Name to retrieve an address for.\"},\"returns\":{\"_0\":\"Address associated with the given name.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAddress(string,address)\":{\"params\":{\"_address\":\"Address to associate with the name.\",\"_name\":\"String name to associate an address with.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"events\":{\"AddressSet(string,address,address)\":{\"notice\":\"Emitted when an address is modified in the registry.\"}},\"kind\":\"user\",\"methods\":{\"getAddress(string)\":{\"notice\":\"Retrieves the address associated with a given name.\"},\"setAddress(string,address)\":{\"notice\":\"Changes the address associated with a particular name.\"}},\"notice\":\"AddressManager is a legacy contract that was used in the old version of the Mantle         system to manage a registry of string names to addresses. We now use a more standard         proxy system instead, but this contract is still necessary for backwards compatibility         with several older contracts.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy/AddressManager.sol\":\"AddressManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/legacy/AddressManager.sol\":{\"keccak256\":\"0x1554e4da3af37bb795b99382aab7b17f790690480e1f81c0ea9603071678cd57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1f67dc583d4737f4cda9d5197c8830cb5f4c0516624a7d7330e4e4ce6249407\",\"dweb:/ipfs/QmQZXHr6X9sF3byKvB3H83xCnvp7B4yqvVSFNo1E2XXwJj\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "oldAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AddressSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "_address",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setAddress"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getAddress(string)": {
            "params": {
              "_name": "Name to retrieve an address for."
            },
            "returns": {
              "_0": "Address associated with the given name."
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "setAddress(string,address)": {
            "params": {
              "_address": "Address to associate with the name.",
              "_name": "String name to associate an address with."
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "getAddress(string)": {
            "notice": "Retrieves the address associated with a given name."
          },
          "setAddress(string,address)": {
            "notice": "Changes the address associated with a particular name."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/legacy/AddressManager.sol": "AddressManager"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/legacy/AddressManager.sol": {
        "keccak256": "0x1554e4da3af37bb795b99382aab7b17f790690480e1f81c0ea9603071678cd57",
        "urls": [
          "bzz-raw://c1f67dc583d4737f4cda9d5197c8830cb5f4c0516624a7d7330e4e4ce6249407",
          "dweb:/ipfs/QmQZXHr6X9sF3byKvB3H83xCnvp7B4yqvVSFNo1E2XXwJj"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 46027,
        "contract": "contracts/legacy/AddressManager.sol:AddressManager",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 6039,
        "contract": "contracts/legacy/AddressManager.sol:AddressManager",
        "label": "addresses",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_bytes32,t_address)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_address)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "getAddress(string)": {
        "notice": "Retrieves the address associated with a given name."
      },
      "setAddress(string,address)": {
        "notice": "Changes the address associated with a particular name."
      }
    },
    "events": {
      "AddressSet(string,address,address)": {
        "notice": "Emitted when an address is modified in the registry."
      }
    },
    "notice": "AddressManager is a legacy contract that was used in the old version of the Mantle         system to manage a registry of string names to addresses. We now use a more standard         proxy system instead, but this contract is still necessary for backwards compatibility         with several older contracts."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "getAddress(string)": {
        "params": {
          "_name": "Name to retrieve an address for."
        },
        "returns": {
          "_0": "Address associated with the given name."
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAddress(string,address)": {
        "params": {
          "_address": "Address to associate with the name.",
          "_name": "String name to associate an address with."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "events": {
      "AddressSet(string,address,address)": {
        "params": {
          "name": "String name being set in the registry.",
          "newAddress": "Address set for the given name.",
          "oldAddress": "Address that was previously set for the given name."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "contracts/legacy/AddressManager.sol",
    "id": 6116,
    "exportedSymbols": {
      "AddressManager": [
        6115
      ],
      "Ownable": [
        46132
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2161:29",
    "nodes": [
      {
        "id": 6029,
        "nodeType": "PragmaDirective",
        "src": "32:23:29",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 6031,
        "nodeType": "ImportDirective",
        "src": "57:69:29",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6116,
        "sourceUnit": 46133,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6030,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46132,
              "src": "66:7:29",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6115,
        "nodeType": "ContractDefinition",
        "src": "508:1684:29",
        "nodes": [
          {
            "id": 6039,
            "nodeType": "VariableDeclaration",
            "src": "632:45:29",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6035,
              "nodeType": "StructuredDocumentation",
              "src": "549:78:29",
              "text": " @notice Mapping of the hashes of string names to addresses."
            },
            "mutability": "mutable",
            "name": "addresses",
            "nameLocation": "668:9:29",
            "scope": 6115,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 6038,
              "keyType": {
                "id": 6036,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "640:7:29",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "632:27:29",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 6037,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "651:7:29",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 6048,
            "nodeType": "EventDefinition",
            "src": "973:78:29",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 6040,
              "nodeType": "StructuredDocumentation",
              "src": "684:284:29",
              "text": " @notice Emitted when an address is modified in the registry.\n @param name       String name being set in the registry.\n @param newAddress Address set for the given name.\n @param oldAddress Address that was previously set for the given name."
            },
            "eventSelector": "9416a153a346f93d95f94b064ae3f148b6460473c6e82b3f9fc2521b873fcd6c",
            "name": "AddressSet",
            "nameLocation": "979:10:29",
            "parameters": {
              "id": 6047,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6042,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "1005:4:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 6048,
                  "src": "990:19:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6041,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "990:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6044,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "1019:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 6048,
                  "src": "1011:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1011:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6046,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldAddress",
                  "nameLocation": "1039:10:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 6048,
                  "src": "1031:18:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1031:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "989:61:29"
            }
          },
          {
            "id": 6083,
            "nodeType": "FunctionDefinition",
            "src": "1274:278:29",
            "nodes": [],
            "body": {
              "id": 6082,
              "nodeType": "Block",
              "src": "1352:200:29",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6059,
                      "mutability": "mutable",
                      "name": "nameHash",
                      "nameLocation": "1370:8:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 6082,
                      "src": "1362:16:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 6058,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1362:7:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6063,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 6061,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6051,
                        "src": "1394:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 6060,
                      "name": "_getNameHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6114,
                      "src": "1381:12:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (string memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1381:19:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1362:38:29"
                },
                {
                  "assignments": [
                    6065
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6065,
                      "mutability": "mutable",
                      "name": "oldAddress",
                      "nameLocation": "1418:10:29",
                      "nodeType": "VariableDeclaration",
                      "scope": 6082,
                      "src": "1410:18:29",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6064,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1410:7:29",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6069,
                  "initialValue": {
                    "baseExpression": {
                      "id": 6066,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6039,
                      "src": "1431:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 6068,
                    "indexExpression": {
                      "id": 6067,
                      "name": "nameHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6059,
                      "src": "1441:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1431:19:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1410:40:29"
                },
                {
                  "expression": {
                    "id": 6074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6070,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6039,
                        "src": "1460:9:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 6072,
                      "indexExpression": {
                        "id": 6071,
                        "name": "nameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6059,
                        "src": "1470:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1460:19:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6073,
                      "name": "_address",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6053,
                      "src": "1482:8:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1460:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 6075,
                  "nodeType": "ExpressionStatement",
                  "src": "1460:30:29"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 6077,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6051,
                        "src": "1517:5:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6078,
                        "name": "_address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6053,
                        "src": "1524:8:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6079,
                        "name": "oldAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6065,
                        "src": "1534:10:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 6076,
                      "name": "AddressSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6048,
                      "src": "1506:10:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,address,address)"
                      }
                    },
                    "id": 6080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1506:39:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6081,
                  "nodeType": "EmitStatement",
                  "src": "1501:44:29"
                }
              ]
            },
            "documentation": {
              "id": 6049,
              "nodeType": "StructuredDocumentation",
              "src": "1057:212:29",
              "text": " @notice Changes the address associated with a particular name.\n @param _name    String name to associate an address with.\n @param _address Address to associate with the name."
            },
            "functionSelector": "9b2ea4bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 6056,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 6055,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46051,
                  "src": "1342:9:29"
                },
                "nodeType": "ModifierInvocation",
                "src": "1342:9:29"
              }
            ],
            "name": "setAddress",
            "nameLocation": "1283:10:29",
            "parameters": {
              "id": 6054,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6051,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1308:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 6083,
                  "src": "1294:19:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6050,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1294:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6053,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "1323:8:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 6083,
                  "src": "1315:16:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6052,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1315:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1293:39:29"
            },
            "returnParameters": {
              "id": 6057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1352:0:29"
            },
            "scope": 6115,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6098,
            "nodeType": "FunctionDefinition",
            "src": "1763:127:29",
            "nodes": [],
            "body": {
              "id": 6097,
              "nodeType": "Block",
              "src": "1836:54:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 6091,
                      "name": "addresses",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6039,
                      "src": "1853:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                        "typeString": "mapping(bytes32 => address)"
                      }
                    },
                    "id": 6095,
                    "indexExpression": {
                      "arguments": [
                        {
                          "id": 6093,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6086,
                          "src": "1876:5:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_string_memory_ptr",
                            "typeString": "string memory"
                          }
                        ],
                        "id": 6092,
                        "name": "_getNameHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6114,
                        "src": "1863:12:29",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory) pure returns (bytes32)"
                        }
                      },
                      "id": 6094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1863:19:29",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1853:30:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 6090,
                  "id": 6096,
                  "nodeType": "Return",
                  "src": "1846:37:29"
                }
              ]
            },
            "documentation": {
              "id": 6084,
              "nodeType": "StructuredDocumentation",
              "src": "1558:200:29",
              "text": " @notice Retrieves the address associated with a given name.\n @param _name Name to retrieve an address for.\n @return Address associated with the given name."
            },
            "functionSelector": "bf40fac1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getAddress",
            "nameLocation": "1772:10:29",
            "parameters": {
              "id": 6087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6086,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1797:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 6098,
                  "src": "1783:19:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6085,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1783:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1782:21:29"
            },
            "returnParameters": {
              "id": 6090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6089,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6098,
                  "src": "1827:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6088,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1827:7:29",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1826:9:29"
            },
            "scope": 6115,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 6114,
            "nodeType": "FunctionDefinition",
            "src": "2057:133:29",
            "nodes": [],
            "body": {
              "id": 6113,
              "nodeType": "Block",
              "src": "2132:58:29",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 6109,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6101,
                            "src": "2176:5:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "expression": {
                            "id": 6107,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "2159:3:29",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 6108,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "2159:16:29",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 6110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2159:23:29",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 6106,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "2149:9:29",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 6111,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2149:34:29",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 6105,
                  "id": 6112,
                  "nodeType": "Return",
                  "src": "2142:41:29"
                }
              ]
            },
            "documentation": {
              "id": 6099,
              "nodeType": "StructuredDocumentation",
              "src": "1896:156:29",
              "text": " @notice Computes the hash of a name.\n @param _name Name to compute a hash for.\n @return Hash of the given name."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getNameHash",
            "nameLocation": "2066:12:29",
            "parameters": {
              "id": 6102,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6101,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2093:5:29",
                  "nodeType": "VariableDeclaration",
                  "scope": 6114,
                  "src": "2079:19:29",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6100,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2079:6:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2078:21:29"
            },
            "returnParameters": {
              "id": 6105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6104,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 6114,
                  "src": "2123:7:29",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6103,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2123:7:29",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2122:9:29"
            },
            "scope": 6115,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6033,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 46132,
              "src": "535:7:29"
            },
            "id": 6034,
            "nodeType": "InheritanceSpecifier",
            "src": "535:7:29"
          }
        ],
        "canonicalName": "AddressManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6032,
          "nodeType": "StructuredDocumentation",
          "src": "128:379:29",
          "text": " @custom:legacy\n @title AddressManager\n @notice AddressManager is a legacy contract that was used in the old version of the Mantle\n         system to manage a registry of string names to addresses. We now use a more standard\n         proxy system instead, but this contract is still necessary for backwards compatibility\n         with several older contracts."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6115,
          46132,
          49974
        ],
        "name": "AddressManager",
        "nameLocation": "517:14:29",
        "scope": 6116,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 29
}