{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AddressManager",
          "name": "_addressManager",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_implementationName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516105f03803806105f083398101604081905261002f91610088565b30600090815260016020908152604080832080546001600160a01b0319166001600160a01b03871617905590829052902061006a8282610203565b5050506102c2565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561009b57600080fd5b82516001600160a01b03811681146100b257600080fd5b602084810151919350906001600160401b03808211156100d157600080fd5b818601915086601f8301126100e557600080fd5b8151818111156100f7576100f7610072565b604051601f8201601f19908116603f0116810190838211818310171561011f5761011f610072565b81604052828152898684870101111561013757600080fd5b600093505b82841015610159578484018601518185018701529285019261013c565b8284111561016a5760008684830101525b8096505050505050509250929050565b600181811c9082168061018e57607f821691505b6020821081036101ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101fe57600081815260208120601f850160051c810160208610156101db5750805b601f850160051c820191505b818110156101fa578281556001016101e7565b5050505b505050565b81516001600160401b0381111561021c5761021c610072565b6102308161022a845461017a565b846101b4565b602080601f831160018114610265576000841561024d5750858301515b600019600386901b1c1916600185901b1785556101fa565b600085815260208120601f198616915b8281101561029457888601518255948401946001909101908401610275565b50858210156102b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61031f806102d16000396000f3fe608060408181523060009081526001602090815282822054908290529181207fbf40fac1000000000000000000000000000000000000000000000000000000009093529173ffffffffffffffffffffffffffffffffffffffff9091169063bf40fac19061006d9060846101e2565b602060405180830381865afa15801561008a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ae91906102c5565b905073ffffffffffffffffffffffffffffffffffffffff8116610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f5265736f6c76656444656c656761746550726f78793a2074617267657420616460448201527f6472657373206d75737420626520696e697469616c697a656400000000000000606482015260840160405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16600036604051610182929190610302565b600060405180830381855af49150503d80600081146101bd576040519150601f19603f3d011682016040523d82523d6000602084013e6101c2565b606091505b5090925090508115156001036101da57805160208201f35b805160208201fd5b600060208083526000845481600182811c91508083168061020457607f831692505b858310810361023a577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b878601838152602001818015610257576001811461028b576102b6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616825284151560051b820196506102b6565b60008b81526020902060005b868110156102b057815484820152908501908901610297565b83019750505b50949998505050505050505050565b6000602082840312156102d757600080fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146102fb57600080fd5b9392505050565b818382376000910190815291905056fea164736f6c634300080f000a",
    "sourceMap": "442:2204:35:-:0;;;1604:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1716:4;1693:29;;;;:14;:29;;;;;;;;:47;;-1:-1:-1;;;;;;1693:47:35;-1:-1:-1;;;;;1693:47:35;;;;;1750:33;;;;;;:55;1786:19;1750:33;:55;:::i;:::-;;1604:208;;442:2204;;14:127:165;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1277;258:6;266;319:2;307:9;298:7;294:23;290:32;287:52;;;335:1;332;325:12;287:52;361:16;;-1:-1:-1;;;;;406:31:165;;396:42;;386:70;;452:1;449;442:12;386:70;499:2;530:18;;;524:25;475:5;;-1:-1:-1;499:2:165;-1:-1:-1;;;;;598:14:165;;;595:34;;;625:1;622;615:12;595:34;663:6;652:9;648:22;638:32;;708:7;701:4;697:2;693:13;689:27;679:55;;730:1;727;720:12;679:55;759:2;753:9;781:2;777;774:10;771:36;;;787:18;;:::i;:::-;862:2;856:9;830:2;916:13;;-1:-1:-1;;912:22:165;;;936:2;908:31;904:40;892:53;;;960:18;;;980:22;;;957:46;954:72;;;1006:18;;:::i;:::-;1046:10;1042:2;1035:22;1081:2;1073:6;1066:18;1121:7;1116:2;1111;1107;1103:11;1099:20;1096:33;1093:53;;;1142:1;1139;1132:12;1093:53;1164:1;1155:10;;1174:129;1188:2;1185:1;1182:9;1174:129;;;1276:10;;;1272:19;;1266:26;1245:14;;;1241:23;;1234:59;1199:10;;;;1174:129;;;1321:2;1318:1;1315:9;1312:80;;;1380:1;1375:2;1370;1362:6;1358:15;1354:24;1347:35;1312:80;1411:6;1401:16;;;;;;;;146:1277;;;;;:::o;1428:380::-;1507:1;1503:12;;;;1550;;;1571:61;;1625:4;1617:6;1613:17;1603:27;;1571:61;1678:2;1670:6;1667:14;1647:18;1644:38;1641:161;;1724:10;1719:3;1715:20;1712:1;1705:31;1759:4;1756:1;1749:15;1787:4;1784:1;1777:15;1641:161;;1428:380;;;:::o;1939:545::-;2041:2;2036:3;2033:11;2030:448;;;2077:1;2102:5;2098:2;2091:17;2147:4;2143:2;2133:19;2217:2;2205:10;2201:19;2198:1;2194:27;2188:4;2184:38;2253:4;2241:10;2238:20;2235:47;;;-1:-1:-1;2276:4:165;2235:47;2331:2;2326:3;2322:12;2319:1;2315:20;2309:4;2305:31;2295:41;;2386:82;2404:2;2397:5;2394:13;2386:82;;;2449:17;;;2430:1;2419:13;2386:82;;;2390:3;;;2030:448;1939:545;;;:::o;2660:1352::-;2780:10;;-1:-1:-1;;;;;2802:30:165;;2799:56;;;2835:18;;:::i;:::-;2864:97;2954:6;2914:38;2946:4;2940:11;2914:38;:::i;:::-;2908:4;2864:97;:::i;:::-;3016:4;;3080:2;3069:14;;3097:1;3092:663;;;;3799:1;3816:6;3813:89;;;-1:-1:-1;3868:19:165;;;3862:26;3813:89;-1:-1:-1;;2617:1:165;2613:11;;;2609:24;2605:29;2595:40;2641:1;2637:11;;;2592:57;3915:81;;3062:944;;3092:663;1886:1;1879:14;;;1923:4;1910:18;;-1:-1:-1;;3128:20:165;;;3246:236;3260:7;3257:1;3254:14;3246:236;;;3349:19;;;3343:26;3328:42;;3441:27;;;;3409:1;3397:14;;;;3276:19;;3246:236;;;3250:3;3510:6;3501:7;3498:19;3495:201;;;3571:19;;;3565:26;-1:-1:-1;;3654:1:165;3650:14;;;3666:3;3646:24;3642:37;3638:42;3623:58;3608:74;;3495:201;-1:-1:-1;;;;;3742:1:165;3726:14;;;3722:22;3709:36;;-1:-1:-1;2660:1352:165:o;:::-;442:2204:35;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181523060009081526001602090815282822054908290529181207fbf40fac1000000000000000000000000000000000000000000000000000000009093529173ffffffffffffffffffffffffffffffffffffffff9091169063bf40fac19061006d9060846101e2565b602060405180830381865afa15801561008a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ae91906102c5565b905073ffffffffffffffffffffffffffffffffffffffff8116610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f5265736f6c76656444656c656761746550726f78793a2074617267657420616460448201527f6472657373206d75737420626520696e697469616c697a656400000000000000606482015260840160405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16600036604051610182929190610302565b600060405180830381855af49150503d80600081146101bd576040519150601f19603f3d011682016040523d82523d6000602084013e6101c2565b606091505b5090925090508115156001036101da57805160208201f35b805160208201fd5b600060208083526000845481600182811c91508083168061020457607f831692505b858310810361023a577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b878601838152602001818015610257576001811461028b576102b6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616825284151560051b820196506102b6565b60008b81526020902060005b868110156102b057815484820152908501908901610297565b83019750505b50949998505050505050505050565b6000602082840312156102d757600080fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146102fb57600080fd5b9392505050565b818382376000910190815291905056fea164736f6c634300080f000a",
    "sourceMap": "442:2204:35:-:0;;;;;2054:4;2014:14;2031:29;;;:14;:29;;;;;;;;2086:33;;;;;;;2031:99;;;;2014:14;2031:29;;;;;:40;;:99;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2014:116;-1:-1:-1;2149:20:35;;;2141:90;;;;;;;2149:2:165;2141:90:35;;;2131:21:165;2188:2;2168:18;;;2161:30;2227:34;2207:18;;;2200:62;2298:27;2278:18;;;2271:55;2343:19;;2141:90:35;;;;;;;;2304:12;2318:23;2345:6;:19;;2365:8;;2345:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2303:71:35;;-1:-1:-1;2303:71:35;-1:-1:-1;2389:15:35;;;2400:4;2389:15;2385:253;;2483:10;2477:17;2470:4;2458:10;2454:21;2447:48;2385:253;2602:10;2596:17;2589:4;2577:10;2573:21;2566:48;295:1329:165;404:4;433:2;462;451:9;444:21;485:1;518:6;512:13;548:3;570:1;598:9;594:2;590:18;580:28;;658:2;647:9;643:18;680;670:61;;724:4;716:6;712:17;702:27;;670:61;777:2;769:6;766:14;746:18;743:38;740:222;;816:77;811:3;804:90;917:4;914:1;907:15;947:4;942:3;935:17;740:222;1018:18;;;101:19;;;153:4;144:14;1061:18;1088:186;;;;1288:1;1283:315;;;;1054:544;;1088:186;1136:66;1125:9;1121:82;1116:3;1109:95;1254:6;1247:14;1240:22;1237:1;1233:30;1228:3;1224:40;1217:47;;1088:186;;1283:315;242:1;235:14;;;279:4;266:18;;1378:1;1392:165;1406:6;1403:1;1400:13;1392:165;;;1484:14;;1471:11;;;1464:35;1527:16;;;;1421:10;;1392:165;;;1577:11;;;-1:-1:-1;;1054:544:165;-1:-1:-1;1615:3:165;;295:1329;-1:-1:-1;;;;;;;;;295:1329:165:o;1629:313::-;1699:6;1752:2;1740:9;1731:7;1727:23;1723:32;1720:52;;;1768:1;1765;1758:12;1720:52;1800:9;1794:16;1850:42;1843:5;1839:54;1832:5;1829:65;1819:93;;1908:1;1905;1898:12;1819:93;1931:5;1629:313;-1:-1:-1;;;1629:313:165:o;2373:271::-;2556:6;2548;2543:3;2530:33;2512:3;2582:16;;2607:13;;;2582:16;2373:271;-1:-1:-1;2373:271:165:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AddressManager\",\"name\":\"_addressManager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_implementationName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"custom:legacy\":\"@title ResolvedDelegateProxy\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_addressManager\":\"Address of the AddressManager.\",\"_implementationName\":\"implementationName of the contract to proxy to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ResolvedDelegateProxy is a legacy proxy contract that makes use of the AddressManager to         resolve the implementation address. We're maintaining this contract for backwards         compatibility so we can manage all legacy proxies where necessary.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/legacy/ResolvedDelegateProxy.sol\":\"ResolvedDelegateProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/legacy/AddressManager.sol\":{\"keccak256\":\"0x1554e4da3af37bb795b99382aab7b17f790690480e1f81c0ea9603071678cd57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1f67dc583d4737f4cda9d5197c8830cb5f4c0516624a7d7330e4e4ce6249407\",\"dweb:/ipfs/QmQZXHr6X9sF3byKvB3H83xCnvp7B4yqvVSFNo1E2XXwJj\"]},\"contracts/legacy/ResolvedDelegateProxy.sol\":{\"keccak256\":\"0x90384a255dce9cff8c8785fa8bda804c80ebc64bc885a8de7f282134feec578f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88272d1373bf897167d68be8aa91598090bc4663e10a636314ed5bed0038af12\",\"dweb:/ipfs/QmWbUTaRGT4zhuYh1MECg8pRdJ2S9AdoCPFUxKEp63xGJn\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract AddressManager",
              "name": "_addressManager",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_implementationName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_addressManager": "Address of the AddressManager.",
              "_implementationName": "implementationName of the contract to proxy to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/legacy/ResolvedDelegateProxy.sol": "ResolvedDelegateProxy"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/legacy/AddressManager.sol": {
        "keccak256": "0x1554e4da3af37bb795b99382aab7b17f790690480e1f81c0ea9603071678cd57",
        "urls": [
          "bzz-raw://c1f67dc583d4737f4cda9d5197c8830cb5f4c0516624a7d7330e4e4ce6249407",
          "dweb:/ipfs/QmQZXHr6X9sF3byKvB3H83xCnvp7B4yqvVSFNo1E2XXwJj"
        ],
        "license": "MIT"
      },
      "contracts/legacy/ResolvedDelegateProxy.sol": {
        "keccak256": "0x90384a255dce9cff8c8785fa8bda804c80ebc64bc885a8de7f282134feec578f",
        "urls": [
          "bzz-raw://88272d1373bf897167d68be8aa91598090bc4663e10a636314ed5bed0038af12",
          "dweb:/ipfs/QmWbUTaRGT4zhuYh1MECg8pRdJ2S9AdoCPFUxKEp63xGJn"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 6825,
        "contract": "contracts/legacy/ResolvedDelegateProxy.sol:ResolvedDelegateProxy",
        "label": "implementationName",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 6831,
        "contract": "contracts/legacy/ResolvedDelegateProxy.sol:ResolvedDelegateProxy",
        "label": "addressManager",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(AddressManager)6115)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AddressManager)6115": {
        "encoding": "inplace",
        "label": "contract AddressManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(AddressManager)6115)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract AddressManager)",
        "numberOfBytes": "32",
        "value": "t_contract(AddressManager)6115"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "notice": "ResolvedDelegateProxy is a legacy proxy contract that makes use of the AddressManager to         resolve the implementation address. We're maintaining this contract for backwards         compatibility so we can manage all legacy proxies where necessary."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_addressManager": "Address of the AddressManager.",
          "_implementationName": "implementationName of the contract to proxy to."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "contracts/legacy/ResolvedDelegateProxy.sol",
    "id": 6912,
    "exportedSymbols": {
      "AddressManager": [
        6115
      ],
      "ResolvedDelegateProxy": [
        6911
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2615:35",
    "nodes": [
      {
        "id": 6817,
        "nodeType": "PragmaDirective",
        "src": "32:23:35",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 6819,
        "nodeType": "ImportDirective",
        "src": "57:54:35",
        "nodes": [],
        "absolutePath": "contracts/legacy/AddressManager.sol",
        "file": "./AddressManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 6912,
        "sourceUnit": 6116,
        "symbolAliases": [
          {
            "foreign": {
              "id": 6818,
              "name": "AddressManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 6115,
              "src": "66:14:35",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 6911,
        "nodeType": "ContractDefinition",
        "src": "442:2204:35",
        "nodes": [
          {
            "id": 6825,
            "nodeType": "VariableDeclaration",
            "src": "974:53:35",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6821,
              "nodeType": "StructuredDocumentation",
              "src": "479:490:35",
              "text": " @notice Mapping used to store the implementation name that corresponds to this contract. A\n         mapping was originally used as a way to bypass the same issue normally solved by\n         storing the implementation address in a specific storage slot that does not conflict\n         with any other storage slot. Generally NOT a safe solution but works as long as the\n         implementation does not also keep a mapping in the first storage slot."
            },
            "mutability": "mutable",
            "name": "implementationName",
            "nameLocation": "1009:18:35",
            "scope": 6911,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 6824,
              "keyType": {
                "id": 6822,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "982:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "974:26:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 6823,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "993:6:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 6831,
            "nodeType": "VariableDeclaration",
            "src": "1380:57:35",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 6826,
              "nodeType": "StructuredDocumentation",
              "src": "1034:341:35",
              "text": " @notice Mapping used to store the address of the AddressManager contract where the\n         implementation address will be resolved from. Same concept here as with the above\n         mapping. Also generally unsafe but fine if the implementation doesn't keep a mapping\n         in the second storage slot."
            },
            "mutability": "mutable",
            "name": "addressManager",
            "nameLocation": "1423:14:35",
            "scope": 6911,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_AddressManager_$6115_$",
              "typeString": "mapping(address => contract AddressManager)"
            },
            "typeName": {
              "id": 6830,
              "keyType": {
                "id": 6827,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1388:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1380:34:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_AddressManager_$6115_$",
                "typeString": "mapping(address => contract AddressManager)"
              },
              "valueType": {
                "id": 6829,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 6828,
                  "name": "AddressManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 6115,
                  "src": "1399:14:35"
                },
                "referencedDeclaration": 6115,
                "src": "1399:14:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_AddressManager_$6115",
                  "typeString": "contract AddressManager"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 6859,
            "nodeType": "FunctionDefinition",
            "src": "1604:208:35",
            "nodes": [],
            "body": {
              "id": 6858,
              "nodeType": "Block",
              "src": "1683:129:35",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 6847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6840,
                        "name": "addressManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6831,
                        "src": "1693:14:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_AddressManager_$6115_$",
                          "typeString": "mapping(address => contract AddressManager)"
                        }
                      },
                      "id": 6845,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 6843,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1716:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$6911",
                              "typeString": "contract ResolvedDelegateProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$6911",
                              "typeString": "contract ResolvedDelegateProxy"
                            }
                          ],
                          "id": 6842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1708:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6841,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1708:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1708:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1693:29:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddressManager_$6115",
                        "typeString": "contract AddressManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6846,
                      "name": "_addressManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6835,
                      "src": "1725:15:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddressManager_$6115",
                        "typeString": "contract AddressManager"
                      }
                    },
                    "src": "1693:47:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressManager_$6115",
                      "typeString": "contract AddressManager"
                    }
                  },
                  "id": 6848,
                  "nodeType": "ExpressionStatement",
                  "src": "1693:47:35"
                },
                {
                  "expression": {
                    "id": 6856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 6849,
                        "name": "implementationName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6825,
                        "src": "1750:18:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 6854,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 6852,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1777:4:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$6911",
                              "typeString": "contract ResolvedDelegateProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$6911",
                              "typeString": "contract ResolvedDelegateProxy"
                            }
                          ],
                          "id": 6851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1769:7:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6850,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1769:7:35",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1769:13:35",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1750:33:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 6855,
                      "name": "_implementationName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6837,
                      "src": "1786:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1750:55:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 6857,
                  "nodeType": "ExpressionStatement",
                  "src": "1750:55:35"
                }
              ]
            },
            "documentation": {
              "id": 6832,
              "nodeType": "StructuredDocumentation",
              "src": "1444:155:35",
              "text": " @param _addressManager  Address of the AddressManager.\n @param _implementationName implementationName of the contract to proxy to."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6835,
                  "mutability": "mutable",
                  "name": "_addressManager",
                  "nameLocation": "1631:15:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6859,
                  "src": "1616:30:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AddressManager_$6115",
                    "typeString": "contract AddressManager"
                  },
                  "typeName": {
                    "id": 6834,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 6833,
                      "name": "AddressManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 6115,
                      "src": "1616:14:35"
                    },
                    "referencedDeclaration": 6115,
                    "src": "1616:14:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressManager_$6115",
                      "typeString": "contract AddressManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6837,
                  "mutability": "mutable",
                  "name": "_implementationName",
                  "nameLocation": "1662:19:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 6859,
                  "src": "1648:33:35",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1648:6:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1615:67:35"
            },
            "returnParameters": {
              "id": 6839,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1683:0:35"
            },
            "scope": 6911,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 6910,
            "nodeType": "FunctionDefinition",
            "src": "1976:668:35",
            "nodes": [],
            "body": {
              "id": 6909,
              "nodeType": "Block",
              "src": "2004:640:35",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    6864
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6864,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "2022:6:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6909,
                      "src": "2014:14:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 6863,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2014:7:35",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6880,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 6872,
                              "name": "implementationName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6825,
                              "src": "2086:18:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                "typeString": "mapping(address => string storage ref)"
                              }
                            },
                            "id": 6877,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 6875,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2113:4:35",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$6911",
                                    "typeString": "contract ResolvedDelegateProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$6911",
                                    "typeString": "contract ResolvedDelegateProxy"
                                  }
                                ],
                                "id": 6874,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2105:7:35",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 6873,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2105:7:35",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 6876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2105:13:35",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2086:33:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "id": 6878,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2085:35:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 6865,
                          "name": "addressManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6831,
                          "src": "2031:14:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_AddressManager_$6115_$",
                            "typeString": "mapping(address => contract AddressManager)"
                          }
                        },
                        "id": 6870,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 6868,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2054:4:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$6911",
                                "typeString": "contract ResolvedDelegateProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$6911",
                                "typeString": "contract ResolvedDelegateProxy"
                              }
                            ],
                            "id": 6867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2046:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6866,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2046:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2046:13:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2031:29:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AddressManager_$6115",
                          "typeString": "contract AddressManager"
                        }
                      },
                      "id": 6871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 6098,
                      "src": "2031:40:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 6879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:99:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2014:116:35"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 6887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 6882,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6864,
                          "src": "2149:6:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 6885,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2167:1:35",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 6884,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2159:7:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6883,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2159:7:35",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2159:10:35",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2149:20:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265736f6c76656444656c656761746550726f78793a207461726765742061646472657373206d75737420626520696e697469616c697a6564",
                        "id": 6888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2171:59:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d854a8e116e0f3da73003360f03ac382ae8205c4798da9ecd48d43a1cc0a5e7",
                          "typeString": "literal_string \"ResolvedDelegateProxy: target address must be initialized\""
                        },
                        "value": "ResolvedDelegateProxy: target address must be initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d854a8e116e0f3da73003360f03ac382ae8205c4798da9ecd48d43a1cc0a5e7",
                          "typeString": "literal_string \"ResolvedDelegateProxy: target address must be initialized\""
                        }
                      ],
                      "id": 6881,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2141:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 6889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2141:90:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6890,
                  "nodeType": "ExpressionStatement",
                  "src": "2141:90:35"
                },
                {
                  "assignments": [
                    6892,
                    6894
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 6892,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2309:7:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6909,
                      "src": "2304:12:35",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 6891,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2304:4:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 6894,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "2331:10:35",
                      "nodeType": "VariableDeclaration",
                      "scope": 6909,
                      "src": "2318:23:35",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 6893,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2318:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 6900,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 6897,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2365:3:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 6898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "2365:8:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 6895,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6864,
                        "src": "2345:6:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 6896,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2345:19:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 6899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2345:29:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2303:71:35"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 6903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 6901,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6892,
                      "src": "2389:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 6902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2400:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2389:15:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 6907,
                    "nodeType": "Block",
                    "src": "2525:113:35",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2548:80:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "2577:10:35"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2589:4:35",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2573:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2573:21:35"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "2602:10:35"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2596:5:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2596:17:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2566:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2566:48:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2566:48:35"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 6894,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2577:10:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 6894,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2602:10:35",
                            "valueSize": 1
                          }
                        ],
                        "id": 6906,
                        "nodeType": "InlineAssembly",
                        "src": "2539:89:35"
                      }
                    ]
                  },
                  "id": 6908,
                  "nodeType": "IfStatement",
                  "src": "2385:253:35",
                  "trueBody": {
                    "id": 6905,
                    "nodeType": "Block",
                    "src": "2406:113:35",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2429:80:35",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "2458:10:35"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2470:4:35",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2454:3:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2454:21:35"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "2483:10:35"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2477:5:35"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2477:17:35"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "2447:6:35"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2447:48:35"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2447:48:35"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 6894,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2458:10:35",
                            "valueSize": 1
                          },
                          {
                            "declaration": 6894,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2483:10:35",
                            "valueSize": 1
                          }
                        ],
                        "id": 6904,
                        "nodeType": "InlineAssembly",
                        "src": "2420:89:35"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 6860,
              "nodeType": "StructuredDocumentation",
              "src": "1818:100:35",
              "text": " @notice Fallback, performs a delegatecall to the resolved implementation address."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 6861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1984:2:35"
            },
            "returnParameters": {
              "id": 6862,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2004:0:35"
            },
            "scope": 6911,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ResolvedDelegateProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 6820,
          "nodeType": "StructuredDocumentation",
          "src": "113:328:35",
          "text": " @custom:legacy\n @title ResolvedDelegateProxy\n @notice ResolvedDelegateProxy is a legacy proxy contract that makes use of the AddressManager to\n         resolve the implementation address. We're maintaining this contract for backwards\n         compatibility so we can manage all legacy proxies where necessary."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          6911
        ],
        "name": "ResolvedDelegateProxy",
        "nameLocation": "451:21:35",
        "scope": 6912,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 35
}