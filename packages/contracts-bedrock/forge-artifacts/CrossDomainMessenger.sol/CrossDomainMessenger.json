{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "FailedRelayedMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "RelayedMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "messageNonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "SentMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SentMessageExtension1",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSAGE_VERSION",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_GAS_CALLDATA_OVERHEAD",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_GAS_CONSTANT_OVERHEAD",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_MESSENGER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        }
      ],
      "name": "baseGas",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "failedMessages",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "relayMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "successfulMessages",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xDomainMessageSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MESSAGE_VERSION()": "3f827a5a",
    "MIN_GAS_CALLDATA_OVERHEAD()": "028f85f7",
    "MIN_GAS_CONSTANT_OVERHEAD()": "7dea7cc3",
    "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()": "0c568498",
    "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()": "2828d7e8",
    "OTHER_MESSENGER()": "9fce812c",
    "baseGas(bytes,uint32)": "b28ade25",
    "failedMessages(bytes32)": "a4e7f8bd",
    "messageNonce()": "ecc70428",
    "relayMessage(uint256,address,address,uint256,uint256,bytes)": "d764ad0b",
    "sendMessage(address,bytes,uint32)": "3dbb202b",
    "successfulMessages(bytes32)": "b1b1b209",
    "xDomainMessageSender()": "6e296e45"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SentMessageExtension1\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSAGE_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CALLDATA_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CONSTANT_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_MESSENGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"baseGas\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"relayMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"successfulMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:upgradeable\":\"@title CrossDomainMessenger\",\"events\":{\"FailedRelayedMessage(bytes32)\":{\"params\":{\"msgHash\":\"Hash of the message that failed to be relayed.\"}},\"RelayedMessage(bytes32)\":{\"params\":{\"msgHash\":\"Hash of the message that was relayed.\"}},\"SentMessage(address,address,bytes,uint256,uint256)\":{\"params\":{\"gasLimit\":\"Minimum gas limit that the message can be executed with.\",\"message\":\"Message to trigger the recipient address with.\",\"messageNonce\":\"Unique nonce attached to the message.\",\"sender\":\"Address of the sender of the message.\",\"target\":\"Address of the recipient of the message.\"}},\"SentMessageExtension1(address,uint256)\":{\"params\":{\"sender\":\"Address of the sender of the message.\",\"value\":\"ETH value sent along with the message to the recipient.\"}}},\"kind\":\"dev\",\"methods\":{\"baseGas(bytes,uint32)\":{\"params\":{\"_message\":\"Message to compute the amount of required gas for.\",\"_minGasLimit\":\"Minimum desired gas limit when message goes to target.\"},\"returns\":{\"_0\":\"Amount of gas required to guarantee message receipt.\"}},\"constructor\":{\"params\":{\"_otherMessenger\":\"Address of the messenger on the paired chain.\"}},\"messageNonce()\":{\"returns\":{\"_0\":\"Nonce of the next message to be sent, with added message version.\"}},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"params\":{\"_message\":\"Message to send to the target.\",\"_minGasLimit\":\"Minimum amount of gas that the message can be executed with.\",\"_nonce\":\"Nonce of the message being relayed.\",\"_sender\":\"Address of the user who sent the message.\",\"_target\":\"Address that the message is targeted at.\",\"_value\":\"ETH value to send with the message.\"}},\"sendMessage(address,bytes,uint32)\":{\"params\":{\"_message\":\"Message to trigger the target address with.\",\"_minGasLimit\":\"Minimum gas limit that the message can be executed with.\",\"_target\":\"Target contract or wallet address.\"}},\"xDomainMessageSender()\":{\"returns\":{\"_0\":\"Address of the sender of the currently executing message on the other chain.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"FailedRelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message fails to be relayed on this chain.\"},\"RelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message is successfully relayed on this chain.\"},\"SentMessage(address,address,bytes,uint256,uint256)\":{\"notice\":\"Emitted whenever a message is sent to the other chain.\"},\"SentMessageExtension1(address,uint256)\":{\"notice\":\"Additional event data to emit, required as of Bedrock. Cannot be merged with the         SentMessage event without breaking the ABI of this contract, this is good enough.\"}},\"kind\":\"user\",\"methods\":{\"MESSAGE_VERSION()\":{\"notice\":\"Current message version identifier.\"},\"MIN_GAS_CALLDATA_OVERHEAD()\":{\"notice\":\"Extra gas added to base gas for each byte of calldata in a message.\"},\"MIN_GAS_CONSTANT_OVERHEAD()\":{\"notice\":\"Constant overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()\":{\"notice\":\"Denominator for dynamic overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()\":{\"notice\":\"Numerator for dynamic overhead added to the base gas for a message.\"},\"OTHER_MESSENGER()\":{\"notice\":\"Address of the paired CrossDomainMessenger contract on the other chain.\"},\"baseGas(bytes,uint32)\":{\"notice\":\"Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely.\"},\"failedMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt.\"},\"messageNonce()\":{\"notice\":\"Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures.\"},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"notice\":\"Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed.\"},\"sendMessage(address,bytes,uint32)\":{\"notice\":\"Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function).\"},\"successfulMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again.\"},\"xDomainMessageSender()\":{\"notice\":\"Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it.\"}},\"notice\":\"CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2         cross-chain messenger contracts. It's designed to be a universal interface that only         needs to be extended slightly to provide low-level message passing functionality on each         chain it's deployed on. Currently only designed for message passing between two paired         chains and does not support one-to-many interactions.         Any changes to this contract MUST result in a semver bump for contracts that inherit it.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/universal/CrossDomainMessenger.sol\":\"CrossDomainMessenger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0x09a0d1616d822d77142123e6d1262be7ee71ee840e6022f75a4aa0c508659a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfbb81c230c0032a4d1c3e37b32708e82523c53b7b3b0df5558335c5c0949ee\",\"dweb:/ipfs/QmcRoHQTRxEbbngT1o9yPC5FfQiqqH8P1nTAB7RzgQbKVj\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b\",\"dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0\",\"dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X\"]},\"contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xbb0621c028c18e9d5a54cf1a8136cf2e77f161de48aeb8d911e230f6b280c9ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924ecc629c7642bc19e2f8a390f1b946d22862c8889453da681b5bc1a45d7703\",\"dweb:/ipfs/QmbNknQ8pzssXDXGVjXxzZ8zh1YnNCWtRJVepiM1TnqoqQ\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef\",\"dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x3d8194c9e05aea4a9cefa1833ab4f3e95749b685ccf9a04719d235cac2fa3774\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0043e95acd7c29de3836e98cdcc4292eef201e3ebfab2d768bcfe47f800df8d\",\"dweb:/ipfs/QmTZNQVBdodruQ2x38nhERY9DFjU9oEFU21j5Atf7HUi3U\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FailedRelayedMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RelayedMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "messageNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SentMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SentMessageExtension1",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSAGE_VERSION",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_GAS_CALLDATA_OVERHEAD",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_GAS_CONSTANT_OVERHEAD",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_MESSENGER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "baseGas",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "failedMessages",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messageNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "relayMessage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sendMessage"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "successfulMessages",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "xDomainMessageSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "baseGas(bytes,uint32)": {
            "params": {
              "_message": "Message to compute the amount of required gas for.",
              "_minGasLimit": "Minimum desired gas limit when message goes to target."
            },
            "returns": {
              "_0": "Amount of gas required to guarantee message receipt."
            }
          },
          "constructor": {
            "params": {
              "_otherMessenger": "Address of the messenger on the paired chain."
            }
          },
          "messageNonce()": {
            "returns": {
              "_0": "Nonce of the next message to be sent, with added message version."
            }
          },
          "relayMessage(uint256,address,address,uint256,uint256,bytes)": {
            "params": {
              "_message": "Message to send to the target.",
              "_minGasLimit": "Minimum amount of gas that the message can be executed with.",
              "_nonce": "Nonce of the message being relayed.",
              "_sender": "Address of the user who sent the message.",
              "_target": "Address that the message is targeted at.",
              "_value": "ETH value to send with the message."
            }
          },
          "sendMessage(address,bytes,uint32)": {
            "params": {
              "_message": "Message to trigger the target address with.",
              "_minGasLimit": "Minimum gas limit that the message can be executed with.",
              "_target": "Target contract or wallet address."
            }
          },
          "xDomainMessageSender()": {
            "returns": {
              "_0": "Address of the sender of the currently executing message on the other chain."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSAGE_VERSION()": {
            "notice": "Current message version identifier."
          },
          "MIN_GAS_CALLDATA_OVERHEAD()": {
            "notice": "Extra gas added to base gas for each byte of calldata in a message."
          },
          "MIN_GAS_CONSTANT_OVERHEAD()": {
            "notice": "Constant overhead added to the base gas for a message."
          },
          "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()": {
            "notice": "Denominator for dynamic overhead added to the base gas for a message."
          },
          "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()": {
            "notice": "Numerator for dynamic overhead added to the base gas for a message."
          },
          "OTHER_MESSENGER()": {
            "notice": "Address of the paired CrossDomainMessenger contract on the other chain."
          },
          "baseGas(bytes,uint32)": {
            "notice": "Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely."
          },
          "failedMessages(bytes32)": {
            "notice": "Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt."
          },
          "messageNonce()": {
            "notice": "Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures."
          },
          "relayMessage(uint256,address,address,uint256,uint256,bytes)": {
            "notice": "Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed."
          },
          "sendMessage(address,bytes,uint32)": {
            "notice": "Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function)."
          },
          "successfulMessages(bytes32)": {
            "notice": "Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again."
          },
          "xDomainMessageSender()": {
            "notice": "Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/universal/CrossDomainMessenger.sol": "CrossDomainMessenger"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libraries/Constants.sol": {
        "keccak256": "0x09a0d1616d822d77142123e6d1262be7ee71ee840e6022f75a4aa0c508659a99",
        "urls": [
          "bzz-raw://7bfbb81c230c0032a4d1c3e37b32708e82523c53b7b3b0df5558335c5c0949ee",
          "dweb:/ipfs/QmcRoHQTRxEbbngT1o9yPC5FfQiqqH8P1nTAB7RzgQbKVj"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018",
        "urls": [
          "bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b",
          "dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Hashing.sol": {
        "keccak256": "0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c",
        "urls": [
          "bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0",
          "dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X"
        ],
        "license": "MIT"
      },
      "contracts/libraries/SafeCall.sol": {
        "keccak256": "0xbb0621c028c18e9d5a54cf1a8136cf2e77f161de48aeb8d911e230f6b280c9ed",
        "urls": [
          "bzz-raw://924ecc629c7642bc19e2f8a390f1b946d22862c8889453da681b5bc1a45d7703",
          "dweb:/ipfs/QmbNknQ8pzssXDXGVjXxzZ8zh1YnNCWtRJVepiM1TnqoqQ"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Types.sol": {
        "keccak256": "0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a",
        "urls": [
          "bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef",
          "dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      },
      "contracts/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x3d8194c9e05aea4a9cefa1833ab4f3e95749b685ccf9a04719d235cac2fa3774",
        "urls": [
          "bzz-raw://c0043e95acd7c29de3836e98cdcc4292eef201e3ebfab2d768bcfe47f800df8d",
          "dweb:/ipfs/QmTZNQVBdodruQ2x38nhERY9DFjU9oEFU21j5Atf7HUi3U"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 42264,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_0_0_20",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 45590,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 45593,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 42271,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_1_0_1600",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 42274,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_51_0_20",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 42279,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_52_0_1568",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 42282,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_101_0_1",
        "offset": 0,
        "slot": "101",
        "type": "t_bool"
      },
      {
        "astId": 42287,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_102_0_1568",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 42290,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_151_0_32",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 42295,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "__gap_reentrancy_guard",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 42300,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_201_0_32",
        "offset": 0,
        "slot": "201",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 42305,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "spacer_202_0_32",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 42351,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "successfulMessages",
        "offset": 0,
        "slot": "203",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 42354,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "xDomainMsgSender",
        "offset": 0,
        "slot": "204",
        "type": "t_address"
      },
      {
        "astId": 42357,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "msgNonce",
        "offset": 0,
        "slot": "205",
        "type": "t_uint240"
      },
      {
        "astId": 42362,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "failedMessages",
        "offset": 0,
        "slot": "206",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 42367,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "reentrancyLocks",
        "offset": 0,
        "slot": "207",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 42372,
        "contract": "contracts/universal/CrossDomainMessenger.sol:CrossDomainMessenger",
        "label": "__gap",
        "offset": 0,
        "slot": "208",
        "type": "t_array(t_uint256)41_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)41_storage": {
        "encoding": "inplace",
        "label": "uint256[41]",
        "numberOfBytes": "1312",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint240": {
        "encoding": "inplace",
        "label": "uint240",
        "numberOfBytes": "30"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSAGE_VERSION()": {
        "notice": "Current message version identifier."
      },
      "MIN_GAS_CALLDATA_OVERHEAD()": {
        "notice": "Extra gas added to base gas for each byte of calldata in a message."
      },
      "MIN_GAS_CONSTANT_OVERHEAD()": {
        "notice": "Constant overhead added to the base gas for a message."
      },
      "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()": {
        "notice": "Denominator for dynamic overhead added to the base gas for a message."
      },
      "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()": {
        "notice": "Numerator for dynamic overhead added to the base gas for a message."
      },
      "OTHER_MESSENGER()": {
        "notice": "Address of the paired CrossDomainMessenger contract on the other chain."
      },
      "baseGas(bytes,uint32)": {
        "notice": "Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely."
      },
      "failedMessages(bytes32)": {
        "notice": "Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt."
      },
      "messageNonce()": {
        "notice": "Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures."
      },
      "relayMessage(uint256,address,address,uint256,uint256,bytes)": {
        "notice": "Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed."
      },
      "sendMessage(address,bytes,uint32)": {
        "notice": "Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function)."
      },
      "successfulMessages(bytes32)": {
        "notice": "Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again."
      },
      "xDomainMessageSender()": {
        "notice": "Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it."
      }
    },
    "events": {
      "FailedRelayedMessage(bytes32)": {
        "notice": "Emitted whenever a message fails to be relayed on this chain."
      },
      "RelayedMessage(bytes32)": {
        "notice": "Emitted whenever a message is successfully relayed on this chain."
      },
      "SentMessage(address,address,bytes,uint256,uint256)": {
        "notice": "Emitted whenever a message is sent to the other chain."
      },
      "SentMessageExtension1(address,uint256)": {
        "notice": "Additional event data to emit, required as of Bedrock. Cannot be merged with the         SentMessage event without breaking the ABI of this contract, this is good enough."
      }
    },
    "notice": "CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2         cross-chain messenger contracts. It's designed to be a universal interface that only         needs to be extended slightly to provide low-level message passing functionality on each         chain it's deployed on. Currently only designed for message passing between two paired         chains and does not support one-to-many interactions.         Any changes to this contract MUST result in a semver bump for contracts that inherit it."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "baseGas(bytes,uint32)": {
        "params": {
          "_message": "Message to compute the amount of required gas for.",
          "_minGasLimit": "Minimum desired gas limit when message goes to target."
        },
        "returns": {
          "_0": "Amount of gas required to guarantee message receipt."
        }
      },
      "constructor": {
        "params": {
          "_otherMessenger": "Address of the messenger on the paired chain."
        }
      },
      "messageNonce()": {
        "returns": {
          "_0": "Nonce of the next message to be sent, with added message version."
        }
      },
      "relayMessage(uint256,address,address,uint256,uint256,bytes)": {
        "params": {
          "_message": "Message to send to the target.",
          "_minGasLimit": "Minimum amount of gas that the message can be executed with.",
          "_nonce": "Nonce of the message being relayed.",
          "_sender": "Address of the user who sent the message.",
          "_target": "Address that the message is targeted at.",
          "_value": "ETH value to send with the message."
        }
      },
      "sendMessage(address,bytes,uint32)": {
        "params": {
          "_message": "Message to trigger the target address with.",
          "_minGasLimit": "Minimum gas limit that the message can be executed with.",
          "_target": "Target contract or wallet address."
        }
      },
      "xDomainMessageSender()": {
        "returns": {
          "_0": "Address of the sender of the currently executing message on the other chain."
        }
      }
    },
    "events": {
      "FailedRelayedMessage(bytes32)": {
        "params": {
          "msgHash": "Hash of the message that failed to be relayed."
        }
      },
      "RelayedMessage(bytes32)": {
        "params": {
          "msgHash": "Hash of the message that was relayed."
        }
      },
      "SentMessage(address,address,bytes,uint256,uint256)": {
        "params": {
          "gasLimit": "Minimum gas limit that the message can be executed with.",
          "message": "Message to trigger the recipient address with.",
          "messageNonce": "Unique nonce attached to the message.",
          "sender": "Address of the sender of the message.",
          "target": "Address of the recipient of the message."
        }
      },
      "SentMessageExtension1(address,uint256)": {
        "params": {
          "sender": "Address of the sender of the message.",
          "value": "ETH value sent along with the message to the recipient."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "contracts/universal/CrossDomainMessenger.sol",
    "id": 42782,
    "exportedSymbols": {
      "Constants": [
        7221
      ],
      "CrossDomainMessenger": [
        42781
      ],
      "CrossDomainMessengerLegacySpacer0": [
        42265
      ],
      "CrossDomainMessengerLegacySpacer1": [
        42306
      ],
      "Encoding": [
        7514
      ],
      "Hashing": [
        7736
      ],
      "Initializable": [
        45734
      ],
      "SafeCall": [
        7837
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:19114:99",
    "nodes": [
      {
        "id": 42250,
        "nodeType": "PragmaDirective",
        "src": "32:23:99",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 42252,
        "nodeType": "ImportDirective",
        "src": "57:98:99",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42782,
        "sourceUnit": 45735,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42251,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45734,
              "src": "66:13:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42254,
        "nodeType": "ImportDirective",
        "src": "156:53:99",
        "nodes": [],
        "absolutePath": "contracts/libraries/SafeCall.sol",
        "file": "../libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42782,
        "sourceUnit": 7838,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42253,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7837,
              "src": "165:8:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42256,
        "nodeType": "ImportDirective",
        "src": "210:51:99",
        "nodes": [],
        "absolutePath": "contracts/libraries/Hashing.sol",
        "file": "../libraries/Hashing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42782,
        "sourceUnit": 7737,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42255,
              "name": "Hashing",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7736,
              "src": "219:7:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42258,
        "nodeType": "ImportDirective",
        "src": "262:53:99",
        "nodes": [],
        "absolutePath": "contracts/libraries/Encoding.sol",
        "file": "../libraries/Encoding.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42782,
        "sourceUnit": 7515,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42257,
              "name": "Encoding",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7514,
              "src": "271:8:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42260,
        "nodeType": "ImportDirective",
        "src": "316:55:99",
        "nodes": [],
        "absolutePath": "contracts/libraries/Constants.sol",
        "file": "../libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42782,
        "sourceUnit": 7222,
        "symbolAliases": [
          {
            "foreign": {
              "id": 42259,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7221,
              "src": "325:9:99",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 42265,
        "nodeType": "ContractDefinition",
        "src": "673:210:99",
        "nodes": [
          {
            "id": 42264,
            "nodeType": "VariableDeclaration",
            "src": "851:29:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42262,
              "nodeType": "StructuredDocumentation",
              "src": "722:124:99",
              "text": " @custom:legacy\n @custom:spacer libAddressManager\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_0_0_20",
            "nameLocation": "867:13:99",
            "scope": 42265,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42263,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "851:7:99",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CrossDomainMessengerLegacySpacer0",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 42261,
          "nodeType": "StructuredDocumentation",
          "src": "373:299:99",
          "text": " @custom:legacy\n @title CrossDomainMessengerLegacySpacer0\n @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n         libAddressManager variable used to exist. Must be the first contract in the inheritance\n         tree of the CrossDomainMessenger."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42265
        ],
        "name": "CrossDomainMessengerLegacySpacer0",
        "nameLocation": "682:33:99",
        "scope": 42782,
        "usedErrors": []
      },
      {
        "id": 42306,
        "nodeType": "ContractDefinition",
        "src": "1210:1900:99",
        "nodes": [
          {
            "id": 42271,
            "nodeType": "VariableDeclaration",
            "src": "1464:35:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42267,
              "nodeType": "StructuredDocumentation",
              "src": "1259:200:99",
              "text": " @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         ContextUpgradable via OwnableUpgradeable."
            },
            "mutability": "mutable",
            "name": "spacer_1_0_1600",
            "nameLocation": "1484:15:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$50_storage",
              "typeString": "uint256[50]"
            },
            "typeName": {
              "baseType": {
                "id": 42268,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1464:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 42270,
              "length": {
                "hexValue": "3530",
                "id": 42269,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1472:2:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_50_by_1",
                  "typeString": "int_const 50"
                },
                "value": "50"
              },
              "nodeType": "ArrayTypeName",
              "src": "1464:11:99",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$50_storage_ptr",
                "typeString": "uint256[50]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42274,
            "nodeType": "VariableDeclaration",
            "src": "1682:30:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42272,
              "nodeType": "StructuredDocumentation",
              "src": "1506:171:99",
              "text": " @custom:legacy\n @custom:spacer _owner\n @notice Spacer for backwards compatibility.\n         Come from OpenZeppelin OwnableUpgradeable."
            },
            "mutability": "mutable",
            "name": "spacer_51_0_20",
            "nameLocation": "1698:14:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42273,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1682:7:99",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42279,
            "nodeType": "VariableDeclaration",
            "src": "1917:36:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42275,
              "nodeType": "StructuredDocumentation",
              "src": "1719:193:99",
              "text": " @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         ContextUpgradable via PausableUpgradable."
            },
            "mutability": "mutable",
            "name": "spacer_52_0_1568",
            "nameLocation": "1937:16:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 42276,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1917:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 42278,
              "length": {
                "hexValue": "3439",
                "id": 42277,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "1925:2:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "1917:11:99",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42282,
            "nodeType": "VariableDeclaration",
            "src": "2138:27:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42280,
              "nodeType": "StructuredDocumentation",
              "src": "1960:173:99",
              "text": " @custom:legacy\n @custom:spacer _paused\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         PausableUpgradable."
            },
            "mutability": "mutable",
            "name": "spacer_101_0_1",
            "nameLocation": "2151:14:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 42281,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2138:4:99",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42287,
            "nodeType": "VariableDeclaration",
            "src": "2348:37:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42283,
              "nodeType": "StructuredDocumentation",
              "src": "2172:171:99",
              "text": " @custom:legacy\n @custom:spacer __gap\n @notice Spacer for backwards compatibility. Comes from OpenZeppelin\n         PausableUpgradable."
            },
            "mutability": "mutable",
            "name": "spacer_102_0_1568",
            "nameLocation": "2368:17:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 42284,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2348:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 42286,
              "length": {
                "hexValue": "3439",
                "id": 42285,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2356:2:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "2348:11:99",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42290,
            "nodeType": "VariableDeclaration",
            "src": "2548:31:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42288,
              "nodeType": "StructuredDocumentation",
              "src": "2392:151:99",
              "text": " @custom:legacy\n @custom:spacer ReentrancyGuardUpgradeable's `_status` field.\n @notice Spacer for backwards compatibility"
            },
            "mutability": "mutable",
            "name": "spacer_151_0_32",
            "nameLocation": "2564:15:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42289,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2548:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42295,
            "nodeType": "VariableDeclaration",
            "src": "2701:42:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42291,
              "nodeType": "StructuredDocumentation",
              "src": "2586:110:99",
              "text": " @custom:spacer ReentrancyGuardUpgradeable\n @notice Spacer for backwards compatibility"
            },
            "mutability": "mutable",
            "name": "__gap_reentrancy_guard",
            "nameLocation": "2721:22:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 42292,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2701:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 42294,
              "length": {
                "hexValue": "3439",
                "id": 42293,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2709:2:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "2701:11:99",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42300,
            "nodeType": "VariableDeclaration",
            "src": "2877:48:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42296,
              "nodeType": "StructuredDocumentation",
              "src": "2750:122:99",
              "text": " @custom:legacy\n @custom:spacer blockedMessages\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_201_0_32",
            "nameLocation": "2910:15:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 42299,
              "keyType": {
                "id": 42297,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2885:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2877:24:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 42298,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2896:4:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 42305,
            "nodeType": "VariableDeclaration",
            "src": "3059:48:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42301,
              "nodeType": "StructuredDocumentation",
              "src": "2932:122:99",
              "text": " @custom:legacy\n @custom:spacer relayedMessages\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_202_0_32",
            "nameLocation": "3092:15:99",
            "scope": 42306,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 42304,
              "keyType": {
                "id": 42302,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "3067:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "3059:24:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 42303,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "3078:4:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CrossDomainMessengerLegacySpacer1",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 42266,
          "nodeType": "StructuredDocumentation",
          "src": "885:324:99",
          "text": " @custom:legacy\n @title CrossDomainMessengerLegacySpacer1\n @notice Contract only exists to add a spacer to the CrossDomainMessenger where the\n         PausableUpgradable and OwnableUpgradeable variables used to exist. Must be\n         the third contract in the inheritance tree of the CrossDomainMessenger."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42306
        ],
        "name": "CrossDomainMessengerLegacySpacer1",
        "nameLocation": "1219:33:99",
        "scope": 42782,
        "usedErrors": []
      },
      {
        "id": 42781,
        "nodeType": "ContractDefinition",
        "src": "3734:15411:99",
        "nodes": [
          {
            "id": 42317,
            "nodeType": "VariableDeclaration",
            "src": "3945:42:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42314,
              "nodeType": "StructuredDocumentation",
              "src": "3878:62:99",
              "text": " @notice Current message version identifier."
            },
            "functionSelector": "3f827a5a",
            "mutability": "constant",
            "name": "MESSAGE_VERSION",
            "nameLocation": "3968:15:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint16",
              "typeString": "uint16"
            },
            "typeName": {
              "id": 42315,
              "name": "uint16",
              "nodeType": "ElementaryTypeName",
              "src": "3945:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint16",
                "typeString": "uint16"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 42316,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3986:1:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "public"
          },
          {
            "id": 42321,
            "nodeType": "VariableDeclaration",
            "src": "4080:58:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42318,
              "nodeType": "StructuredDocumentation",
              "src": "3994:81:99",
              "text": " @notice Constant overhead added to the base gas for a message."
            },
            "functionSelector": "7dea7cc3",
            "mutability": "constant",
            "name": "MIN_GAS_CONSTANT_OVERHEAD",
            "nameLocation": "4103:25:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 42319,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "4080:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "3230305f303030",
              "id": 42320,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4131:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000_by_1",
                "typeString": "int_const 200000"
              },
              "value": "200_000"
            },
            "visibility": "public"
          },
          {
            "id": 42325,
            "nodeType": "VariableDeclaration",
            "src": "4244:64:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42322,
              "nodeType": "StructuredDocumentation",
              "src": "4145:94:99",
              "text": " @notice Numerator for dynamic overhead added to the base gas for a message."
            },
            "functionSelector": "2828d7e8",
            "mutability": "constant",
            "name": "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR",
            "nameLocation": "4267:34:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 42323,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "4244:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31303136",
              "id": 42324,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4304:4:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1016_by_1",
                "typeString": "int_const 1016"
              },
              "value": "1016"
            },
            "visibility": "public"
          },
          {
            "id": 42329,
            "nodeType": "VariableDeclaration",
            "src": "4416:66:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42326,
              "nodeType": "StructuredDocumentation",
              "src": "4315:96:99",
              "text": " @notice Denominator for dynamic overhead added to the base gas for a message."
            },
            "functionSelector": "0c568498",
            "mutability": "constant",
            "name": "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR",
            "nameLocation": "4439:36:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 42327,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "4416:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 42328,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4478:4:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "public"
          },
          {
            "id": 42333,
            "nodeType": "VariableDeclaration",
            "src": "4588:53:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42330,
              "nodeType": "StructuredDocumentation",
              "src": "4489:94:99",
              "text": " @notice Extra gas added to base gas for each byte of calldata in a message."
            },
            "functionSelector": "028f85f7",
            "mutability": "constant",
            "name": "MIN_GAS_CALLDATA_OVERHEAD",
            "nameLocation": "4611:25:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 42331,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "4588:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "3136",
              "id": 42332,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4639:2:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_16_by_1",
                "typeString": "int_const 16"
              },
              "value": "16"
            },
            "visibility": "public"
          },
          {
            "id": 42337,
            "nodeType": "VariableDeclaration",
            "src": "4730:53:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42334,
              "nodeType": "StructuredDocumentation",
              "src": "4648:77:99",
              "text": " @notice Minimum amount of gas required to relay a message."
            },
            "mutability": "constant",
            "name": "RELAY_GAS_REQUIRED",
            "nameLocation": "4756:18:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42335,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4730:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "34355f303030",
              "id": 42336,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4777:6:99",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_45000_by_1",
                "typeString": "int_const 45000"
              },
              "value": "45_000"
            },
            "visibility": "internal"
          },
          {
            "id": 42343,
            "nodeType": "VariableDeclaration",
            "src": "4896:70:99",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 42338,
              "nodeType": "StructuredDocumentation",
              "src": "4790:101:99",
              "text": " @notice Amount of gas held in reserve to guarantee that relay execution completes."
            },
            "mutability": "constant",
            "name": "RELAY_GAS_BUFFER",
            "nameLocation": "4922:16:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 42339,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "4896:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "commonType": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              },
              "id": 42342,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "lValueRequested": false,
              "leftExpression": {
                "id": 42340,
                "name": "RELAY_GAS_REQUIRED",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 42337,
                "src": "4941:18:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "BinaryOperation",
              "operator": "-",
              "rightExpression": {
                "hexValue": "35303030",
                "id": 42341,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "4962:4:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_5000_by_1",
                  "typeString": "int_const 5000"
                },
                "value": "5000"
              },
              "src": "4941:25:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42346,
            "nodeType": "VariableDeclaration",
            "src": "5076:40:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42344,
              "nodeType": "StructuredDocumentation",
              "src": "4973:98:99",
              "text": " @notice Address of the paired CrossDomainMessenger contract on the other chain."
            },
            "functionSelector": "9fce812c",
            "mutability": "immutable",
            "name": "OTHER_MESSENGER",
            "nameLocation": "5101:15:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42345,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5076:7:99",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 42351,
            "nodeType": "VariableDeclaration",
            "src": "5385:50:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42347,
              "nodeType": "StructuredDocumentation",
              "src": "5123:257:99",
              "text": " @notice Mapping of message hashes to boolean receipt values. Note that a message will only\n         be present in this mapping if it has successfully been relayed on this chain, and\n         can therefore not be relayed again."
            },
            "functionSelector": "b1b1b209",
            "mutability": "mutable",
            "name": "successfulMessages",
            "nameLocation": "5417:18:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 42350,
              "keyType": {
                "id": 42348,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "5393:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "5385:24:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 42349,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "5404:4:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 42354,
            "nodeType": "VariableDeclaration",
            "src": "5794:33:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42352,
              "nodeType": "StructuredDocumentation",
              "src": "5442:347:99",
              "text": " @notice Address of the sender of the currently executing message on the other chain. If the\n         value of this variable is the default value (0x00000000...dead) then no message is\n         currently being executed. Use the xDomainMessageSender getter which will throw an\n         error if this is the case."
            },
            "mutability": "mutable",
            "name": "xDomainMsgSender",
            "nameLocation": "5811:16:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 42353,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "5794:7:99",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42357,
            "nodeType": "VariableDeclaration",
            "src": "6109:25:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42355,
              "nodeType": "StructuredDocumentation",
              "src": "5834:270:99",
              "text": " @notice Nonce for the next message to be sent, without the message version applied. Use the\n         messageNonce getter which will insert the message version into the nonce to give you\n         the actual nonce to be used for the message."
            },
            "mutability": "mutable",
            "name": "msgNonce",
            "nameLocation": "6126:8:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint240",
              "typeString": "uint240"
            },
            "typeName": {
              "id": 42356,
              "name": "uint240",
              "nodeType": "ElementaryTypeName",
              "src": "6109:7:99",
              "typeDescriptions": {
                "typeIdentifier": "t_uint240",
                "typeString": "uint240"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42362,
            "nodeType": "VariableDeclaration",
            "src": "6405:46:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42358,
              "nodeType": "StructuredDocumentation",
              "src": "6141:259:99",
              "text": " @notice Mapping of message hashes to a boolean if and only if the message has failed to be\n         executed at least once. A message will not be present in this mapping if it\n         successfully executed on the first attempt."
            },
            "functionSelector": "a4e7f8bd",
            "mutability": "mutable",
            "name": "failedMessages",
            "nameLocation": "6437:14:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 42361,
              "keyType": {
                "id": 42359,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "6413:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "6405:24:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 42360,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "6424:4:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 42367,
            "nodeType": "VariableDeclaration",
            "src": "6530:49:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42363,
              "nodeType": "StructuredDocumentation",
              "src": "6458:67:99",
              "text": " @notice A mapping of hashes to reentrancy locks."
            },
            "mutability": "mutable",
            "name": "reentrancyLocks",
            "nameLocation": "6564:15:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 42366,
              "keyType": {
                "id": 42364,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "6538:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "6530:24:99",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 42365,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "6549:4:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "id": 42372,
            "nodeType": "VariableDeclaration",
            "src": "6819:25:99",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 42368,
              "nodeType": "StructuredDocumentation",
              "src": "6586:228:99",
              "text": " @notice Reserve extra slots in the storage layout for future upgrades.\n         A gap size of 41 was chosen here, so that the first slot used in a child contract\n         would be a multiple of 50."
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "6839:5:99",
            "scope": 42781,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$41_storage",
              "typeString": "uint256[41]"
            },
            "typeName": {
              "baseType": {
                "id": 42369,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6819:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 42371,
              "length": {
                "hexValue": "3431",
                "id": 42370,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "6827:2:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_41_by_1",
                  "typeString": "int_const 41"
                },
                "value": "41"
              },
              "nodeType": "ArrayTypeName",
              "src": "6819:11:99",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$41_storage_ptr",
                "typeString": "uint256[41]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 42385,
            "nodeType": "EventDefinition",
            "src": "7300:159:99",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 42373,
              "nodeType": "StructuredDocumentation",
              "src": "6851:444:99",
              "text": " @notice Emitted whenever a message is sent to the other chain.\n @param target       Address of the recipient of the message.\n @param sender       Address of the sender of the message.\n @param message      Message to trigger the recipient address with.\n @param messageNonce Unique nonce attached to the message.\n @param gasLimit     Minimum gas limit that the message can be executed with."
            },
            "eventSelector": "cb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a",
            "name": "SentMessage",
            "nameLocation": "7306:11:99",
            "parameters": {
              "id": 42384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42375,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "7343:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42385,
                  "src": "7327:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7327:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42377,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7367:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42385,
                  "src": "7359:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42376,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42379,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "message",
                  "nameLocation": "7389:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42385,
                  "src": "7383:13:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42378,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7383:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42381,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "messageNonce",
                  "nameLocation": "7414:12:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42385,
                  "src": "7406:20:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42380,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7406:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42383,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "gasLimit",
                  "nameLocation": "7444:8:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42385,
                  "src": "7436:16:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42382,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7436:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7317:141:99"
            }
          },
          {
            "id": 42392,
            "nodeType": "EventDefinition",
            "src": "7817:67:99",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 42386,
              "nodeType": "StructuredDocumentation",
              "src": "7465:347:99",
              "text": " @notice Additional event data to emit, required as of Bedrock. Cannot be merged with the\n         SentMessage event without breaking the ABI of this contract, this is good enough.\n @param sender Address of the sender of the message.\n @param value  ETH value sent along with the message to the recipient."
            },
            "eventSelector": "8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d546",
            "name": "SentMessageExtension1",
            "nameLocation": "7823:21:99",
            "parameters": {
              "id": 42391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42388,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "7861:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42392,
                  "src": "7845:22:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7845:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42390,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "7877:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42392,
                  "src": "7869:13:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42389,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7869:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7844:39:99"
            }
          },
          {
            "id": 42397,
            "nodeType": "EventDefinition",
            "src": "8054:46:99",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 42393,
              "nodeType": "StructuredDocumentation",
              "src": "7890:159:99",
              "text": " @notice Emitted whenever a message is successfully relayed on this chain.\n @param msgHash Hash of the message that was relayed."
            },
            "eventSelector": "4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c",
            "name": "RelayedMessage",
            "nameLocation": "8060:14:99",
            "parameters": {
              "id": 42396,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42395,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "msgHash",
                  "nameLocation": "8091:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42397,
                  "src": "8075:23:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42394,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8075:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8074:25:99"
            }
          },
          {
            "id": 42402,
            "nodeType": "EventDefinition",
            "src": "8275:52:99",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 42398,
              "nodeType": "StructuredDocumentation",
              "src": "8106:164:99",
              "text": " @notice Emitted whenever a message fails to be relayed on this chain.\n @param msgHash Hash of the message that failed to be relayed."
            },
            "eventSelector": "99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f",
            "name": "FailedRelayedMessage",
            "nameLocation": "8281:20:99",
            "parameters": {
              "id": 42401,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42400,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "msgHash",
                  "nameLocation": "8318:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42402,
                  "src": "8302:23:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42399,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8302:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8301:25:99"
            }
          },
          {
            "id": 42413,
            "nodeType": "FunctionDefinition",
            "src": "8425:87:99",
            "nodes": [],
            "body": {
              "id": 42412,
              "nodeType": "Block",
              "src": "8462:50:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42408,
                      "name": "OTHER_MESSENGER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42346,
                      "src": "8472:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42409,
                      "name": "_otherMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42405,
                      "src": "8490:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8472:33:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42411,
                  "nodeType": "ExpressionStatement",
                  "src": "8472:33:99"
                }
              ]
            },
            "documentation": {
              "id": 42403,
              "nodeType": "StructuredDocumentation",
              "src": "8333:87:99",
              "text": " @param _otherMessenger Address of the messenger on the paired chain."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 42406,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42405,
                  "mutability": "mutable",
                  "name": "_otherMessenger",
                  "nameLocation": "8445:15:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42413,
                  "src": "8437:23:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42404,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8437:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8436:25:99"
            },
            "returnParameters": {
              "id": 42407,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8462:0:99"
            },
            "scope": 42781,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42470,
            "nodeType": "FunctionDefinition",
            "src": "9110:1080:99",
            "nodes": [],
            "body": {
              "id": 42469,
              "nodeType": "Block",
              "src": "9241:949:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42424,
                        "name": "OTHER_MESSENGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42346,
                        "src": "9626:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 42426,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42418,
                            "src": "9663:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 42427,
                            "name": "_minGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42420,
                            "src": "9673:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 42425,
                          "name": "baseGas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42742,
                          "src": "9655:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint32_$returns$_t_uint64_$",
                            "typeString": "function (bytes calldata,uint32) pure returns (uint64)"
                          }
                        },
                        "id": 42428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9655:31:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "expression": {
                          "id": 42429,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9700:3:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "9700:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 42433,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "9763:4:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              },
                              "id": 42434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "relayMessage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42679,
                              "src": "9763:17:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (uint256,address,address,uint256,uint256,bytes memory) payable external"
                              }
                            },
                            "id": 42435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "9763:26:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 42436,
                              "name": "messageNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42709,
                              "src": "9807:12:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 42437,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9807:14:99",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "expression": {
                              "id": 42438,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9839:3:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 42439,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "9839:10:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 42440,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42416,
                            "src": "9867:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 42441,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "9892:3:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 42442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "9892:9:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 42443,
                            "name": "_minGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42420,
                            "src": "9919:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 42444,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42418,
                            "src": "9949:8:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "id": 42431,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "9723:3:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 42432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "9723:22:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 42445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9723:248:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 42423,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42766,
                      "src": "9600:12:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint64_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint64,uint256,bytes memory)"
                      }
                    },
                    "id": 42446,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9600:381:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42447,
                  "nodeType": "ExpressionStatement",
                  "src": "9600:381:99"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42449,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42416,
                        "src": "10009:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 42450,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10018:3:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10018:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42452,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42418,
                        "src": "10030:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 42453,
                          "name": "messageNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42709,
                          "src": "10040:12:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 42454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10040:14:99",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42455,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42420,
                        "src": "10056:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 42448,
                      "name": "SentMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42385,
                      "src": "9997:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 42456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9997:72:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42457,
                  "nodeType": "EmitStatement",
                  "src": "9992:77:99"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 42459,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10106:3:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10106:10:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 42461,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10118:3:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "10118:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42458,
                      "name": "SentMessageExtension1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42392,
                      "src": "10084:21:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 42463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10084:44:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42464,
                  "nodeType": "EmitStatement",
                  "src": "10079:49:99"
                },
                {
                  "id": 42468,
                  "nodeType": "UncheckedBlock",
                  "src": "10139:45:99",
                  "statements": [
                    {
                      "expression": {
                        "id": 42466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "10163:10:99",
                        "subExpression": {
                          "id": 42465,
                          "name": "msgNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42357,
                          "src": "10165:8:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint240",
                            "typeString": "uint240"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      "id": 42467,
                      "nodeType": "ExpressionStatement",
                      "src": "10163:10:99"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 42414,
              "nodeType": "StructuredDocumentation",
              "src": "8518:587:99",
              "text": " @notice Sends a message to some target address on the other chain. Note that if the call\n         always reverts, then the message will be unrelayable, and any ETH sent will be\n         permanently locked. The same will occur if the target on the other chain is\n         considered unsafe (see the _isUnsafeTarget() function).\n @param _target      Target contract or wallet address.\n @param _message     Message to trigger the target address with.\n @param _minGasLimit Minimum gas limit that the message can be executed with."
            },
            "functionSelector": "3dbb202b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendMessage",
            "nameLocation": "9119:11:99",
            "parameters": {
              "id": 42421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42416,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "9148:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42470,
                  "src": "9140:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9140:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42418,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "9180:8:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42470,
                  "src": "9165:23:99",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42417,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9165:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42420,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "9205:12:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42470,
                  "src": "9198:19:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 42419,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9198:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9130:93:99"
            },
            "returnParameters": {
              "id": 42422,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9241:0:99"
            },
            "scope": 42781,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42679,
            "nodeType": "FunctionDefinition",
            "src": "10892:3829:99",
            "nodes": [],
            "body": {
              "id": 42678,
              "nodeType": "Block",
              "src": "11098:3623:99",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    null,
                    42487
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 42487,
                      "mutability": "mutable",
                      "name": "version",
                      "nameLocation": "11118:7:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 42678,
                      "src": "11111:14:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 42486,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "11111:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42492,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42490,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42473,
                        "src": "11159:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 42488,
                        "name": "Encoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7514,
                        "src": "11129:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Encoding_$7514_$",
                          "typeString": "type(library Encoding)"
                        }
                      },
                      "id": 42489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeVersionedNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7513,
                      "src": "11129:29:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$",
                        "typeString": "function (uint256) pure returns (uint240,uint16)"
                      }
                    },
                    "id": 42491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11129:37:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint240_$_t_uint16_$",
                      "typeString": "tuple(uint240,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11108:58:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 42496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42494,
                          "name": "version",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42487,
                          "src": "11197:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 42495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11207:1:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "11197:11:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206f6e6c792076657273696f6e2030206f722031206d657373616765732061726520737570706f7274656420617420746869732074696d65",
                        "id": 42497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11222:79:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032",
                          "typeString": "literal_string \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\""
                        },
                        "value": "CrossDomainMessenger: only version 0 or 1 messages are supported at this time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032",
                          "typeString": "literal_string \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\""
                        }
                      ],
                      "id": 42493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11176:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11176:135:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42499,
                  "nodeType": "ExpressionStatement",
                  "src": "11176:135:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 42502,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42500,
                      "name": "version",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42487,
                      "src": "11513:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42501,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11524:1:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "11513:12:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42523,
                  "nodeType": "IfStatement",
                  "src": "11509:293:99",
                  "trueBody": {
                    "id": 42522,
                    "nodeType": "Block",
                    "src": "11527:275:99",
                    "statements": [
                      {
                        "assignments": [
                          42504
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 42504,
                            "mutability": "mutable",
                            "name": "oldHash",
                            "nameLocation": "11549:7:99",
                            "nodeType": "VariableDeclaration",
                            "scope": 42522,
                            "src": "11541:15:99",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 42503,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "11541:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 42512,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 42507,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42477,
                              "src": "11592:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 42508,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42475,
                              "src": "11601:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 42509,
                              "name": "_message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42483,
                              "src": "11610:8:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 42510,
                              "name": "_nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42473,
                              "src": "11620:6:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 42505,
                              "name": "Hashing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7736,
                              "src": "11559:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Hashing_$7736_$",
                                "typeString": "type(library Hashing)"
                              }
                            },
                            "id": 42506,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hashCrossDomainMessageV0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7652,
                            "src": "11559:32:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (address,address,bytes memory,uint256) pure returns (bytes32)"
                            }
                          },
                          "id": 42511,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11559:68:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11541:86:99"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 42518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 42514,
                                  "name": "successfulMessages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42351,
                                  "src": "11666:18:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 42516,
                                "indexExpression": {
                                  "id": 42515,
                                  "name": "oldHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42504,
                                  "src": "11685:7:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11666:27:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 42517,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11697:5:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "11666:36:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206c6567616379207769746864726177616c20616c72656164792072656c61796564",
                              "id": 42519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11720:57:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1",
                                "typeString": "literal_string \"CrossDomainMessenger: legacy withdrawal already relayed\""
                              },
                              "value": "CrossDomainMessenger: legacy withdrawal already relayed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1",
                                "typeString": "literal_string \"CrossDomainMessenger: legacy withdrawal already relayed\""
                              }
                            ],
                            "id": 42513,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11641:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11641:150:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42521,
                        "nodeType": "ExpressionStatement",
                        "src": "11641:150:99"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    42525
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42525,
                      "mutability": "mutable",
                      "name": "versionedHash",
                      "nameLocation": "11980:13:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 42678,
                      "src": "11972:21:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 42524,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11972:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42535,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42528,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42473,
                        "src": "12042:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42529,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42475,
                        "src": "12062:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42530,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42477,
                        "src": "12083:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42531,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42479,
                        "src": "12104:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42532,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42481,
                        "src": "12124:12:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42533,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42483,
                        "src": "12150:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 42526,
                        "name": "Hashing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7736,
                        "src": "11996:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hashing_$7736_$",
                          "typeString": "type(library Hashing)"
                        }
                      },
                      "id": 42527,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashCrossDomainMessageV1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7683,
                      "src": "11996:32:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 42534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11996:172:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11972:196:99"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 42536,
                      "name": "reentrancyLocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42367,
                      "src": "12263:15:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                        "typeString": "mapping(bytes32 => bool)"
                      }
                    },
                    "id": 42538,
                    "indexExpression": {
                      "id": 42537,
                      "name": "versionedHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42525,
                      "src": "12279:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12263:30:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42544,
                  "nodeType": "IfStatement",
                  "src": "12259:102:99",
                  "trueBody": {
                    "id": 42543,
                    "nodeType": "Block",
                    "src": "12295:66:99",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
                              "id": 42540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12316:33:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              },
                              "value": "ReentrancyGuard: reentrant call"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
                                "typeString": "literal_string \"ReentrancyGuard: reentrant call\""
                              }
                            ],
                            "id": 42539,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "12309:6:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 42541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12309:41:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42542,
                        "nodeType": "ExpressionStatement",
                        "src": "12309:41:99"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 42549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42545,
                        "name": "reentrancyLocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42367,
                        "src": "12429:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 42547,
                      "indexExpression": {
                        "id": 42546,
                        "name": "versionedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42525,
                        "src": "12445:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "12429:30:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 42548,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12462:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "12429:37:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42550,
                  "nodeType": "ExpressionStatement",
                  "src": "12429:37:99"
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 42551,
                      "name": "_isOtherMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42772,
                      "src": "12481:17:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 42552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12481:19:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 42583,
                    "nodeType": "Block",
                    "src": "12746:329:99",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 42572,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 42569,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12785:3:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 42570,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "12785:9:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 42571,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12798:1:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "12785:14:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d757374206265207a65726f20756e6c657373206d6573736167652069732066726f6d20612073797374656d2061646472657373",
                              "id": 42573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12817:82:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5",
                                "typeString": "literal_string \"CrossDomainMessenger: value must be zero unless message is from a system address\""
                              },
                              "value": "CrossDomainMessenger: value must be zero unless message is from a system address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a674ba4f64545bbbef0e37bff5aab8291d8acaeac34534351c851dafbf6705a5",
                                "typeString": "literal_string \"CrossDomainMessenger: value must be zero unless message is from a system address\""
                              }
                            ],
                            "id": 42568,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12760:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12760:153:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42575,
                        "nodeType": "ExpressionStatement",
                        "src": "12760:153:99"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 42577,
                                "name": "failedMessages",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42362,
                                "src": "12953:14:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                  "typeString": "mapping(bytes32 => bool)"
                                }
                              },
                              "id": 42579,
                              "indexExpression": {
                                "id": 42578,
                                "name": "versionedHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42525,
                                "src": "12968:13:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12953:29:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206d6573736167652063616e6e6f74206265207265706c61796564",
                              "id": 42580,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13000:50:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d",
                                "typeString": "literal_string \"CrossDomainMessenger: message cannot be replayed\""
                              },
                              "value": "CrossDomainMessenger: message cannot be replayed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d",
                                "typeString": "literal_string \"CrossDomainMessenger: message cannot be replayed\""
                              }
                            ],
                            "id": 42576,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12928:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 42581,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12928:136:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42582,
                        "nodeType": "ExpressionStatement",
                        "src": "12928:136:99"
                      }
                    ]
                  },
                  "id": 42584,
                  "nodeType": "IfStatement",
                  "src": "12477:598:99",
                  "trueBody": {
                    "id": 42567,
                    "nodeType": "Block",
                    "src": "12502:238:99",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 42557,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 42554,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "12657:3:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 42555,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "12657:9:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 42556,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42479,
                                "src": "12670:6:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12657:19:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 42553,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "12650:6:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 42558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12650:27:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42559,
                        "nodeType": "ExpressionStatement",
                        "src": "12650:27:99"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 42564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "12698:30:99",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 42561,
                                  "name": "failedMessages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42362,
                                  "src": "12699:14:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 42563,
                                "indexExpression": {
                                  "id": 42562,
                                  "name": "versionedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42525,
                                  "src": "12714:13:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "12699:29:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 42560,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "12691:6:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 42565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12691:38:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42566,
                        "nodeType": "ExpressionStatement",
                        "src": "12691:38:99"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 42590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 42587,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42477,
                              "src": "13122:7:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 42586,
                            "name": "_isUnsafeTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42780,
                            "src": "13106:15:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 42588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13106:24:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 42589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13134:5:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "13106:33:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e64206d65737361676520746f20626c6f636b65642073797374656d2061646472657373",
                        "id": 42591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13153:69:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5",
                          "typeString": "literal_string \"CrossDomainMessenger: cannot send message to blocked system address\""
                        },
                        "value": "CrossDomainMessenger: cannot send message to blocked system address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5",
                          "typeString": "literal_string \"CrossDomainMessenger: cannot send message to blocked system address\""
                        }
                      ],
                      "id": 42585,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13085:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42592,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13085:147:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42593,
                  "nodeType": "ExpressionStatement",
                  "src": "13085:147:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 42599,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 42595,
                            "name": "successfulMessages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42351,
                            "src": "13264:18:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 42597,
                          "indexExpression": {
                            "id": 42596,
                            "name": "versionedHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42525,
                            "src": "13283:13:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "13264:33:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 42598,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "13301:5:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "13264:42:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206d6573736167652068617320616c7265616479206265656e2072656c61796564",
                        "id": 42600,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13320:56:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150",
                          "typeString": "literal_string \"CrossDomainMessenger: message has already been relayed\""
                        },
                        "value": "CrossDomainMessenger: message has already been relayed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150",
                          "typeString": "literal_string \"CrossDomainMessenger: message has already been relayed\""
                        }
                      ],
                      "id": 42594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13243:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42601,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13243:143:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42602,
                  "nodeType": "ExpressionStatement",
                  "src": "13243:143:99"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42604,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "13418:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 42605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13418:9:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42606,
                            "name": "_minGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42481,
                            "src": "13431:12:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 42607,
                            "name": "RELAY_GAS_REQUIRED",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42337,
                            "src": "13446:18:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13431:33:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13418:46:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a20696e73756666696369656e742067617320746f2072656c6179206d657373616765",
                        "id": 42610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13478:57:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d4b277d94a22b9e5499ba22b5407df4334073bbfd34071b260d954b1d7ed0f2",
                          "typeString": "literal_string \"CrossDomainMessenger: insufficient gas to relay message\""
                        },
                        "value": "CrossDomainMessenger: insufficient gas to relay message"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d4b277d94a22b9e5499ba22b5407df4334073bbfd34071b260d954b1d7ed0f2",
                          "typeString": "literal_string \"CrossDomainMessenger: insufficient gas to relay message\""
                        }
                      ],
                      "id": 42603,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13397:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13397:148:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42612,
                  "nodeType": "ExpressionStatement",
                  "src": "13397:148:99"
                },
                {
                  "expression": {
                    "id": 42615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42613,
                      "name": "xDomainMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42354,
                      "src": "13556:16:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42614,
                      "name": "_sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42475,
                      "src": "13575:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13556:26:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42616,
                  "nodeType": "ExpressionStatement",
                  "src": "13556:26:99"
                },
                {
                  "assignments": [
                    42618
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42618,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "13597:7:99",
                      "nodeType": "VariableDeclaration",
                      "scope": 42678,
                      "src": "13592:12:99",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 42617,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13592:4:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42629,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42621,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42477,
                        "src": "13621:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 42622,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "13630:7:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 42623,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13630:9:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 42624,
                          "name": "RELAY_GAS_BUFFER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42343,
                          "src": "13642:16:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13630:28:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42626,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42479,
                        "src": "13660:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42627,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42483,
                        "src": "13668:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 42619,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7837,
                        "src": "13607:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$7837_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 42620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7836,
                      "src": "13607:13:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 42628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13607:70:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13592:85:99"
                },
                {
                  "expression": {
                    "id": 42633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42630,
                      "name": "xDomainMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42354,
                      "src": "13687:16:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 42631,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7221,
                        "src": "13706:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$7221_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 42632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "DEFAULT_L2_SENDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7220,
                      "src": "13706:27:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13687:46:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42634,
                  "nodeType": "ExpressionStatement",
                  "src": "13687:46:99"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 42637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42635,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42618,
                      "src": "13748:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 42636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13759:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "13748:15:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 42670,
                    "nodeType": "Block",
                    "src": "13884:725:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 42653,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 42649,
                              "name": "failedMessages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42362,
                              "src": "13898:14:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 42651,
                            "indexExpression": {
                              "id": 42650,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42525,
                              "src": "13913:13:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13898:29:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 42652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13930:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "13898:36:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42654,
                        "nodeType": "ExpressionStatement",
                        "src": "13898:36:99"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 42656,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42525,
                              "src": "13974:13:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 42655,
                            "name": "FailedRelayedMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42402,
                            "src": "13953:20:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 42657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13953:35:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42658,
                        "nodeType": "EmitStatement",
                        "src": "13948:40:99"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 42663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 42659,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "14468:2:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 42660,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "14468:9:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 42661,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 7221,
                              "src": "14481:9:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$7221_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 42662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ESTIMATION_ADDRESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 7216,
                            "src": "14481:28:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14468:41:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42669,
                        "nodeType": "IfStatement",
                        "src": "14464:135:99",
                        "trueBody": {
                          "id": 42668,
                          "nodeType": "Block",
                          "src": "14511:88:99",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2072656c6179206d657373616765",
                                    "id": 42665,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14536:47:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288",
                                      "typeString": "literal_string \"CrossDomainMessenger: failed to relay message\""
                                    },
                                    "value": "CrossDomainMessenger: failed to relay message"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288",
                                      "typeString": "literal_string \"CrossDomainMessenger: failed to relay message\""
                                    }
                                  ],
                                  "id": 42664,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14529:6:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 42666,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14529:55:99",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42667,
                              "nodeType": "ExpressionStatement",
                              "src": "14529:55:99"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 42671,
                  "nodeType": "IfStatement",
                  "src": "13744:865:99",
                  "trueBody": {
                    "id": 42648,
                    "nodeType": "Block",
                    "src": "13765:113:99",
                    "statements": [
                      {
                        "expression": {
                          "id": 42642,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 42638,
                              "name": "successfulMessages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42351,
                              "src": "13779:18:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 42640,
                            "indexExpression": {
                              "id": 42639,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42525,
                              "src": "13798:13:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13779:33:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 42641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13815:4:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "13779:40:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42643,
                        "nodeType": "ExpressionStatement",
                        "src": "13779:40:99"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 42645,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42525,
                              "src": "13853:13:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 42644,
                            "name": "RelayedMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42397,
                            "src": "13838:14:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 42646,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13838:29:99",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 42647,
                        "nodeType": "EmitStatement",
                        "src": "13833:34:99"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 42676,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 42672,
                        "name": "reentrancyLocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42367,
                        "src": "14676:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 42674,
                      "indexExpression": {
                        "id": 42673,
                        "name": "versionedHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42525,
                        "src": "14692:13:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "14676:30:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 42675,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "14709:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "14676:38:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42677,
                  "nodeType": "ExpressionStatement",
                  "src": "14676:38:99"
                }
              ]
            },
            "documentation": {
              "id": 42471,
              "nodeType": "StructuredDocumentation",
              "src": "10196:691:99",
              "text": " @notice Relays a message that was sent by the other CrossDomainMessenger contract. Can only\n         be executed via cross-chain call from the other messenger OR if the message was\n         already received once and is currently being replayed.\n @param _nonce       Nonce of the message being relayed.\n @param _sender      Address of the user who sent the message.\n @param _target      Address that the message is targeted at.\n @param _value       ETH value to send with the message.\n @param _minGasLimit Minimum amount of gas that the message can be executed with.\n @param _message     Message to send to the target."
            },
            "functionSelector": "d764ad0b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "relayMessage",
            "nameLocation": "10901:12:99",
            "parameters": {
              "id": 42484,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42473,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "10931:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42679,
                  "src": "10923:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42472,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10923:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42475,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "10955:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42679,
                  "src": "10947:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42474,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10947:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42477,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "10980:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42679,
                  "src": "10972:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42476,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10972:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42479,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "11005:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42679,
                  "src": "10997:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10997:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42481,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "11029:12:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42679,
                  "src": "11021:20:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42480,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11021:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42483,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "11066:8:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42679,
                  "src": "11051:23:99",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42482,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11051:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10913:167:99"
            },
            "returnParameters": {
              "id": 42485,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11098:0:99"
            },
            "scope": 42781,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42696,
            "nodeType": "FunctionDefinition",
            "src": "15127:262:99",
            "nodes": [],
            "body": {
              "id": 42695,
              "nodeType": "Block",
              "src": "15191:198:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 42689,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42686,
                          "name": "xDomainMsgSender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42354,
                          "src": "15222:16:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 42687,
                            "name": "Constants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7221,
                            "src": "15242:9:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Constants_$7221_$",
                              "typeString": "type(library Constants)"
                            }
                          },
                          "id": 42688,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "DEFAULT_L2_SENDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7220,
                          "src": "15242:27:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "15222:47:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a2078446f6d61696e4d65737361676553656e646572206973206e6f7420736574",
                        "id": 42690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15283:55:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398",
                          "typeString": "literal_string \"CrossDomainMessenger: xDomainMessageSender is not set\""
                        },
                        "value": "CrossDomainMessenger: xDomainMessageSender is not set"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_768d531e1f3a80f728b84893add7c857f15fef8ea757c4d86de650c12b79f398",
                          "typeString": "literal_string \"CrossDomainMessenger: xDomainMessageSender is not set\""
                        }
                      ],
                      "id": 42685,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15201:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15201:147:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42692,
                  "nodeType": "ExpressionStatement",
                  "src": "15201:147:99"
                },
                {
                  "expression": {
                    "id": 42693,
                    "name": "xDomainMsgSender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 42354,
                    "src": "15366:16:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 42684,
                  "id": 42694,
                  "nodeType": "Return",
                  "src": "15359:23:99"
                }
              ]
            },
            "documentation": {
              "id": 42680,
              "nodeType": "StructuredDocumentation",
              "src": "14727:395:99",
              "text": " @notice Retrieves the address of the contract or wallet that initiated the currently\n         executing message on the other chain. Will throw an error if there is no message\n         currently being executed. Allows the recipient of a call to see who triggered it.\n @return Address of the sender of the currently executing message on the other chain."
            },
            "functionSelector": "6e296e45",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "xDomainMessageSender",
            "nameLocation": "15136:20:99",
            "parameters": {
              "id": 42681,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15156:2:99"
            },
            "returnParameters": {
              "id": 42684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42683,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42696,
                  "src": "15182:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42682,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15182:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15181:9:99"
            },
            "scope": 42781,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42709,
            "nodeType": "FunctionDefinition",
            "src": "15729:134:99",
            "nodes": [],
            "body": {
              "id": 42708,
              "nodeType": "Block",
              "src": "15783:80:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42704,
                        "name": "msgNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42357,
                        "src": "15830:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      {
                        "id": 42705,
                        "name": "MESSAGE_VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42317,
                        "src": "15840:15:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 42702,
                        "name": "Encoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7514,
                        "src": "15800:8:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Encoding_$7514_$",
                          "typeString": "type(library Encoding)"
                        }
                      },
                      "id": 42703,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encodeVersionedNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7491,
                      "src": "15800:29:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint240_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint240,uint16) pure returns (uint256)"
                      }
                    },
                    "id": 42706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15800:56:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 42701,
                  "id": 42707,
                  "nodeType": "Return",
                  "src": "15793:63:99"
                }
              ]
            },
            "documentation": {
              "id": 42697,
              "nodeType": "StructuredDocumentation",
              "src": "15395:329:99",
              "text": " @notice Retrieves the next message nonce. Message version will be added to the upper two\n         bytes of the message nonce. Message version allows us to treat messages as having\n         different structures.\n @return Nonce of the next message to be sent, with added message version."
            },
            "functionSelector": "ecc70428",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messageNonce",
            "nameLocation": "15738:12:99",
            "parameters": {
              "id": 42698,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15750:2:99"
            },
            "returnParameters": {
              "id": 42701,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42700,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42709,
                  "src": "15774:7:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42699,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15774:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15773:9:99"
            },
            "scope": 42781,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42742,
            "nodeType": "FunctionDefinition",
            "src": "16499:708:99",
            "nodes": [],
            "body": {
              "id": 42741,
              "nodeType": "Block",
              "src": "16591:616:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 42739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 42737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 42727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  },
                                  "id": 42724,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "arguments": [
                                      {
                                        "id": 42721,
                                        "name": "_minGasLimit",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 42714,
                                        "src": "16919:12:99",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint32",
                                          "typeString": "uint32"
                                        }
                                      ],
                                      "id": 42720,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "16912:6:99",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_uint64_$",
                                        "typeString": "type(uint64)"
                                      },
                                      "typeName": {
                                        "id": 42719,
                                        "name": "uint64",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "16912:6:99",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 42722,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "16912:20:99",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 42723,
                                    "name": "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42325,
                                    "src": "16935:34:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint64",
                                      "typeString": "uint64"
                                    }
                                  },
                                  "src": "16912:57:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint64",
                                    "typeString": "uint64"
                                  }
                                }
                              ],
                              "id": 42725,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "16911:59:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 42726,
                              "name": "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42329,
                              "src": "16989:36:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "16911:114:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "id": 42728,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "16910:116:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "components": [
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 42735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 42731,
                                    "name": "_message",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42712,
                                    "src": "17082:8:99",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  },
                                  "id": 42732,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "17082:15:99",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 42730,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17075:6:99",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 42729,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17075:6:99",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 42733,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17075:23:99",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 42734,
                              "name": "MIN_GAS_CALLDATA_OVERHEAD",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42333,
                              "src": "17101:25:99",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "17075:51:99",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "id": 42736,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "17074:53:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "src": "16910:217:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 42738,
                      "name": "MIN_GAS_CONSTANT_OVERHEAD",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42321,
                      "src": "17175:25:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "16910:290:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 42718,
                  "id": 42740,
                  "nodeType": "Return",
                  "src": "16859:341:99"
                }
              ]
            },
            "documentation": {
              "id": 42710,
              "nodeType": "StructuredDocumentation",
              "src": "15869:625:99",
              "text": " @notice Computes the amount of gas required to guarantee that a given message will be\n         received on the other chain without running out of gas. Guaranteeing that a message\n         will not run out of gas is important because this ensures that a message can always\n         be replayed on the other chain if it fails to execute completely.\n @param _message     Message to compute the amount of required gas for.\n @param _minGasLimit Minimum desired gas limit when message goes to target.\n @return Amount of gas required to guarantee message receipt."
            },
            "functionSelector": "b28ade25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "baseGas",
            "nameLocation": "16508:7:99",
            "parameters": {
              "id": 42715,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42712,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "16531:8:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42742,
                  "src": "16516:23:99",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42711,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16516:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42714,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "16548:12:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42742,
                  "src": "16541:19:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 42713,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16541:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16515:46:99"
            },
            "returnParameters": {
              "id": 42718,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42717,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42742,
                  "src": "16583:6:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 42716,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "16583:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16582:8:99"
            },
            "scope": 42781,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 42754,
            "nodeType": "FunctionDefinition",
            "src": "17309:128:99",
            "nodes": [],
            "body": {
              "id": 42753,
              "nodeType": "Block",
              "src": "17374:63:99",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 42751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42748,
                      "name": "xDomainMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42354,
                      "src": "17384:16:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 42749,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7221,
                        "src": "17403:9:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$7221_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 42750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "DEFAULT_L2_SENDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7220,
                      "src": "17403:27:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17384:46:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42752,
                  "nodeType": "ExpressionStatement",
                  "src": "17384:46:99"
                }
              ]
            },
            "documentation": {
              "id": 42743,
              "nodeType": "StructuredDocumentation",
              "src": "17213:38:99",
              "text": " @notice Intializer."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 42746,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 42745,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45697,
                  "src": "17357:16:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "17357:16:99"
              }
            ],
            "name": "__CrossDomainMessenger_init",
            "nameLocation": "17318:27:99",
            "parameters": {
              "id": 42744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17345:2:99"
            },
            "returnParameters": {
              "id": 42747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17374:0:99"
            },
            "scope": 42781,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42766,
            "nodeType": "FunctionDefinition",
            "src": "17940:144:99",
            "nodes": [],
            "documentation": {
              "id": 42755,
              "nodeType": "StructuredDocumentation",
              "src": "17443:492:99",
              "text": " @notice Sends a low-level message to the other messenger. Needs to be implemented by child\n         contracts because the logic for this depends on the network where the messenger is\n         being deployed.\n @param _to       Recipient of the message on the other chain.\n @param _gasLimit Minimum gas limit the message can be executed with.\n @param _value    Amount of ETH to send with the message.\n @param _data     Message data."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_sendMessage",
            "nameLocation": "17949:12:99",
            "parameters": {
              "id": 42764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42757,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "17979:3:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42766,
                  "src": "17971:11:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42756,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17971:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42759,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "17999:9:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42766,
                  "src": "17992:16:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 42758,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "17992:6:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42761,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "18026:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42766,
                  "src": "18018:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18018:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42763,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "18055:5:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42766,
                  "src": "18042:18:99",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 42762,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18042:5:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17961:105:99"
            },
            "returnParameters": {
              "id": 42765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18083:0:99"
            },
            "scope": 42781,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 42772,
            "nodeType": "FunctionDefinition",
            "src": "18412:66:99",
            "nodes": [],
            "documentation": {
              "id": 42767,
              "nodeType": "StructuredDocumentation",
              "src": "18090:317:99",
              "text": " @notice Checks whether the message is coming from the other messenger. Implemented by child\n         contracts because the logic for this depends on the network where the messenger is\n         being deployed.\n @return Whether the message is coming from the other messenger."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_isOtherMessenger",
            "nameLocation": "18421:17:99",
            "parameters": {
              "id": 42768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18438:2:99"
            },
            "returnParameters": {
              "id": 42771,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42770,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42772,
                  "src": "18472:4:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42769,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18472:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18471:6:99"
            },
            "scope": 42781,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 42780,
            "nodeType": "FunctionDefinition",
            "src": "19064:79:99",
            "nodes": [],
            "documentation": {
              "id": 42773,
              "nodeType": "StructuredDocumentation",
              "src": "18484:575:99",
              "text": " @notice Checks whether a given call target is a system address that could cause the\n         messenger to peform an unsafe action. This is NOT a mechanism for blocking user\n         addresses. This is ONLY used to prevent the execution of messages to specific\n         system addresses that could cause security issues, e.g., having the\n         CrossDomainMessenger send messages to itself.\n @param _target Address of the contract to check.\n @return Whether or not the address is an unsafe system address."
            },
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "_isUnsafeTarget",
            "nameLocation": "19073:15:99",
            "parameters": {
              "id": 42776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42775,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "19097:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 42780,
                  "src": "19089:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19089:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19088:17:99"
            },
            "returnParameters": {
              "id": 42779,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42778,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42780,
                  "src": "19137:4:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 42777,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19137:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19136:6:99"
            },
            "scope": 42781,
            "stateMutability": "view",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 42308,
              "name": "CrossDomainMessengerLegacySpacer0",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42265,
              "src": "3780:33:99"
            },
            "id": 42309,
            "nodeType": "InheritanceSpecifier",
            "src": "3780:33:99"
          },
          {
            "baseName": {
              "id": 42310,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45734,
              "src": "3819:13:99"
            },
            "id": 42311,
            "nodeType": "InheritanceSpecifier",
            "src": "3819:13:99"
          },
          {
            "baseName": {
              "id": 42312,
              "name": "CrossDomainMessengerLegacySpacer1",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42306,
              "src": "3838:33:99"
            },
            "id": 42313,
            "nodeType": "InheritanceSpecifier",
            "src": "3838:33:99"
          }
        ],
        "canonicalName": "CrossDomainMessenger",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 42307,
          "nodeType": "StructuredDocumentation",
          "src": "3112:621:99",
          "text": " @custom:upgradeable\n @title CrossDomainMessenger\n @notice CrossDomainMessenger is a base contract that provides the core logic for the L1 and L2\n         cross-chain messenger contracts. It's designed to be a universal interface that only\n         needs to be extended slightly to provide low-level message passing functionality on each\n         chain it's deployed on. Currently only designed for message passing between two paired\n         chains and does not support one-to-many interactions.\n         Any changes to this contract MUST result in a semver bump for contracts that inherit it."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          42781,
          42306,
          45734,
          42265
        ],
        "name": "CrossDomainMessenger",
        "nameLocation": "3752:20:99",
        "scope": 42782,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 99
}