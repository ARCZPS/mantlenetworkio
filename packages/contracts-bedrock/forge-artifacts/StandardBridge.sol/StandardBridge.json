{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSENGER",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_BRIDGE",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20To",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETHTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MESSENGER()": "927ede2d",
    "OTHER_BRIDGE()": "7f46ddb2",
    "bridgeERC20(address,address,uint256,uint32,bytes)": "87087623",
    "bridgeERC20To(address,address,address,uint256,uint32,bytes)": "540abf73",
    "bridgeETH(uint32,bytes)": "09fc8843",
    "bridgeETHTo(address,uint32,bytes)": "e11013dd",
    "deposits(address,address)": "8f601f66",
    "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": "0166a07a",
    "finalizeBridgeETH(address,address,uint256,bytes)": "1635f5fd",
    "messenger()": "3cb747bf"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:upgradeable\":\"@title StandardBridge\",\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of the ERC20 sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"localToken\":\"Address of the ERC20 on this chain.\",\"remoteToken\":\"Address of the ERC20 on the remote chain.\",\"to\":\"Address of the receiver.\"}},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of the ERC20 sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"localToken\":\"Address of the ERC20 on this chain.\",\"remoteToken\":\"Address of the ERC20 on the remote chain.\",\"to\":\"Address of the receiver.\"}},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of ETH sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"to\":\"Address of the receiver.\"}},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of ETH sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"to\":\"Address of the receiver.\"}}},\"kind\":\"dev\",\"methods\":{\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\"}},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"bridgeETH(uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\"}},\"bridgeETHTo(address,uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_to\":\"Address of the receiver.\"}},\"constructor\":{\"params\":{\"_messenger\":\"Address of CrossDomainMessenger on this network.\",\"_otherBridge\":\"Address of the other StandardBridge contract.\"}},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of the ERC20 being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of ETH being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_to\":\"Address of the receiver.\"}},\"messenger()\":{\"custom:legacy\":\"@notice Legacy getter for messenger contract.\",\"returns\":{\"_0\":\"Messenger contract on this domain.\"}}},\"stateVariables\":{\"spacer_0_0_20\":{\"custom:legacy\":\"@custom:spacer messenger\"},\"spacer_1_0_20\":{\"custom:legacy\":\"@custom:spacer l2TokenBridge\"}},\"version\":1},\"userdoc\":{\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is finalized on this chain.\"},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is initiated to the other chain.\"},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is finalized on this chain.\"},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is initiated to the other chain.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Messenger contract on this domain.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Corresponding bridge on the other domain.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeETH(uint32,bytes)\":{\"notice\":\"Sends ETH to the sender's address on the other chain.\"},\"bridgeETHTo(address,uint32,bytes)\":{\"notice\":\"Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case.\"},\"deposits(address,address)\":{\"notice\":\"Mapping that stores deposits for a given pair of local and remote tokens.\"},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"}},\"notice\":\"StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles         the core bridging logic, including escrowing tokens that are native to the local chain         and minting/burning tokens that are native to the remote chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/universal/StandardBridge.sol\":\"StandardBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0x09a0d1616d822d77142123e6d1262be7ee71ee840e6022f75a4aa0c508659a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfbb81c230c0032a4d1c3e37b32708e82523c53b7b3b0df5558335c5c0949ee\",\"dweb:/ipfs/QmcRoHQTRxEbbngT1o9yPC5FfQiqqH8P1nTAB7RzgQbKVj\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b\",\"dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0\",\"dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X\"]},\"contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xbb0621c028c18e9d5a54cf1a8136cf2e77f161de48aeb8d911e230f6b280c9ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924ecc629c7642bc19e2f8a390f1b946d22862c8889453da681b5bc1a45d7703\",\"dweb:/ipfs/QmbNknQ8pzssXDXGVjXxzZ8zh1YnNCWtRJVepiM1TnqoqQ\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef\",\"dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x3d8194c9e05aea4a9cefa1833ab4f3e95749b685ccf9a04719d235cac2fa3774\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0043e95acd7c29de3836e98cdcc4292eef201e3ebfab2d768bcfe47f800df8d\",\"dweb:/ipfs/QmTZNQVBdodruQ2x38nhERY9DFjU9oEFU21j5Atf7HUi3U\"]},\"contracts/universal/IMantleMintableERC20.sol\":{\"keccak256\":\"0xdc156dcecc45f6a3d4e43ebf32ada4e138b10ba54bd14486a3e5ac245f1fec56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae5d3252cb0620ce50c7d3f24ad31a1e7f0f327bfcabde2c91edc917d9e2595e\",\"dweb:/ipfs/QmSJzMvdZRgTeGK9dvm9W1EAPMmzhmNMF9TEBGqDC5E5ve\"]},\"contracts/universal/MantleMintableERC20.sol\":{\"keccak256\":\"0xbae1a4767d3274d9e591264c0fa1e924dae72809191a96d39becd3fc0340d09c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65dc69f7a27052ed082008268e5125ba1d97729db446a498d754baa0d13364d4\",\"dweb:/ipfs/QmUVUppu1N4zxk7CgxrH6xSccjYm7cdyX6YPhAmFZ9rhRz\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e\",\"dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m\"]},\"contracts/universal/StandardBridge.sol\":{\"keccak256\":\"0xd2ec8c4171f48c47216fdf3e9f58f2b95e9fdcc54f35609ed06195a5f92ea99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed3b1e5ca6d032a55fc44f7ed75d205f29833a25526b39635d9a61d72f69346\",\"dweb:/ipfs/QmTCwfHuZUFiLKCHnfjn3gkjSCGiqY8WSSeha173RcuRYy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSENGER",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_BRIDGE",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20To"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETHTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeBridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeBridgeETH"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messenger",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain."
            }
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "bridgeETH(uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
            }
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_to": "Address of the receiver."
            }
          },
          "constructor": {
            "params": {
              "_messenger": "Address of CrossDomainMessenger on this network.",
              "_otherBridge": "Address of the other StandardBridge contract."
            }
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of the ERC20 being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_from": "Address of the sender.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of ETH being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
              "_from": "Address of the sender.",
              "_to": "Address of the receiver."
            }
          },
          "messenger()": {
            "custom:legacy": "@notice Legacy getter for messenger contract.",
            "returns": {
              "_0": "Messenger contract on this domain."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSENGER()": {
            "notice": "Messenger contract on this domain."
          },
          "OTHER_BRIDGE()": {
            "notice": "Corresponding bridge on the other domain."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeETH(uint32,bytes)": {
            "notice": "Sends ETH to the sender's address on the other chain."
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
          },
          "deposits(address,address)": {
            "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/universal/StandardBridge.sol": "StandardBridge"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/libraries/Constants.sol": {
        "keccak256": "0x09a0d1616d822d77142123e6d1262be7ee71ee840e6022f75a4aa0c508659a99",
        "urls": [
          "bzz-raw://7bfbb81c230c0032a4d1c3e37b32708e82523c53b7b3b0df5558335c5c0949ee",
          "dweb:/ipfs/QmcRoHQTRxEbbngT1o9yPC5FfQiqqH8P1nTAB7RzgQbKVj"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018",
        "urls": [
          "bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b",
          "dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Hashing.sol": {
        "keccak256": "0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c",
        "urls": [
          "bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0",
          "dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X"
        ],
        "license": "MIT"
      },
      "contracts/libraries/SafeCall.sol": {
        "keccak256": "0xbb0621c028c18e9d5a54cf1a8136cf2e77f161de48aeb8d911e230f6b280c9ed",
        "urls": [
          "bzz-raw://924ecc629c7642bc19e2f8a390f1b946d22862c8889453da681b5bc1a45d7703",
          "dweb:/ipfs/QmbNknQ8pzssXDXGVjXxzZ8zh1YnNCWtRJVepiM1TnqoqQ"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Types.sol": {
        "keccak256": "0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a",
        "urls": [
          "bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef",
          "dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      },
      "contracts/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x3d8194c9e05aea4a9cefa1833ab4f3e95749b685ccf9a04719d235cac2fa3774",
        "urls": [
          "bzz-raw://c0043e95acd7c29de3836e98cdcc4292eef201e3ebfab2d768bcfe47f800df8d",
          "dweb:/ipfs/QmTZNQVBdodruQ2x38nhERY9DFjU9oEFU21j5Atf7HUi3U"
        ],
        "license": "MIT"
      },
      "contracts/universal/IMantleMintableERC20.sol": {
        "keccak256": "0xdc156dcecc45f6a3d4e43ebf32ada4e138b10ba54bd14486a3e5ac245f1fec56",
        "urls": [
          "bzz-raw://ae5d3252cb0620ce50c7d3f24ad31a1e7f0f327bfcabde2c91edc917d9e2595e",
          "dweb:/ipfs/QmSJzMvdZRgTeGK9dvm9W1EAPMmzhmNMF9TEBGqDC5E5ve"
        ],
        "license": "MIT"
      },
      "contracts/universal/MantleMintableERC20.sol": {
        "keccak256": "0xbae1a4767d3274d9e591264c0fa1e924dae72809191a96d39becd3fc0340d09c",
        "urls": [
          "bzz-raw://65dc69f7a27052ed082008268e5125ba1d97729db446a498d754baa0d13364d4",
          "dweb:/ipfs/QmUVUppu1N4zxk7CgxrH6xSccjYm7cdyX6YPhAmFZ9rhRz"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b",
        "urls": [
          "bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e",
          "dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m"
        ],
        "license": "MIT"
      },
      "contracts/universal/StandardBridge.sol": {
        "keccak256": "0xd2ec8c4171f48c47216fdf3e9f58f2b95e9fdcc54f35609ed06195a5f92ea99c",
        "urls": [
          "bzz-raw://0ed3b1e5ca6d032a55fc44f7ed75d205f29833a25526b39635d9a61d72f69346",
          "dweb:/ipfs/QmTCwfHuZUFiLKCHnfjn3gkjSCGiqY8WSSeha173RcuRYy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 44729,
        "contract": "contracts/universal/StandardBridge.sol:StandardBridge",
        "label": "spacer_0_0_20",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 44732,
        "contract": "contracts/universal/StandardBridge.sol:StandardBridge",
        "label": "spacer_1_0_20",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 44739,
        "contract": "contracts/universal/StandardBridge.sol:StandardBridge",
        "label": "deposits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 44744,
        "contract": "contracts/universal/StandardBridge.sol:StandardBridge",
        "label": "__gap",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)47_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)47_storage": {
        "encoding": "inplace",
        "label": "uint256[47]",
        "numberOfBytes": "1504",
        "base": "t_uint256"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSENGER()": {
        "notice": "Messenger contract on this domain."
      },
      "OTHER_BRIDGE()": {
        "notice": "Corresponding bridge on the other domain."
      },
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeETH(uint32,bytes)": {
        "notice": "Sends ETH to the sender's address on the other chain."
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
      },
      "deposits(address,address)": {
        "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is finalized on this chain."
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is initiated to the other chain."
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is finalized on this chain."
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is initiated to the other chain."
      }
    },
    "notice": "StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles         the core bridging logic, including escrowing tokens that are native to the local chain         and minting/burning tokens that are native to the remote chain."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain."
        }
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "bridgeETH(uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
        }
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_to": "Address of the receiver."
        }
      },
      "constructor": {
        "params": {
          "_messenger": "Address of CrossDomainMessenger on this network.",
          "_otherBridge": "Address of the other StandardBridge contract."
        }
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_from": "Address of the sender.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of ETH being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
          "_from": "Address of the sender.",
          "_to": "Address of the receiver."
        }
      },
      "messenger()": {
        "returns": {
          "_0": "Messenger contract on this domain."
        }
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "localToken": "Address of the ERC20 on this chain.",
          "remoteToken": "Address of the ERC20 on the remote chain.",
          "to": "Address of the receiver."
        }
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "localToken": "Address of the ERC20 on this chain.",
          "remoteToken": "Address of the ERC20 on the remote chain.",
          "to": "Address of the receiver."
        }
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of ETH sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "to": "Address of the receiver."
        }
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of ETH sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "to": "Address of the receiver."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "contracts/universal/StandardBridge.sol",
    "id": 45399,
    "exportedSymbols": {
      "Address": [
        49952
      ],
      "CrossDomainMessenger": [
        42781
      ],
      "ERC165Checker": [
        51034
      ],
      "IERC20": [
        47065
      ],
      "ILegacyMintableERC20": [
        43164
      ],
      "IMantleMintableERC20": [
        43141
      ],
      "MantleMintableERC20": [
        43448
      ],
      "SafeCall": [
        7837
      ],
      "SafeERC20": [
        48260
      ],
      "StandardBridge": [
        45398
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:21680:111",
    "nodes": [
      {
        "id": 44692,
        "nodeType": "PragmaDirective",
        "src": "32:23:111",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 44694,
        "nodeType": "ImportDirective",
        "src": "57:72:111",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45399,
        "sourceUnit": 47066,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44693,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 47065,
              "src": "66:6:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44696,
        "nodeType": "ImportDirective",
        "src": "130:94:111",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45399,
        "sourceUnit": 51035,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44695,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51034,
              "src": "139:13:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44698,
        "nodeType": "ImportDirective",
        "src": "225:68:111",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45399,
        "sourceUnit": 49953,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44697,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49952,
              "src": "234:7:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44700,
        "nodeType": "ImportDirective",
        "src": "294:84:111",
        "nodes": [],
        "absolutePath": "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45399,
        "sourceUnit": 48261,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44699,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48260,
              "src": "303:9:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44702,
        "nodeType": "ImportDirective",
        "src": "379:53:111",
        "nodes": [],
        "absolutePath": "contracts/libraries/SafeCall.sol",
        "file": "../libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45399,
        "sourceUnit": 7838,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44701,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7837,
              "src": "388:8:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44705,
        "nodeType": "ImportDirective",
        "src": "433:88:111",
        "nodes": [],
        "absolutePath": "contracts/universal/IMantleMintableERC20.sol",
        "file": "./IMantleMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45399,
        "sourceUnit": 43165,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44703,
              "name": "IMantleMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43141,
              "src": "442:20:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 44704,
              "name": "ILegacyMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43164,
              "src": "464:20:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44707,
        "nodeType": "ImportDirective",
        "src": "522:66:111",
        "nodes": [],
        "absolutePath": "contracts/universal/CrossDomainMessenger.sol",
        "file": "./CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45399,
        "sourceUnit": 42782,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44706,
              "name": "CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42781,
              "src": "531:20:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 44709,
        "nodeType": "ImportDirective",
        "src": "589:64:111",
        "nodes": [],
        "absolutePath": "contracts/universal/MantleMintableERC20.sol",
        "file": "./MantleMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 45399,
        "sourceUnit": 43449,
        "symbolAliases": [
          {
            "foreign": {
              "id": 44708,
              "name": "MantleMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43448,
              "src": "598:19:111",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 45398,
        "nodeType": "ContractDefinition",
        "src": "982:20729:111",
        "nodes": [
          {
            "id": 44714,
            "nodeType": "UsingForDirective",
            "src": "1021:27:111",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 44711,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48260,
              "src": "1027:9:111"
            },
            "typeName": {
              "id": 44713,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44712,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 47065,
                "src": "1041:6:111"
              },
              "referencedDeclaration": 47065,
              "src": "1041:6:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$47065",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 44718,
            "nodeType": "VariableDeclaration",
            "src": "1159:60:111",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 44715,
              "nodeType": "StructuredDocumentation",
              "src": "1054:100:111",
              "text": " @notice The L2 gas limit set when eth is depoisited using the receive() function."
            },
            "mutability": "constant",
            "name": "RECEIVE_DEFAULT_GAS_LIMIT",
            "nameLocation": "1184:25:111",
            "scope": 45398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 44716,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1159:6:111",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3230305f303030",
              "id": 44717,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1212:7:111",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000_by_1",
                "typeString": "int_const 200000"
              },
              "value": "200_000"
            },
            "visibility": "internal"
          },
          {
            "id": 44722,
            "nodeType": "VariableDeclaration",
            "src": "1292:47:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44719,
              "nodeType": "StructuredDocumentation",
              "src": "1226:61:111",
              "text": " @notice Messenger contract on this domain."
            },
            "functionSelector": "927ede2d",
            "mutability": "immutable",
            "name": "MESSENGER",
            "nameLocation": "1330:9:111",
            "scope": 45398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
              "typeString": "contract CrossDomainMessenger"
            },
            "typeName": {
              "id": 44721,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44720,
                "name": "CrossDomainMessenger",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 42781,
                "src": "1292:20:111"
              },
              "referencedDeclaration": 42781,
              "src": "1292:20:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                "typeString": "contract CrossDomainMessenger"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44726,
            "nodeType": "VariableDeclaration",
            "src": "1419:44:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44723,
              "nodeType": "StructuredDocumentation",
              "src": "1346:68:111",
              "text": " @notice Corresponding bridge on the other domain."
            },
            "functionSelector": "7f46ddb2",
            "mutability": "immutable",
            "name": "OTHER_BRIDGE",
            "nameLocation": "1451:12:111",
            "scope": 45398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StandardBridge_$45398",
              "typeString": "contract StandardBridge"
            },
            "typeName": {
              "id": 44725,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 44724,
                "name": "StandardBridge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45398,
                "src": "1419:14:111"
              },
              "referencedDeclaration": 45398,
              "src": "1419:14:111",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardBridge_$45398",
                "typeString": "contract StandardBridge"
              }
            },
            "visibility": "public"
          },
          {
            "id": 44729,
            "nodeType": "VariableDeclaration",
            "src": "1591:29:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44727,
              "nodeType": "StructuredDocumentation",
              "src": "1470:116:111",
              "text": " @custom:legacy\n @custom:spacer messenger\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_0_0_20",
            "nameLocation": "1607:13:111",
            "scope": 45398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44728,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1591:7:111",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44732,
            "nodeType": "VariableDeclaration",
            "src": "1752:29:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44730,
              "nodeType": "StructuredDocumentation",
              "src": "1627:120:111",
              "text": " @custom:legacy\n @custom:spacer l2TokenBridge\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_1_0_20",
            "nameLocation": "1768:13:111",
            "scope": 45398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 44731,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1752:7:111",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44739,
            "nodeType": "VariableDeclaration",
            "src": "1893:63:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44733,
              "nodeType": "StructuredDocumentation",
              "src": "1788:100:111",
              "text": " @notice Mapping that stores deposits for a given pair of local and remote tokens."
            },
            "functionSelector": "8f601f66",
            "mutability": "mutable",
            "name": "deposits",
            "nameLocation": "1948:8:111",
            "scope": 45398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 44738,
              "keyType": {
                "id": 44734,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1901:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1893:47:111",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 44737,
                "keyType": {
                  "id": 44735,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1920:7:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "1912:27:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 44736,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1931:7:111",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 44744,
            "nodeType": "VariableDeclaration",
            "src": "2215:25:111",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 44740,
              "nodeType": "StructuredDocumentation",
              "src": "1963:247:111",
              "text": " @notice Reserve extra slots (to a total of 50) in the storage layout for future upgrades.\n         A gap size of 47 was chosen here, so that the first slot used in a child contract\n         would be a multiple of 50."
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "2235:5:111",
            "scope": 45398,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$47_storage",
              "typeString": "uint256[47]"
            },
            "typeName": {
              "baseType": {
                "id": 44741,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2215:7:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 44743,
              "length": {
                "hexValue": "3437",
                "id": 44742,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2223:2:111",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_47_by_1",
                  "typeString": "int_const 47"
                },
                "value": "47"
              },
              "nodeType": "ArrayTypeName",
              "src": "2215:11:111",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$47_storage_ptr",
                "typeString": "uint256[47]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 44755,
            "nodeType": "EventDefinition",
            "src": "2547:138:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 44745,
              "nodeType": "StructuredDocumentation",
              "src": "2247:295:111",
              "text": " @notice Emitted when an ETH bridge is initiated to the other chain.\n @param from      Address of the sender.\n @param to        Address of the receiver.\n @param amount    Amount of ETH sent.\n @param extraData Extra data sent with the transaction."
            },
            "eventSelector": "2849b43074093a05396b6f2a937dee8565b15a48a7b3d4bffb732a5017380af5",
            "name": "ETHBridgeInitiated",
            "nameLocation": "2553:18:111",
            "parameters": {
              "id": 44754,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44747,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2597:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44755,
                  "src": "2581:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2581:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44749,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2627:2:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44755,
                  "src": "2611:18:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44748,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2611:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44751,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2647:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44755,
                  "src": "2639:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2639:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44753,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "2669:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44755,
                  "src": "2663:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44752,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2663:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2571:113:111"
            }
          },
          {
            "id": 44766,
            "nodeType": "EventDefinition",
            "src": "2986:138:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 44756,
              "nodeType": "StructuredDocumentation",
              "src": "2691:290:111",
              "text": " @notice Emitted when an ETH bridge is finalized on this chain.\n @param from      Address of the sender.\n @param to        Address of the receiver.\n @param amount    Amount of ETH sent.\n @param extraData Extra data sent with the transaction."
            },
            "eventSelector": "31b2166ff604fc5672ea5df08a78081d2bc6d746cadce880747f3643d819e83d",
            "name": "ETHBridgeFinalized",
            "nameLocation": "2992:18:111",
            "parameters": {
              "id": 44765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44758,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3036:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44766,
                  "src": "3020:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3020:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44760,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3066:2:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44766,
                  "src": "3050:18:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3050:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44762,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3086:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44766,
                  "src": "3078:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44761,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3078:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44764,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3108:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44766,
                  "src": "3102:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44763,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3102:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3010:113:111"
            }
          },
          {
            "id": 44781,
            "nodeType": "EventDefinition",
            "src": "3576:205:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 44767,
              "nodeType": "StructuredDocumentation",
              "src": "3130:441:111",
              "text": " @notice Emitted when an ERC20 bridge is initiated to the other chain.\n @param localToken  Address of the ERC20 on this chain.\n @param remoteToken Address of the ERC20 on the remote chain.\n @param from        Address of the sender.\n @param to          Address of the receiver.\n @param amount      Amount of the ERC20 sent.\n @param extraData   Extra data sent with the transaction."
            },
            "eventSelector": "7ff126db8024424bbfd9826e8ab82ff59136289ea440b04b39a0df1b03b9cabf",
            "name": "ERC20BridgeInitiated",
            "nameLocation": "3582:20:111",
            "parameters": {
              "id": 44780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44769,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localToken",
                  "nameLocation": "3628:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44781,
                  "src": "3612:26:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3612:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44771,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteToken",
                  "nameLocation": "3664:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44781,
                  "src": "3648:27:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44773,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3701:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44781,
                  "src": "3685:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3685:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44775,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3723:2:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44781,
                  "src": "3715:10:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3715:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44777,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3743:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44781,
                  "src": "3735:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3735:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44779,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3765:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44781,
                  "src": "3759:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44778,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3759:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3602:178:111"
            }
          },
          {
            "id": 44796,
            "nodeType": "EventDefinition",
            "src": "4228:205:111",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 44782,
              "nodeType": "StructuredDocumentation",
              "src": "3787:436:111",
              "text": " @notice Emitted when an ERC20 bridge is finalized on this chain.\n @param localToken  Address of the ERC20 on this chain.\n @param remoteToken Address of the ERC20 on the remote chain.\n @param from        Address of the sender.\n @param to          Address of the receiver.\n @param amount      Amount of the ERC20 sent.\n @param extraData   Extra data sent with the transaction."
            },
            "eventSelector": "d59c65b35445225835c83f50b6ede06a7be047d22e357073e250d9af537518cd",
            "name": "ERC20BridgeFinalized",
            "nameLocation": "4234:20:111",
            "parameters": {
              "id": 44795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44784,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localToken",
                  "nameLocation": "4280:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44796,
                  "src": "4264:26:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4264:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44786,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteToken",
                  "nameLocation": "4316:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44796,
                  "src": "4300:27:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4300:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44788,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4353:4:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44796,
                  "src": "4337:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4337:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44790,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4375:2:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44796,
                  "src": "4367:10:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4367:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4395:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44796,
                  "src": "4387:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4387:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44794,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "4417:9:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44796,
                  "src": "4411:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44793,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4411:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4254:178:111"
            }
          },
          {
            "id": 44811,
            "nodeType": "ModifierDefinition",
            "src": "4749:180:111",
            "nodes": [],
            "body": {
              "id": 44810,
              "nodeType": "Block",
              "src": "4768:161:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4799:31:111",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 44802,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "4819:3:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 44803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4819:10:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 44800,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 49952,
                              "src": "4800:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$49952_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 44801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49675,
                            "src": "4800:18:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 44804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4800:30:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20616e20454f41",
                        "id": 44806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4844:57:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f81f6db803ded0832643d2e0ed6f9119d9e7648506a58072f4a7195269d8cce8",
                          "typeString": "literal_string \"StandardBridge: function can only be called from an EOA\""
                        },
                        "value": "StandardBridge: function can only be called from an EOA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f81f6db803ded0832643d2e0ed6f9119d9e7648506a58072f4a7195269d8cce8",
                          "typeString": "literal_string \"StandardBridge: function can only be called from an EOA\""
                        }
                      ],
                      "id": 44799,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4778:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44807,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4778:133:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44808,
                  "nodeType": "ExpressionStatement",
                  "src": "4778:133:111"
                },
                {
                  "id": 44809,
                  "nodeType": "PlaceholderStatement",
                  "src": "4921:1:111"
                }
              ]
            },
            "documentation": {
              "id": 44797,
              "nodeType": "StructuredDocumentation",
              "src": "4439:305:111",
              "text": " @notice Only allow EOAs to call the functions. Note that this is not safe against contracts\n         calling code within their constructors, but also doesn't really matter since we're\n         just trying to prevent users accidentally depositing with smart contract wallets."
            },
            "name": "onlyEOA",
            "nameLocation": "4758:7:111",
            "parameters": {
              "id": 44798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4765:2:111"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44836,
            "nodeType": "ModifierDefinition",
            "src": "5038:276:111",
            "nodes": [],
            "body": {
              "id": 44835,
              "nodeType": "Block",
              "src": "5065:249:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 44830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 44821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 44815,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5096:3:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 44816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5096:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 44819,
                                "name": "MESSENGER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44722,
                                "src": "5118:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              ],
                              "id": 44818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5110:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44817,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5110:7:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44820,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5110:18:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5096:32:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 44829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 44822,
                                "name": "MESSENGER",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44722,
                                "src": "5148:9:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              },
                              "id": 44823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "xDomainMessageSender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42696,
                              "src": "5148:30:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 44824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5148:32:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 44827,
                                "name": "OTHER_BRIDGE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44726,
                                "src": "5192:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$45398",
                                  "typeString": "contract StandardBridge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StandardBridge_$45398",
                                  "typeString": "contract StandardBridge"
                                }
                              ],
                              "id": 44826,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5184:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 44825,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5184:7:111",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 44828,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5184:21:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5148:57:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5096:109:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20746865206f7468657220627269646765",
                        "id": 44831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5219:67:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc7005e6a766806113d4613be79beeb8d602af868fc04e2279ff0ca60009b99",
                          "typeString": "literal_string \"StandardBridge: function can only be called from the other bridge\""
                        },
                        "value": "StandardBridge: function can only be called from the other bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc7005e6a766806113d4613be79beeb8d602af868fc04e2279ff0ca60009b99",
                          "typeString": "literal_string \"StandardBridge: function can only be called from the other bridge\""
                        }
                      ],
                      "id": 44814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5075:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44832,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5075:221:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44833,
                  "nodeType": "ExpressionStatement",
                  "src": "5075:221:111"
                },
                {
                  "id": 44834,
                  "nodeType": "PlaceholderStatement",
                  "src": "5306:1:111"
                }
              ]
            },
            "documentation": {
              "id": 44812,
              "nodeType": "StructuredDocumentation",
              "src": "4935:98:111",
              "text": " @notice Ensures that the caller is a cross-chain message from the other bridge."
            },
            "name": "onlyOtherBridge",
            "nameLocation": "5047:15:111",
            "parameters": {
              "id": 44813,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5062:2:111"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44857,
            "nodeType": "FunctionDefinition",
            "src": "5485:184:111",
            "nodes": [],
            "body": {
              "id": 44856,
              "nodeType": "Block",
              "src": "5555:114:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44848,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44844,
                      "name": "MESSENGER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44722,
                      "src": "5565:9:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                        "typeString": "contract CrossDomainMessenger"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44846,
                          "name": "_messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44839,
                          "src": "5598:10:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 44845,
                        "name": "CrossDomainMessenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42781,
                        "src": "5577:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CrossDomainMessenger_$42781_$",
                          "typeString": "type(contract CrossDomainMessenger)"
                        }
                      },
                      "id": 44847,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5577:32:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                        "typeString": "contract CrossDomainMessenger"
                      }
                    },
                    "src": "5565:44:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "id": 44849,
                  "nodeType": "ExpressionStatement",
                  "src": "5565:44:111"
                },
                {
                  "expression": {
                    "id": 44854,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 44850,
                      "name": "OTHER_BRIDGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44726,
                      "src": "5619:12:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StandardBridge_$45398",
                        "typeString": "contract StandardBridge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 44852,
                          "name": "_otherBridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44841,
                          "src": "5649:12:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 44851,
                        "name": "StandardBridge",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45398,
                        "src": "5634:14:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_StandardBridge_$45398_$",
                          "typeString": "type(contract StandardBridge)"
                        }
                      },
                      "id": 44853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5634:28:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StandardBridge_$45398",
                        "typeString": "contract StandardBridge"
                      }
                    },
                    "src": "5619:43:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$45398",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "id": 44855,
                  "nodeType": "ExpressionStatement",
                  "src": "5619:43:111"
                }
              ]
            },
            "documentation": {
              "id": 44837,
              "nodeType": "StructuredDocumentation",
              "src": "5320:160:111",
              "text": " @param _messenger   Address of CrossDomainMessenger on this network.\n @param _otherBridge Address of the other StandardBridge contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44842,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44839,
                  "mutability": "mutable",
                  "name": "_messenger",
                  "nameLocation": "5513:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44857,
                  "src": "5497:26:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 44838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5497:15:111",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44841,
                  "mutability": "mutable",
                  "name": "_otherBridge",
                  "nameLocation": "5541:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44857,
                  "src": "5525:28:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 44840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5525:15:111",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5496:58:111"
            },
            "returnParameters": {
              "id": 44843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5555:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 44861,
            "nodeType": "FunctionDefinition",
            "src": "5829:35:111",
            "nodes": [],
            "documentation": {
              "id": 44858,
              "nodeType": "StructuredDocumentation",
              "src": "5675:149:111",
              "text": " @notice Allows EOAs to bridge ETH by sending directly to the bridge.\n         Must be implemented by contracts that inherit."
            },
            "implemented": false,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 44859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5836:2:111"
            },
            "returnParameters": {
              "id": 44860,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5863:0:111"
            },
            "scope": 45398,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 44871,
            "nodeType": "FunctionDefinition",
            "src": "6018:99:111",
            "nodes": [],
            "body": {
              "id": 44870,
              "nodeType": "Block",
              "src": "6084:33:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 44868,
                    "name": "MESSENGER",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 44722,
                    "src": "6101:9:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "functionReturnParameters": 44867,
                  "id": 44869,
                  "nodeType": "Return",
                  "src": "6094:16:111"
                }
              ]
            },
            "documentation": {
              "id": 44862,
              "nodeType": "StructuredDocumentation",
              "src": "5870:143:111",
              "text": " @custom:legacy\n @notice Legacy getter for messenger contract.\n @return Messenger contract on this domain."
            },
            "functionSelector": "3cb747bf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "messenger",
            "nameLocation": "6027:9:111",
            "parameters": {
              "id": 44863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6036:2:111"
            },
            "returnParameters": {
              "id": 44867,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44866,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 44871,
                  "src": "6062:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                    "typeString": "contract CrossDomainMessenger"
                  },
                  "typeName": {
                    "id": 44865,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 44864,
                      "name": "CrossDomainMessenger",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42781,
                      "src": "6062:20:111"
                    },
                    "referencedDeclaration": 42781,
                    "src": "6062:20:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6061:22:111"
            },
            "scope": 45398,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 44893,
            "nodeType": "FunctionDefinition",
            "src": "6556:186:111",
            "nodes": [],
            "body": {
              "id": 44892,
              "nodeType": "Block",
              "src": "6646:96:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44882,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6675:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6675:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44884,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6687:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44885,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6687:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44886,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6699:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44887,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "6699:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 44888,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44874,
                        "src": "6710:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 44889,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44876,
                        "src": "6724:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 44881,
                      "name": "_initiateBridgeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45161,
                      "src": "6656:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 44890,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6656:79:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44891,
                  "nodeType": "ExpressionStatement",
                  "src": "6656:79:111"
                }
              ]
            },
            "documentation": {
              "id": 44872,
              "nodeType": "StructuredDocumentation",
              "src": "6123:428:111",
              "text": " @notice Sends ETH to the sender's address on the other chain.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "09fc8843",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44879,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44878,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44811,
                  "src": "6638:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "6638:7:111"
              }
            ],
            "name": "bridgeETH",
            "nameLocation": "6565:9:111",
            "parameters": {
              "id": 44877,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44874,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "6582:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44893,
                  "src": "6575:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 44873,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6575:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44876,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "6611:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44893,
                  "src": "6596:25:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44875,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6596:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6574:48:111"
            },
            "returnParameters": {
              "id": 44880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6646:0:111"
            },
            "scope": 45398,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44914,
            "nodeType": "FunctionDefinition",
            "src": "7764:216:111",
            "nodes": [],
            "body": {
              "id": 44913,
              "nodeType": "Block",
              "src": "7891:89:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 44904,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7920:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7920:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44906,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44896,
                        "src": "7932:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44907,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7937:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7937:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 44909,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44898,
                        "src": "7948:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 44910,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44900,
                        "src": "7962:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 44903,
                      "name": "_initiateBridgeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45161,
                      "src": "7901:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 44911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7901:72:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44912,
                  "nodeType": "ExpressionStatement",
                  "src": "7901:72:111"
                }
              ]
            },
            "documentation": {
              "id": 44894,
              "nodeType": "StructuredDocumentation",
              "src": "6748:1011:111",
              "text": " @notice Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a\n         smart contract and the call fails, the ETH will be temporarily locked in the\n         StandardBridge on the other chain until the call is replayed. If the call cannot be\n         replayed with any amount of gas (call always reverts), then the ETH will be\n         permanently locked in the StandardBridge on the other chain. ETH will also\n         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert\n         in that case.\n @param _to          Address of the receiver.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "e11013dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeETHTo",
            "nameLocation": "7773:11:111",
            "parameters": {
              "id": 44901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44896,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7802:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44914,
                  "src": "7794:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44895,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7794:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44898,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "7822:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44914,
                  "src": "7815:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 44897,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7815:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44900,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "7859:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44914,
                  "src": "7844:25:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44899,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7844:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7784:91:111"
            },
            "returnParameters": {
              "id": 44902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7891:0:111"
            },
            "scope": 45398,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 44943,
            "nodeType": "FunctionDefinition",
            "src": "8875:415:111",
            "nodes": [],
            "body": {
              "id": 44942,
              "nodeType": "Block",
              "src": "9073:217:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44931,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44917,
                        "src": "9117:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44932,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44919,
                        "src": "9142:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44933,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9168:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9168:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44935,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9192:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9192:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44937,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44921,
                        "src": "9216:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 44938,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44923,
                        "src": "9237:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 44939,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44925,
                        "src": "9263:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 44930,
                      "name": "_initiateBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45259,
                      "src": "9083:20:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 44940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9083:200:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44941,
                  "nodeType": "ExpressionStatement",
                  "src": "9083:200:111"
                }
              ]
            },
            "documentation": {
              "id": 44915,
              "nodeType": "StructuredDocumentation",
              "src": "7986:884:111",
              "text": " @notice Sends ERC20 tokens to the sender's address on the other chain. Note that if the\n         ERC20 token on the other chain does not recognize the local token as the correct\n         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on\n         this chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "87087623",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44928,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44927,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44811,
                  "src": "9065:7:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "9065:7:111"
              }
            ],
            "name": "bridgeERC20",
            "nameLocation": "8884:11:111",
            "parameters": {
              "id": 44926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44917,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "8913:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44943,
                  "src": "8905:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8905:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44919,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "8942:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44943,
                  "src": "8934:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8934:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44921,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8972:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44943,
                  "src": "8964:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8964:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44923,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "8996:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44943,
                  "src": "8989:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 44922,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8989:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44925,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "9033:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44943,
                  "src": "9018:25:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44924,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9018:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8895:154:111"
            },
            "returnParameters": {
              "id": 44929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9073:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 44971,
            "nodeType": "FunctionDefinition",
            "src": "10237:423:111",
            "nodes": [],
            "body": {
              "id": 44970,
              "nodeType": "Block",
              "src": "10450:210:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 44960,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44946,
                        "src": "10494:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44961,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44948,
                        "src": "10519:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 44962,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10545:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 44963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10545:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44964,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44950,
                        "src": "10569:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 44965,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44952,
                        "src": "10586:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 44966,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44954,
                        "src": "10607:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 44967,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44956,
                        "src": "10633:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 44959,
                      "name": "_initiateBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45259,
                      "src": "10460:20:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 44968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10460:193:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44969,
                  "nodeType": "ExpressionStatement",
                  "src": "10460:193:111"
                }
              ]
            },
            "documentation": {
              "id": 44944,
              "nodeType": "StructuredDocumentation",
              "src": "9296:936:111",
              "text": " @notice Sends ERC20 tokens to a receiver's address on the other chain. Note that if the\n         ERC20 token on the other chain does not recognize the local token as the correct\n         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on\n         this chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _to          Address of the receiver.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "540abf73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeERC20To",
            "nameLocation": "10246:13:111",
            "parameters": {
              "id": 44957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44946,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "10277:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44971,
                  "src": "10269:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10269:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44948,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "10306:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44971,
                  "src": "10298:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44947,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10298:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44950,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10336:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44971,
                  "src": "10328:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10328:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44952,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10357:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44971,
                  "src": "10349:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44951,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10349:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44954,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "10381:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44971,
                  "src": "10374:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 44953,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10374:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44956,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "10418:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 44971,
                  "src": "10403:25:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44955,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10403:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10259:175:111"
            },
            "returnParameters": {
              "id": 44958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10450:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 45037,
            "nodeType": "FunctionDefinition",
            "src": "11239:812:111",
            "nodes": [],
            "body": {
              "id": 45036,
              "nodeType": "Block",
              "src": "11407:644:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 44989,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 44986,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11425:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 44987,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "11425:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 44988,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44978,
                          "src": "11438:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11425:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a20616d6f756e742073656e7420646f6573206e6f74206d6174636820616d6f756e74207265717569726564",
                        "id": 44990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11447:60:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_749dee892fab459b2a65ea18df9e6a5e7c9a73fce72448f7ab9f6675c56ba5f9",
                          "typeString": "literal_string \"StandardBridge: amount sent does not match amount required\""
                        },
                        "value": "StandardBridge: amount sent does not match amount required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_749dee892fab459b2a65ea18df9e6a5e7c9a73fce72448f7ab9f6675c56ba5f9",
                          "typeString": "literal_string \"StandardBridge: amount sent does not match amount required\""
                        }
                      ],
                      "id": 44985,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11417:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 44991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11417:91:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 44992,
                  "nodeType": "ExpressionStatement",
                  "src": "11417:91:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 44999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 44994,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44976,
                          "src": "11526:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 44997,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "11541:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StandardBridge_$45398",
                                "typeString": "contract StandardBridge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StandardBridge_$45398",
                                "typeString": "contract StandardBridge"
                              }
                            ],
                            "id": 44996,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11533:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 44995,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11533:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 44998,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11533:13:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11526:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2063616e6e6f742073656e6420746f2073656c66",
                        "id": 45000,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11548:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_364ece159cd10e2597bf40a779e1ef408a544f5e6897b0ca6e317dc7bdbe0069",
                          "typeString": "literal_string \"StandardBridge: cannot send to self\""
                        },
                        "value": "StandardBridge: cannot send to self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_364ece159cd10e2597bf40a779e1ef408a544f5e6897b0ca6e317dc7bdbe0069",
                          "typeString": "literal_string \"StandardBridge: cannot send to self\""
                        }
                      ],
                      "id": 44993,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11518:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45001,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11518:68:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45002,
                  "nodeType": "ExpressionStatement",
                  "src": "11518:68:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 45009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 45004,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44976,
                          "src": "11604:3:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 45007,
                              "name": "MESSENGER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44722,
                              "src": "11619:9:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                                "typeString": "contract CrossDomainMessenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                                "typeString": "contract CrossDomainMessenger"
                              }
                            ],
                            "id": 45006,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11611:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 45005,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11611:7:111",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 45008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11611:18:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "11604:25:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d657373656e676572",
                        "id": 45010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11631:42:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb1651f00fbd785fb5543c143a369e5c0d2f97fa08d6d7ef9cc99912d7f788fb",
                          "typeString": "literal_string \"StandardBridge: cannot send to messenger\""
                        },
                        "value": "StandardBridge: cannot send to messenger"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb1651f00fbd785fb5543c143a369e5c0d2f97fa08d6d7ef9cc99912d7f788fb",
                          "typeString": "literal_string \"StandardBridge: cannot send to messenger\""
                        }
                      ],
                      "id": 45003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11596:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45011,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11596:78:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45012,
                  "nodeType": "ExpressionStatement",
                  "src": "11596:78:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45014,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44974,
                        "src": "11876:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45015,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44976,
                        "src": "11883:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45016,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44978,
                        "src": "11888:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45017,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44980,
                        "src": "11897:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 45013,
                      "name": "_emitETHBridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45345,
                      "src": "11852:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 45018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11852:56:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45019,
                  "nodeType": "ExpressionStatement",
                  "src": "11852:56:111"
                },
                {
                  "assignments": [
                    45021
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 45021,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "11924:7:111",
                      "nodeType": "VariableDeclaration",
                      "scope": 45036,
                      "src": "11919:12:111",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 45020,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "11919:4:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 45030,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 45024,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44976,
                        "src": "11948:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 45025,
                          "name": "gasleft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -7,
                          "src": "11953:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 45026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11953:9:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45027,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44978,
                        "src": "11964:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 45028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11973:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 45022,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7837,
                        "src": "11934:8:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$7837_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 45023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7836,
                      "src": "11934:13:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 45029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11934:45:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11919:60:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45032,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45021,
                        "src": "11997:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a20455448207472616e73666572206661696c6564",
                        "id": 45033,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12006:37:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a586f60b387cfb0a96943ab7b9fd5ab5ac1e6a8684db2528d4c0f01b4da8e10",
                          "typeString": "literal_string \"StandardBridge: ETH transfer failed\""
                        },
                        "value": "StandardBridge: ETH transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a586f60b387cfb0a96943ab7b9fd5ab5ac1e6a8684db2528d4c0f01b4da8e10",
                          "typeString": "literal_string \"StandardBridge: ETH transfer failed\""
                        }
                      ],
                      "id": 45031,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11989:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11989:55:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45035,
                  "nodeType": "ExpressionStatement",
                  "src": "11989:55:111"
                }
              ]
            },
            "documentation": {
              "id": 44972,
              "nodeType": "StructuredDocumentation",
              "src": "10666:568:111",
              "text": " @notice Finalizes an ETH bridge on this chain. Can only be triggered by the other\n         StandardBridge contract on the remote chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH being bridged.\n @param _extraData Extra data to be sent with the transaction. Note that the recipient will\n                   not be triggered with this data, but it will be emitted and can be used\n                   to identify the transaction."
            },
            "functionSelector": "1635f5fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 44983,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 44982,
                  "name": "onlyOtherBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44836,
                  "src": "11391:15:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "11391:15:111"
              }
            ],
            "name": "finalizeBridgeETH",
            "nameLocation": "11248:17:111",
            "parameters": {
              "id": 44981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 44974,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "11283:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45037,
                  "src": "11275:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11275:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44976,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "11306:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45037,
                  "src": "11298:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 44975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11298:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44978,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11327:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45037,
                  "src": "11319:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 44977,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11319:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 44980,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "11359:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45037,
                  "src": "11344:25:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 44979,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11344:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11265:110:111"
            },
            "returnParameters": {
              "id": 44984,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11407:0:111"
            },
            "scope": 45398,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45109,
            "nodeType": "FunctionDefinition",
            "src": "12796:996:111",
            "nodes": [],
            "body": {
              "id": 45108,
              "nodeType": "Block",
              "src": "13017:775:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 45056,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45040,
                        "src": "13054:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 45055,
                      "name": "_isMantleMintableERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45286,
                      "src": "13031:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 45057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13031:35:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 45097,
                    "nodeType": "Block",
                    "src": "13342:168:111",
                    "statements": [
                      {
                        "expression": {
                          "id": 45087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 45075,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44739,
                                "src": "13356:8:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 45078,
                              "indexExpression": {
                                "id": 45076,
                                "name": "_localToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45040,
                                "src": "13365:11:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13356:21:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 45079,
                            "indexExpression": {
                              "id": 45077,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45042,
                              "src": "13378:12:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13356:35:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 45086,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 45080,
                                  "name": "deposits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44739,
                                  "src": "13394:8:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 45082,
                                "indexExpression": {
                                  "id": 45081,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45040,
                                  "src": "13403:11:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13394:21:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 45084,
                              "indexExpression": {
                                "id": 45083,
                                "name": "_remoteToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45042,
                                "src": "13416:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13394:35:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 45085,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45048,
                              "src": "13432:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13394:45:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13356:83:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 45088,
                        "nodeType": "ExpressionStatement",
                        "src": "13356:83:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45093,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45046,
                              "src": "13486:3:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 45094,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45048,
                              "src": "13491:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 45090,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45040,
                                  "src": "13460:11:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45089,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47065,
                                "src": "13453:6:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$47065_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 45091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13453:19:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$47065",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 45092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48011,
                            "src": "13453:32:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$47065_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$47065_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 45095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13453:46:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45096,
                        "nodeType": "ExpressionStatement",
                        "src": "13453:46:111"
                      }
                    ]
                  },
                  "id": 45098,
                  "nodeType": "IfStatement",
                  "src": "13027:483:111",
                  "trueBody": {
                    "id": 45074,
                    "nodeType": "Block",
                    "src": "13068:268:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 45060,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45040,
                                  "src": "13127:11:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 45061,
                                  "name": "_remoteToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45042,
                                  "src": "13140:12:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45059,
                                "name": "_isCorrectTokenPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45305,
                                "src": "13107:19:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 45062,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13107:46:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b656e20666f72204d616e746c65204d696e7461626c65204552433230206c6f63616c20746f6b656e",
                              "id": 45063,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13171:74:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_83b20ff42fc9f4d9bd4f1a4b50ec9c093a61322a20478f70ad93488ec7c890ba",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Mantle Mintable ERC20 local token\""
                              },
                              "value": "StandardBridge: wrong remote token for Mantle Mintable ERC20 local token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_83b20ff42fc9f4d9bd4f1a4b50ec9c093a61322a20478f70ad93488ec7c890ba",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Mantle Mintable ERC20 local token\""
                              }
                            ],
                            "id": 45058,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13082:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 45064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13082:177:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45065,
                        "nodeType": "ExpressionStatement",
                        "src": "13082:177:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45070,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45046,
                              "src": "13312:3:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 45071,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45048,
                              "src": "13317:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 45067,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45040,
                                  "src": "13294:11:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45066,
                                "name": "MantleMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43448,
                                "src": "13274:19:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MantleMintableERC20_$43448_$",
                                  "typeString": "type(contract MantleMintableERC20)"
                                }
                              },
                              "id": 45068,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13274:32:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MantleMintableERC20_$43448",
                                "typeString": "contract MantleMintableERC20"
                              }
                            },
                            "id": 45069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43345,
                            "src": "13274:37:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 45072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13274:51:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45073,
                        "nodeType": "ExpressionStatement",
                        "src": "13274:51:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45100,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45040,
                        "src": "13726:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45101,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45042,
                        "src": "13739:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45102,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45044,
                        "src": "13753:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45103,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45046,
                        "src": "13760:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45104,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45048,
                        "src": "13765:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45105,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45050,
                        "src": "13774:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 45099,
                      "name": "_emitERC20BridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45397,
                      "src": "13700:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 45106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13700:85:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45107,
                  "nodeType": "ExpressionStatement",
                  "src": "13700:85:111"
                }
              ]
            },
            "documentation": {
              "id": 45038,
              "nodeType": "StructuredDocumentation",
              "src": "12057:734:111",
              "text": " @notice Finalizes an ERC20 bridge on this chain. Can only be triggered by the other\n         StandardBridge contract on the remote chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 being bridged.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "0166a07a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 45053,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 45052,
                  "name": "onlyOtherBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44836,
                  "src": "13001:15:111"
                },
                "nodeType": "ModifierInvocation",
                "src": "13001:15:111"
              }
            ],
            "name": "finalizeBridgeERC20",
            "nameLocation": "12805:19:111",
            "parameters": {
              "id": 45051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45040,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "12842:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45109,
                  "src": "12834:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12834:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45042,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "12871:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45109,
                  "src": "12863:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45041,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12863:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45044,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "12901:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45109,
                  "src": "12893:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45043,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12893:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45046,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "12924:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45109,
                  "src": "12916:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45045,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12916:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45048,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "12945:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45109,
                  "src": "12937:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45047,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12937:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45050,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "12977:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45109,
                  "src": "12962:25:111",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45049,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12962:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12824:169:111"
            },
            "returnParameters": {
              "id": 45054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13017:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 45161,
            "nodeType": "FunctionDefinition",
            "src": "14395:871:111",
            "nodes": [],
            "body": {
              "id": 45160,
              "nodeType": "Block",
              "src": "14569:697:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 45127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 45124,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "14600:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 45125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "14600:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 45126,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45116,
                          "src": "14613:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14600:20:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a206272696467696e6720455448206d75737420696e636c7564652073756666696369656e74204554482076616c7565",
                        "id": 45128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14634:64:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_950f54835f4d06e00870356a5c9513a8179dddf76cd62de2e9f0d1ce59b30241",
                          "typeString": "literal_string \"StandardBridge: bridging ETH must include sufficient ETH value\""
                        },
                        "value": "StandardBridge: bridging ETH must include sufficient ETH value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_950f54835f4d06e00870356a5c9513a8179dddf76cd62de2e9f0d1ce59b30241",
                          "typeString": "literal_string \"StandardBridge: bridging ETH must include sufficient ETH value\""
                        }
                      ],
                      "id": 45123,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14579:7:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 45129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14579:129:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45130,
                  "nodeType": "ExpressionStatement",
                  "src": "14579:129:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45132,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45112,
                        "src": "14910:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45133,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45114,
                        "src": "14917:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45134,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45116,
                        "src": "14922:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45135,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45120,
                        "src": "14931:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 45131,
                      "name": "_emitETHBridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45325,
                      "src": "14886:23:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 45136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14886:56:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45137,
                  "nodeType": "ExpressionStatement",
                  "src": "14886:56:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45145,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44726,
                            "src": "15014:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandardBridge_$45398",
                              "typeString": "contract StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandardBridge_$45398",
                              "typeString": "contract StandardBridge"
                            }
                          ],
                          "id": 45144,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15006:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45143,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15006:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15006:21:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 45149,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15081:4:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$45398",
                                  "typeString": "contract StandardBridge"
                                }
                              },
                              "id": 45150,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finalizeBridgeETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45037,
                              "src": "15081:22:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,uint256,bytes memory) payable external"
                              }
                            },
                            "id": 45151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15081:31:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 45152,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45112,
                            "src": "15130:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 45153,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45114,
                            "src": "15153:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 45154,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45116,
                            "src": "15174:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 45155,
                            "name": "_extraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45120,
                            "src": "15199:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 45147,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15041:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 45148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15041:22:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 45156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15041:182:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 45157,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45118,
                        "src": "15237:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 45138,
                          "name": "MESSENGER",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 44722,
                          "src": "14953:9:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                            "typeString": "contract CrossDomainMessenger"
                          }
                        },
                        "id": 45140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sendMessage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42470,
                        "src": "14953:21:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                          "typeString": "function (address,bytes memory,uint32) payable external"
                        }
                      },
                      "id": 45142,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 45141,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45116,
                          "src": "14983:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "14953:39:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$value",
                        "typeString": "function (address,bytes memory,uint32) payable external"
                      }
                    },
                    "id": 45158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14953:306:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45159,
                  "nodeType": "ExpressionStatement",
                  "src": "14953:306:111"
                }
              ]
            },
            "documentation": {
              "id": 45110,
              "nodeType": "StructuredDocumentation",
              "src": "13798:592:111",
              "text": " @notice Initiates a bridge of ETH through the CrossDomainMessenger.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of ETH being bridged.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeETH",
            "nameLocation": "14404:18:111",
            "parameters": {
              "id": 45121,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45112,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "14440:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45161,
                  "src": "14432:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45111,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14432:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45114,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "14463:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45161,
                  "src": "14455:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14455:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45116,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14484:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45161,
                  "src": "14476:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14476:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45118,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "14508:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45161,
                  "src": "14501:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 45117,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14501:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45120,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "14543:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45161,
                  "src": "14530:23:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45119,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14530:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14422:137:111"
            },
            "returnParameters": {
              "id": 45122,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14569:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45259,
            "nodeType": "FunctionDefinition",
            "src": "15974:1628:111",
            "nodes": [],
            "body": {
              "id": 45258,
              "nodeType": "Block",
              "src": "16209:1393:111",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 45180,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45164,
                        "src": "16246:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 45179,
                      "name": "_isMantleMintableERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45286,
                      "src": "16223:22:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 45181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16223:35:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 45225,
                    "nodeType": "Block",
                    "src": "16536:189:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45203,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45168,
                              "src": "16587:5:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 45206,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "16602:4:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StandardBridge_$45398",
                                    "typeString": "contract StandardBridge"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StandardBridge_$45398",
                                    "typeString": "contract StandardBridge"
                                  }
                                ],
                                "id": 45205,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "16594:7:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 45204,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "16594:7:111",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 45207,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16594:13:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 45208,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45172,
                              "src": "16609:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 45200,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45164,
                                  "src": "16557:11:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45199,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47065,
                                "src": "16550:6:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$47065_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 45201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16550:19:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$47065",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 45202,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 48037,
                            "src": "16550:36:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$47065_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$47065_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 45209,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16550:67:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45210,
                        "nodeType": "ExpressionStatement",
                        "src": "16550:67:111"
                      },
                      {
                        "expression": {
                          "id": 45223,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 45211,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44739,
                                "src": "16631:8:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 45214,
                              "indexExpression": {
                                "id": 45212,
                                "name": "_localToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45164,
                                "src": "16640:11:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16631:21:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 45215,
                            "indexExpression": {
                              "id": 45213,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45166,
                              "src": "16653:12:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "16631:35:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 45222,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 45216,
                                  "name": "deposits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 44739,
                                  "src": "16669:8:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 45218,
                                "indexExpression": {
                                  "id": 45217,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45164,
                                  "src": "16678:11:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "16669:21:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 45220,
                              "indexExpression": {
                                "id": 45219,
                                "name": "_remoteToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45166,
                                "src": "16691:12:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "16669:35:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 45221,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45172,
                              "src": "16707:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "16669:45:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "16631:83:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 45224,
                        "nodeType": "ExpressionStatement",
                        "src": "16631:83:111"
                      }
                    ]
                  },
                  "id": 45226,
                  "nodeType": "IfStatement",
                  "src": "16219:506:111",
                  "trueBody": {
                    "id": 45198,
                    "nodeType": "Block",
                    "src": "16260:270:111",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 45184,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45164,
                                  "src": "16319:11:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 45185,
                                  "name": "_remoteToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45166,
                                  "src": "16332:12:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45183,
                                "name": "_isCorrectTokenPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45305,
                                "src": "16299:19:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 45186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16299:46:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b656e20666f72204d616e746c65204d696e7461626c65204552433230206c6f63616c20746f6b656e",
                              "id": 45187,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16363:74:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_83b20ff42fc9f4d9bd4f1a4b50ec9c093a61322a20478f70ad93488ec7c890ba",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Mantle Mintable ERC20 local token\""
                              },
                              "value": "StandardBridge: wrong remote token for Mantle Mintable ERC20 local token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_83b20ff42fc9f4d9bd4f1a4b50ec9c093a61322a20478f70ad93488ec7c890ba",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Mantle Mintable ERC20 local token\""
                              }
                            ],
                            "id": 45182,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16274:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 45188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16274:177:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45189,
                        "nodeType": "ExpressionStatement",
                        "src": "16274:177:111"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 45194,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45168,
                              "src": "16504:5:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 45195,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45172,
                              "src": "16511:7:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 45191,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45164,
                                  "src": "16486:11:111",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 45190,
                                "name": "MantleMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43448,
                                "src": "16466:19:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MantleMintableERC20_$43448_$",
                                  "typeString": "type(contract MantleMintableERC20)"
                                }
                              },
                              "id": 45192,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16466:32:111",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MantleMintableERC20_$43448",
                                "typeString": "contract MantleMintableERC20"
                              }
                            },
                            "id": 45193,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43369,
                            "src": "16466:37:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 45196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16466:53:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 45197,
                        "nodeType": "ExpressionStatement",
                        "src": "16466:53:111"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 45228,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45164,
                        "src": "16941:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45229,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45166,
                        "src": "16954:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45230,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45168,
                        "src": "16968:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45231,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45170,
                        "src": "16975:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45232,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45172,
                        "src": "16980:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45233,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45176,
                        "src": "16989:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 45227,
                      "name": "_emitERC20BridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45371,
                      "src": "16915:25:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 45234,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16915:85:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45235,
                  "nodeType": "ExpressionStatement",
                  "src": "16915:85:111"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 45241,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 44726,
                            "src": "17054:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandardBridge_$45398",
                              "typeString": "contract StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandardBridge_$45398",
                              "typeString": "contract StandardBridge"
                            }
                          ],
                          "id": 45240,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17046:7:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 45239,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17046:7:111",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 45242,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17046:21:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 45245,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17121:4:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$45398",
                                  "typeString": "contract StandardBridge"
                                }
                              },
                              "id": 45246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finalizeBridgeERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 45109,
                              "src": "17121:24:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,address,address,uint256,bytes memory) external"
                              }
                            },
                            "id": 45247,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "17121:33:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 45248,
                            "name": "_remoteToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45166,
                            "src": "17407:12:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 45249,
                            "name": "_localToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45164,
                            "src": "17437:11:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 45250,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45168,
                            "src": "17466:5:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 45251,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45170,
                            "src": "17489:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 45252,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45172,
                            "src": "17510:7:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 45253,
                            "name": "_extraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45176,
                            "src": "17535:10:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 45243,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17081:3:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 45244,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "17081:22:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 45254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17081:478:111",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 45255,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45174,
                        "src": "17573:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 45236,
                        "name": "MESSENGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44722,
                        "src": "17011:9:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$42781",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      },
                      "id": 45238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42470,
                      "src": "17011:21:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) payable external"
                      }
                    },
                    "id": 45256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17011:584:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45257,
                  "nodeType": "ExpressionStatement",
                  "src": "17011:584:111"
                }
              ]
            },
            "documentation": {
              "id": 45162,
              "nodeType": "StructuredDocumentation",
              "src": "15272:697:111",
              "text": " @notice Sends ERC20 tokens to a receiver's address on the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _to          Address of the receiver.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeERC20",
            "nameLocation": "15983:20:111",
            "parameters": {
              "id": 45177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45164,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "16021:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45259,
                  "src": "16013:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45163,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16013:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45166,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "16050:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45259,
                  "src": "16042:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16042:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45168,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "16080:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45259,
                  "src": "16072:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16072:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45170,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "16103:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45259,
                  "src": "16095:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16095:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45172,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "16124:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45259,
                  "src": "16116:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45171,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16116:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45174,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "16148:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45259,
                  "src": "16141:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 45173,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16141:6:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45176,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "16183:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45259,
                  "src": "16170:23:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45175,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16170:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16003:196:111"
            },
            "returnParameters": {
              "id": 45178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16209:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45286,
            "nodeType": "FunctionDefinition",
            "src": "17888:287:111",
            "nodes": [],
            "body": {
              "id": 45285,
              "nodeType": "Block",
              "src": "17965:210:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 45283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 45269,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45262,
                          "src": "18026:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45271,
                                "name": "ILegacyMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43164,
                                "src": "18039:20:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$43164_$",
                                  "typeString": "type(contract ILegacyMintableERC20)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$43164_$",
                                  "typeString": "type(contract ILegacyMintableERC20)"
                                }
                              ],
                              "id": 45270,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "18034:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 45272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18034:26:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_ILegacyMintableERC20_$43164",
                              "typeString": "type(contract ILegacyMintableERC20)"
                            }
                          },
                          "id": 45273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "18034:38:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 45267,
                          "name": "ERC165Checker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51034,
                          "src": "17994:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$51034_$",
                            "typeString": "type(library ERC165Checker)"
                          }
                        },
                        "id": 45268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50890,
                        "src": "17994:31:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 45274,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "17994:79:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 45277,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45262,
                          "src": "18121:6:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 45279,
                                "name": "IMantleMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43141,
                                "src": "18134:20:111",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IMantleMintableERC20_$43141_$",
                                  "typeString": "type(contract IMantleMintableERC20)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IMantleMintableERC20_$43141_$",
                                  "typeString": "type(contract IMantleMintableERC20)"
                                }
                              ],
                              "id": 45278,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "18129:4:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 45280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18129:26:111",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IMantleMintableERC20_$43141",
                              "typeString": "type(contract IMantleMintableERC20)"
                            }
                          },
                          "id": 45281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "18129:38:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 45275,
                          "name": "ERC165Checker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51034,
                          "src": "18089:13:111",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$51034_$",
                            "typeString": "type(library ERC165Checker)"
                          }
                        },
                        "id": 45276,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50890,
                        "src": "18089:31:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 45282,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18089:79:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "17994:174:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 45266,
                  "id": 45284,
                  "nodeType": "Return",
                  "src": "17975:193:111"
                }
              ]
            },
            "documentation": {
              "id": 45260,
              "nodeType": "StructuredDocumentation",
              "src": "17608:275:111",
              "text": " @notice Checks if a given address is an MantleMintableERC20. Not perfect, but good enough.\n         Just the way we like it.\n @param _token Address of the token to check.\n @return True if the token is an MantleMintableERC20."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isMantleMintableERC20",
            "nameLocation": "17897:22:111",
            "parameters": {
              "id": 45263,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45262,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "17928:6:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45286,
                  "src": "17920:14:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45261,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17920:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17919:16:111"
            },
            "returnParameters": {
              "id": 45266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45265,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45286,
                  "src": "17959:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45264,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17959:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17958:6:111"
            },
            "scope": 45398,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45305,
            "nodeType": "FunctionDefinition",
            "src": "18520:215:111",
            "nodes": [],
            "body": {
              "id": 45304,
              "nodeType": "Block",
              "src": "18651:84:111",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 45302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 45296,
                      "name": "_otherToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 45291,
                      "src": "18668:11:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 45298,
                              "name": "_mintableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45289,
                              "src": "18703:14:111",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 45297,
                            "name": "MantleMintableERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43448,
                            "src": "18683:19:111",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_MantleMintableERC20_$43448_$",
                              "typeString": "type(contract MantleMintableERC20)"
                            }
                          },
                          "id": 45299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18683:35:111",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MantleMintableERC20_$43448",
                            "typeString": "contract MantleMintableERC20"
                          }
                        },
                        "id": 45300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "l1Token",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43420,
                        "src": "18683:43:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                          "typeString": "function () view external returns (address)"
                        }
                      },
                      "id": 45301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18683:45:111",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18668:60:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 45295,
                  "id": 45303,
                  "nodeType": "Return",
                  "src": "18661:67:111"
                }
              ]
            },
            "documentation": {
              "id": 45287,
              "nodeType": "StructuredDocumentation",
              "src": "18181:334:111",
              "text": " @notice Checks if the \"other token\" is the correct pair token for the MantleMintableERC20.\n @param _mintableToken MantleMintableERC20 to check against.\n @param _otherToken    Pair token to check.\n @return True if the other token is the correct pair token for the MantleMintableERC20."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCorrectTokenPair",
            "nameLocation": "18529:19:111",
            "parameters": {
              "id": 45292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45289,
                  "mutability": "mutable",
                  "name": "_mintableToken",
                  "nameLocation": "18557:14:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45305,
                  "src": "18549:22:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45288,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18549:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45291,
                  "mutability": "mutable",
                  "name": "_otherToken",
                  "nameLocation": "18581:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45305,
                  "src": "18573:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45290,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18573:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18548:45:111"
            },
            "returnParameters": {
              "id": 45295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45294,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 45305,
                  "src": "18641:4:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 45293,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18641:4:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18640:6:111"
            },
            "scope": 45398,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 45325,
            "nodeType": "FunctionDefinition",
            "src": "19122:231:111",
            "nodes": [],
            "body": {
              "id": 45324,
              "nodeType": "Block",
              "src": "19280:73:111",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45318,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45308,
                        "src": "19314:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45319,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45310,
                        "src": "19321:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45320,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45312,
                        "src": "19326:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45321,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45314,
                        "src": "19335:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 45317,
                      "name": "ETHBridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44755,
                      "src": "19295:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 45322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19295:51:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45323,
                  "nodeType": "EmitStatement",
                  "src": "19290:56:111"
                }
              ]
            },
            "documentation": {
              "id": 45306,
              "nodeType": "StructuredDocumentation",
              "src": "18741:376:111",
              "text": "@notice Emits the ETHBridgeInitiated event and if necessary the appropriate legacy event\n          when an ETH bridge is finalized on this chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH sent.\n @param _extraData Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeInitiated",
            "nameLocation": "19131:23:111",
            "parameters": {
              "id": 45315,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45308,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "19172:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45325,
                  "src": "19164:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45307,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19164:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45310,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "19195:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45325,
                  "src": "19187:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19187:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45312,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "19216:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45325,
                  "src": "19208:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45311,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19208:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45314,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "19246:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45325,
                  "src": "19233:23:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45313,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19233:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19154:108:111"
            },
            "returnParameters": {
              "id": 45316,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19280:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 45345,
            "nodeType": "FunctionDefinition",
            "src": "19740:231:111",
            "nodes": [],
            "body": {
              "id": 45344,
              "nodeType": "Block",
              "src": "19898:73:111",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45338,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45328,
                        "src": "19932:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45339,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45330,
                        "src": "19939:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45340,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45332,
                        "src": "19944:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45341,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45334,
                        "src": "19953:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 45337,
                      "name": "ETHBridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44766,
                      "src": "19913:18:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 45342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19913:51:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45343,
                  "nodeType": "EmitStatement",
                  "src": "19908:56:111"
                }
              ]
            },
            "documentation": {
              "id": 45326,
              "nodeType": "StructuredDocumentation",
              "src": "19359:376:111",
              "text": " @notice Emits the ETHBridgeFinalized and if necessary the appropriate legacy event when an\n         ETH bridge is finalized on this chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH sent.\n @param _extraData Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeFinalized",
            "nameLocation": "19749:23:111",
            "parameters": {
              "id": 45335,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45328,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "19790:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45345,
                  "src": "19782:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45327,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19782:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45330,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "19813:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45345,
                  "src": "19805:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45329,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19805:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45332,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "19834:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45345,
                  "src": "19826:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45331,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19826:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45334,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "19864:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45345,
                  "src": "19851:23:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45333,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19851:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19772:108:111"
            },
            "returnParameters": {
              "id": 45336,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19898:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 45371,
            "nodeType": "FunctionDefinition",
            "src": "20519:321:111",
            "nodes": [],
            "body": {
              "id": 45370,
              "nodeType": "Block",
              "src": "20738:102:111",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45362,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45348,
                        "src": "20774:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45363,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45350,
                        "src": "20787:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45364,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45352,
                        "src": "20801:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45365,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45354,
                        "src": "20808:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45366,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45356,
                        "src": "20813:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45367,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45358,
                        "src": "20822:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 45361,
                      "name": "ERC20BridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44781,
                      "src": "20753:20:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 45368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20753:80:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45369,
                  "nodeType": "EmitStatement",
                  "src": "20748:85:111"
                }
              ]
            },
            "documentation": {
              "id": 45346,
              "nodeType": "StructuredDocumentation",
              "src": "19977:537:111",
              "text": " @notice Emits the ERC20BridgeInitiated event and if necessary the appropriate legacy\n         event when an ERC20 bridge is initiated to the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the ERC20 on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 sent.\n @param _extraData   Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeInitiated",
            "nameLocation": "20528:25:111",
            "parameters": {
              "id": 45359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45348,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "20571:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45371,
                  "src": "20563:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45347,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20563:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45350,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "20600:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45371,
                  "src": "20592:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20592:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45352,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "20630:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45371,
                  "src": "20622:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45351,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20622:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45354,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "20653:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45371,
                  "src": "20645:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45353,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20645:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45356,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "20674:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45371,
                  "src": "20666:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45355,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20666:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45358,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "20704:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45371,
                  "src": "20691:23:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45357,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20691:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20553:167:111"
            },
            "returnParameters": {
              "id": 45360,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20738:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 45397,
            "nodeType": "FunctionDefinition",
            "src": "21388:321:111",
            "nodes": [],
            "body": {
              "id": 45396,
              "nodeType": "Block",
              "src": "21607:102:111",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 45388,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45374,
                        "src": "21643:11:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45389,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45376,
                        "src": "21656:12:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45390,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45378,
                        "src": "21670:5:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45391,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45380,
                        "src": "21677:3:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 45392,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45382,
                        "src": "21682:7:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 45393,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45384,
                        "src": "21691:10:111",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 45387,
                      "name": "ERC20BridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44796,
                      "src": "21622:20:111",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 45394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21622:80:111",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 45395,
                  "nodeType": "EmitStatement",
                  "src": "21617:85:111"
                }
              ]
            },
            "documentation": {
              "id": 45372,
              "nodeType": "StructuredDocumentation",
              "src": "20846:537:111",
              "text": " @notice Emits the ERC20BridgeFinalized event and if necessary the appropriate legacy\n         event when an ERC20 bridge is initiated to the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the ERC20 on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 sent.\n @param _extraData   Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeFinalized",
            "nameLocation": "21397:25:111",
            "parameters": {
              "id": 45385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 45374,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "21440:11:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45397,
                  "src": "21432:19:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45373,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21432:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45376,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "21469:12:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45397,
                  "src": "21461:20:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45375,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21461:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45378,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "21499:5:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45397,
                  "src": "21491:13:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45377,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21491:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45380,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "21522:3:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45397,
                  "src": "21514:11:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 45379,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21514:7:111",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45382,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "21543:7:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45397,
                  "src": "21535:15:111",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 45381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21535:7:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 45384,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "21573:10:111",
                  "nodeType": "VariableDeclaration",
                  "scope": 45397,
                  "src": "21560:23:111",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 45383,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21560:5:111",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21422:167:111"
            },
            "returnParameters": {
              "id": 45386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21607:0:111"
            },
            "scope": 45398,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [],
        "canonicalName": "StandardBridge",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 44710,
          "nodeType": "StructuredDocumentation",
          "src": "655:326:111",
          "text": " @custom:upgradeable\n @title StandardBridge\n @notice StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles\n         the core bridging logic, including escrowing tokens that are native to the local chain\n         and minting/burning tokens that are native to the remote chain."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          45398
        ],
        "name": "StandardBridge",
        "nameLocation": "1000:14:111",
        "scope": 45399,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 111
}