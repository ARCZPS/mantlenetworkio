{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_otherBridge",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "l2Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "DepositFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "l2Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "WithdrawalInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSENGER",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_BRIDGE",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20To",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETHTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeDeposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1TokenBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x6101206040523480156200001257600080fd5b5060405162002b8d38038062002b8d83398101604081905262000035916200006f565b7342000000000000000000000000000000000000076080526001600160a01b031660a052600160c081905260e052600061010052620000a1565b6000602082840312156200008257600080fd5b81516001600160a01b03811681146200009a57600080fd5b9392505050565b60805160a05160c05160e05161010051612a4c620001416000396000610fd201526000610fa901526000610f800152600081816102280152818161030c0152818161050b015281816109cf015281816112ca015261160b015260008181610281015281816103a6015281816104e101528181610542015281816109a501528181610a0601528181610c930152818161128d01526115cf0152612a4c6000f3fe6080604052600436106100ec5760003560e01c806354fd4d501161008a5780638f601f66116100595780638f601f661461034e578063927ede2d14610394578063a3a79548146103c8578063e11013dd146103db57600080fd5b806354fd4d50146102c5578063662a633a146102e75780637f46ddb2146102fa578063870876231461032e57600080fd5b806332b7006d116100c657806332b7006d1461020657806336c717c1146102195780633cb747bf14610272578063540abf73146102a557600080fd5b80630166a07a146101c057806309fc8843146101e05780631635f5fd146101f357600080fd5b366101bb57333b15610185576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084015b60405180910390fd5b6101b973deaddeaddeaddeaddeaddeaddeaddeaddead000033333462030d40604051806020016040528060008152506103ee565b005b600080fd5b3480156101cc57600080fd5b506101b96101db3660046122f9565b6104c9565b6101b96101ee3660046123aa565b6108b6565b6101b96102013660046123fd565b61098d565b6101b9610214366004612470565b610e5a565b34801561022557600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561027e57600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610248565b3480156102b157600080fd5b506101b96102c03660046124c4565b610f34565b3480156102d157600080fd5b506102da610f79565b60405161026991906125b1565b6101b96102f53660046122f9565b61101c565b34801561030657600080fd5b506102487f000000000000000000000000000000000000000000000000000000000000000081565b34801561033a57600080fd5b506101b96103493660046125c4565b61108f565b34801561035a57600080fd5b50610386610369366004612647565b600260209081526000928352604080842090915290825290205481565b604051908152602001610269565b3480156103a057600080fd5b506102487f000000000000000000000000000000000000000000000000000000000000000081565b6101b96103d63660046125c4565b611163565b6101b96103e9366004612680565b6111a7565b7fffffffffffffffffffffffff215221522152215221522152215221522153000073ffffffffffffffffffffffffffffffffffffffff87160161043d5761043885858585856111f0565b6104c1565b60008673ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa15801561048a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104ae91906126e3565b90506104bf878288888888886113d4565b505b505050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161480156105e757507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105cf91906126e3565b73ffffffffffffffffffffffffffffffffffffffff16145b610699576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a40161017c565b6106a28761171b565b156107f0576106b1878761177d565b610763576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204d616e746c65204d696e7461626c65204552433230206c6f6360648201527f616c20746f6b656e000000000000000000000000000000000000000000000000608482015260a40161017c565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590528816906340c10f1990604401600060405180830381600087803b1580156107d357600080fd5b505af11580156107e7573d6000803e3d6000fd5b50505050610872565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a168352929052205461082e90849061272f565b73ffffffffffffffffffffffffffffffffffffffff8089166000818152600260209081526040808320948c1683529390529190912091909155610872908585611824565b6104bf878787878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506118f892505050565b333b15610945576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161017c565b6109883333348686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111f092505050565b505050565b3373ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016148015610aab57507f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff167f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16636e296e456040518163ffffffff1660e01b8152600401602060405180830381865afa158015610a6f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a9391906126e3565b73ffffffffffffffffffffffffffffffffffffffff16145b610b5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a40161017c565b823414610bec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5374616e646172644272696467653a20616d6f756e742073656e7420646f657360448201527f206e6f74206d6174636820616d6f756e74207265717569726564000000000000606482015260840161017c565b3073ffffffffffffffffffffffffffffffffffffffff851603610c91576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f207360448201527f656c660000000000000000000000000000000000000000000000000000000000606482015260840161017c565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610d6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d60448201527f657373656e676572000000000000000000000000000000000000000000000000606482015260840161017c565b610dae85858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061198692505050565b6000610dcb855a8660405180602001604052806000815250611a27565b9050806104c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a20455448207472616e736665722066616960448201527f6c65640000000000000000000000000000000000000000000000000000000000606482015260840161017c565b333b15610ee9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161017c565b610f2d853333878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103ee92505050565b5050505050565b6104bf87873388888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506113d492505050565b6060610fa47f0000000000000000000000000000000000000000000000000000000000000000611a41565b610fcd7f0000000000000000000000000000000000000000000000000000000000000000611a41565b610ff67f0000000000000000000000000000000000000000000000000000000000000000611a41565b60405160200161100893929190612746565b604051602081830303815290604052905090565b73ffffffffffffffffffffffffffffffffffffffff8716158015611069575073ffffffffffffffffffffffffffffffffffffffff861673deaddeaddeaddeaddeaddeaddeaddeaddead0000145b156110805761107b858585858561098d565b6104bf565b6104bf868887878787876104c9565b333b1561111e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161017c565b6104c186863333888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506113d492505050565b6104c1863387878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506103ee92505050565b6111ea3385348686868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506111f092505050565b50505050565b82341461127f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374616e646172644272696467653a206272696467696e6720455448206d757360448201527f7420696e636c7564652073756666696369656e74204554482076616c75650000606482015260840161017c565b61128b85858584611b7e565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633dbb202b847f0000000000000000000000000000000000000000000000000000000000000000631635f5fd60e01b8989898860405160240161130894939291906127bc565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e086901b909216825261139b92918890600401612805565b6000604051808303818588803b1580156113b457600080fd5b505af11580156113c8573d6000803e3d6000fd5b50505050505050505050565b6113dd8761171b565b1561152b576113ec878761177d565b61149e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204d616e746c65204d696e7461626c65204552433230206c6f6360648201527f616c20746f6b656e000000000000000000000000000000000000000000000000608482015260a40161017c565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015260248201859052881690639dc29fac90604401600060405180830381600087803b15801561150e57600080fd5b505af1158015611522573d6000803e3d6000fd5b505050506115bf565b61154d73ffffffffffffffffffffffffffffffffffffffff8816863086611c1f565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a168352929052205461158b90849061284a565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b16835292905220555b6115cd878787878786611c7d565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633dbb202b7f0000000000000000000000000000000000000000000000000000000000000000630166a07a60e01b898b8a8a8a8960405160240161164d96959493929190612862565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b90921682526116e092918790600401612805565b600060405180830381600087803b1580156116fa57600080fd5b505af115801561170e573d6000803e3d6000fd5b5050505050505050505050565b6000611747827f1d1d8b6300000000000000000000000000000000000000000000000000000000611d0b565b806117775750611777827fec4fc8e300000000000000000000000000000000000000000000000000000000611d0b565b92915050565b60008273ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa1580156117ca573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ee91906126e3565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614905092915050565b60405173ffffffffffffffffffffffffffffffffffffffff83166024820152604481018290526109889084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611d2e565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fb0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89868686604051611970939291906128bd565b60405180910390a46104c1868686868686611e3a565b8373ffffffffffffffffffffffffffffffffffffffff1673deaddeaddeaddeaddeaddeaddeaddeaddead000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89868686604051611a13939291906128bd565b60405180910390a46111ea84848484611ec2565b600080600080845160208601878a8af19695505050505050565b606081600003611a8457505060408051808201909152600181527f3000000000000000000000000000000000000000000000000000000000000000602082015290565b8160005b8115611aae5780611a98816128fb565b9150611aa79050600a83612962565b9150611a88565b60008167ffffffffffffffff811115611ac957611ac9612976565b6040519080825280601f01601f191660200182016040528015611af3576020820181803683370190505b5090505b8415611b7657611b0860018361272f565b9150611b15600a866129a5565b611b2090603061284a565b60f81b818381518110611b3557611b356129b9565b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350611b6f600a86612962565b9450611af7565b949350505050565b8373ffffffffffffffffffffffffffffffffffffffff1673deaddeaddeaddeaddeaddeaddeaddeaddead000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e868686604051611c0b939291906128bd565b60405180910390a46111ea84848484611f2f565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526111ea9085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611876565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e868686604051611cf5939291906128bd565b60405180910390a46104c1868686868686611f8e565b6000611d1683612006565b8015611d275750611d27838361206a565b9392505050565b6000611d90826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121399092919063ffffffff16565b8051909150156109885780806020019051810190611dae91906129e8565b610988576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161017c565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fd59c65b35445225835c83f50b6ede06a7be047d22e357073e250d9af537518cd868686604051611eb2939291906128bd565b60405180910390a4505050505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f31b2166ff604fc5672ea5df08a78081d2bc6d746cadce880747f3643d819e83d8484604051611f21929190612a0a565b60405180910390a350505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2849b43074093a05396b6f2a937dee8565b15a48a7b3d4bffb732a5017380af58484604051611f21929190612a0a565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f7ff126db8024424bbfd9826e8ab82ff59136289ea440b04b39a0df1b03b9cabf868686604051611eb2939291906128bd565b6000612032827f01ffc9a70000000000000000000000000000000000000000000000000000000061206a565b80156117775750612063827fffffffff0000000000000000000000000000000000000000000000000000000061206a565b1592915050565b604080517fffffffff000000000000000000000000000000000000000000000000000000008316602480830191909152825180830390910181526044909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000178152825160009392849283928392918391908a617530fa92503d91506000519050828015612122575060208210155b801561212e5750600081115b979650505050505050565b6060611b7684846000858573ffffffffffffffffffffffffffffffffffffffff85163b6121c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161017c565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516121eb9190612a23565b60006040518083038185875af1925050503d8060008114612228576040519150601f19603f3d011682016040523d82523d6000602084013e61222d565b606091505b509150915061212e82828660608315612247575081611d27565b8251156122575782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161017c91906125b1565b73ffffffffffffffffffffffffffffffffffffffff811681146122ad57600080fd5b50565b60008083601f8401126122c257600080fd5b50813567ffffffffffffffff8111156122da57600080fd5b6020830191508360208285010111156122f257600080fd5b9250929050565b600080600080600080600060c0888a03121561231457600080fd5b873561231f8161228b565b9650602088013561232f8161228b565b9550604088013561233f8161228b565b9450606088013561234f8161228b565b93506080880135925060a088013567ffffffffffffffff81111561237257600080fd5b61237e8a828b016122b0565b989b979a50959850939692959293505050565b803563ffffffff811681146123a557600080fd5b919050565b6000806000604084860312156123bf57600080fd5b6123c884612391565b9250602084013567ffffffffffffffff8111156123e457600080fd5b6123f0868287016122b0565b9497909650939450505050565b60008060008060006080868803121561241557600080fd5b85356124208161228b565b945060208601356124308161228b565b935060408601359250606086013567ffffffffffffffff81111561245357600080fd5b61245f888289016122b0565b969995985093965092949392505050565b60008060008060006080868803121561248857600080fd5b85356124938161228b565b9450602086013593506124a860408701612391565b9250606086013567ffffffffffffffff81111561245357600080fd5b600080600080600080600060c0888a0312156124df57600080fd5b87356124ea8161228b565b965060208801356124fa8161228b565b9550604088013561250a8161228b565b94506060880135935061251f60808901612391565b925060a088013567ffffffffffffffff81111561237257600080fd5b60005b8381101561255657818101518382015260200161253e565b838111156111ea5750506000910152565b6000815180845261257f81602086016020860161253b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611d276020830184612567565b60008060008060008060a087890312156125dd57600080fd5b86356125e88161228b565b955060208701356125f88161228b565b94506040870135935061260d60608801612391565b9250608087013567ffffffffffffffff81111561262957600080fd5b61263589828a016122b0565b979a9699509497509295939492505050565b6000806040838503121561265a57600080fd5b82356126658161228b565b915060208301356126758161228b565b809150509250929050565b6000806000806060858703121561269657600080fd5b84356126a18161228b565b93506126af60208601612391565b9250604085013567ffffffffffffffff8111156126cb57600080fd5b6126d7878288016122b0565b95989497509550505050565b6000602082840312156126f557600080fd5b8151611d278161228b565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561274157612741612700565b500390565b6000845161275881846020890161253b565b80830190507f2e000000000000000000000000000000000000000000000000000000000000008082528551612794816001850160208a0161253b565b600192019182015283516127af81600284016020880161253b565b0160020195945050505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526127fb6080830184612567565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff841681526060602082015260006128346060830185612567565b905063ffffffff83166040830152949350505050565b6000821982111561285d5761285d612700565b500190565b600073ffffffffffffffffffffffffffffffffffffffff80891683528088166020840152808716604084015280861660608401525083608083015260c060a08301526128b160c0830184612567565b98975050505050505050565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006128f26060830184612567565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361292c5761292c612700565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008261297157612971612933565b500490565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000826129b4576129b4612933565b500690565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000602082840312156129fa57600080fd5b81518015158114611d2757600080fd5b828152604060208201526000611b766040830184612567565b60008251612a3581846020870161253b565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "994:9188:16:-:0;;;2474:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;524:42:42;5565:44:111;;-1:-1:-1;;;;;5619:43:111;;;2531:1:16;826:22:110;;;;858;;2537:1:16;890:22:110;;994:9188:16;;14:298:165;92:6;145:2;133:9;124:7;120:23;116:32;113:52;;;161:1;158;151:12;113:52;187:16;;-1:-1:-1;;;;;232:31:165;;222:42;;212:70;;278:1;275;268:12;212:70;301:5;14:298;-1:-1:-1;;;14:298:165:o;:::-;994:9188:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "994:9188:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4819:10:111;1465:19:135;:23;4778:133:111;;;;;;;216:2:165;4778:133:111;;;198:21:165;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;4778:133:111;;;;;;;;;2782:203:16::1;2762:42:42;2856:10:16;2880;2904:9;1212:7:111;2966:9:16;;;;;;;;;;;::::0;2782:19:::1;:203::i;:::-;994:9188:::0;;;;;12796:996:111;;;;;;;;;;-1:-1:-1;12796:996:111;;;;;:::i;:::-;;:::i;6556:186::-;;;;;;:::i;:::-;;:::i;11239:812::-;;;;;;:::i;:::-;;:::i;3524:277:16:-;;;;;;:::i;:::-;;:::i;6341:102::-;;;;;;;;;;-1:-1:-1;6423:12:16;6341:102;;;4271:42:165;4259:55;;;4241:74;;4229:2;4214:18;6341:102:16;;;;;;;;6018:99:111;;;;;;;;;;-1:-1:-1;6101:9:111;6018:99;;10237:423;;;;;;;;;;-1:-1:-1;10237:423:111;;;;;:::i;:::-;;:::i;1057:372:110:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;5672:477:16:-;;;;;;:::i;:::-;;:::i;1419:44:111:-;;;;;;;;;;;;;;;8875:415;;;;;;;;;;-1:-1:-1;8875:415:111;;;;;:::i;:::-;;:::i;1893:63::-;;;;;;;;;;-1:-1:-1;1893:63:111;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8005:25:165;;;7993:2;7978:18;1893:63:111;7859:177:165;1292:47:111;;;;;;;;;;;;;;;4796:285:16;;;;;;:::i;:::-;;:::i;7764:216:111:-;;;;;;:::i;:::-;;:::i;6956:540:16:-;7171:39;;;;;7167:323;;7226:65;7245:5;7252:3;7257:7;7266:12;7280:10;7226:18;:65::i;:::-;7167:323;;;7322:15;7360:8;7340:37;;;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7322:57;;7393:86;7414:8;7424:7;7433:5;7440:3;7445:7;7454:12;7468:10;7393:20;:86::i;:::-;7308:182;7167:323;6956:540;;;;;;:::o;12796:996:111:-;5096:10;:32;5118:9;5096:32;;:109;;;;;5192:12;5148:57;;:9;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;5096:109;5075:221;;;;;;;9120:2:165;5075:221:111;;;9102:21:165;9159:2;9139:18;;;9132:30;9198:34;9178:18;;;9171:62;9269:34;9249:18;;;9242:62;9341:3;9320:19;;;9313:32;9362:19;;5075:221:111;8918:469:165;5075:221:111;13031:35:::1;13054:11;13031:22;:35::i;:::-;13027:483;;;13107:46;13127:11;13140:12;13107:19;:46::i;:::-;13082:177;;;::::0;::::1;::::0;;9594:2:165;13082:177:111::1;::::0;::::1;9576:21:165::0;9633:2;9613:18;;;9606:30;9672:34;9652:18;;;9645:62;9743:34;9723:18;;;9716:62;9815:10;9794:19;;;9787:39;9843:19;;13082:177:111::1;9392:476:165::0;13082:177:111::1;13274:51;::::0;;;;:37:::1;10065:55:165::0;;;13274:51:111::1;::::0;::::1;10047:74:165::0;10137:18;;;10130:34;;;13274:37:111;::::1;::::0;::::1;::::0;10020:18:165;;13274:51:111::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13027:483;;;13394:21;::::0;;::::1;;::::0;;;:8:::1;:21;::::0;;;;;;;:35;;::::1;::::0;;;;;;;:45:::1;::::0;13432:7;;13394:45:::1;:::i;:::-;13356:21;::::0;;::::1;;::::0;;;:8:::1;:21;::::0;;;;;;;:35;;::::1;::::0;;;;;;;;;:83;;;;13453:46:::1;::::0;13486:3;13491:7;13453:32:::1;:46::i;:::-;13700:85;13726:11;13739:12;13753:5;13760:3;13765:7;13774:10;;13700:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;13700:25:111::1;::::0;-1:-1:-1;;;13700:85:111:i:1;6556:186::-:0;4819:10;1465:19:135;:23;4778:133:111;;;;;;;216:2:165;4778:133:111;;;198:21:165;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;4778:133:111;14:419:165;4778:133:111;6656:79:::1;6675:10;6687;6699:9;6710:12;6724:10;;6656:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;6656:18:111::1;::::0;-1:-1:-1;;;6656:79:111:i:1;:::-;6556:186:::0;;;:::o;11239:812::-;5096:10;:32;5118:9;5096:32;;:109;;;;;5192:12;5148:57;;:9;:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;5096:109;5075:221;;;;;;;9120:2:165;5075:221:111;;;9102:21:165;9159:2;9139:18;;;9132:30;9198:34;9178:18;;;9171:62;9269:34;9249:18;;;9242:62;9341:3;9320:19;;;9313:32;9362:19;;5075:221:111;8918:469:165;5075:221:111;11438:7:::1;11425:9;:20;11417:91;;;::::0;::::1;::::0;;10696:2:165;11417:91:111::1;::::0;::::1;10678:21:165::0;10735:2;10715:18;;;10708:30;10774:34;10754:18;;;10747:62;10845:28;10825:18;;;10818:56;10891:19;;11417:91:111::1;10494:422:165::0;11417:91:111::1;11541:4;11526:20;::::0;::::1;::::0;11518:68:::1;;;::::0;::::1;::::0;;11123:2:165;11518:68:111::1;::::0;::::1;11105:21:165::0;11162:2;11142:18;;;11135:30;11201:34;11181:18;;;11174:62;11272:5;11252:18;;;11245:33;11295:19;;11518:68:111::1;10921:399:165::0;11518:68:111::1;11619:9;11604:25;;:3;:25;;::::0;11596:78:::1;;;::::0;::::1;::::0;;11527:2:165;11596:78:111::1;::::0;::::1;11509:21:165::0;11566:2;11546:18;;;11539:30;11605:34;11585:18;;;11578:62;11676:10;11656:18;;;11649:38;11704:19;;11596:78:111::1;11325:404:165::0;11596:78:111::1;11852:56;11876:5;11883:3;11888:7;11897:10;;11852:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;11852:23:111::1;::::0;-1:-1:-1;;;11852:56:111:i:1;:::-;11919:12;11934:45;11948:3;11953:9;11964:7;11934:45;;;;;;;;;;;::::0;:13:::1;:45::i;:::-;11919:60;;11997:7;11989:55;;;::::0;::::1;::::0;;11936:2:165;11989:55:111::1;::::0;::::1;11918:21:165::0;11975:2;11955:18;;;11948:30;12014:34;11994:18;;;11987:62;12085:5;12065:18;;;12058:33;12108:19;;11989:55:111::1;11734:399:165::0;3524:277:16;4819:10:111;1465:19:135;:23;4778:133:111;;;;;;;216:2:165;4778:133:111;;;198:21:165;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;4778:133:111;14:419:165;4778:133:111;3706:88:16::1;3726:8;3736:10;3748;3760:7;3769:12;3783:10;;3706:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;3706:19:16::1;::::0;-1:-1:-1;;;3706:88:16:i:1;:::-;3524:277:::0;;;;;:::o;10237:423:111:-;10460:193;10494:11;10519:12;10545:10;10569:3;10586:7;10607:12;10633:10;;10460:193;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10460:20:111;;-1:-1:-1;;;10460:193:111:i;1057:372:110:-;1097:13;1203:31;1220:13;1203:16;:31::i;:::-;1281;1298:13;1281:16;:31::i;:::-;1359;1376:13;1359:16;:31::i;:::-;1165:243;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1122:300;;1057:372;:::o;5672:477:16:-;5898:22;;;;:65;;;;-1:-1:-1;5924:39:16;;;2762:42:42;5924:39:16;5898:65;5894:249;;;5979:50;5997:5;6004:3;6009:7;6018:10;;5979:17;:50::i;:::-;5894:249;;;6060:72;6080:8;6090;6100:5;6107:3;6112:7;6121:10;;6060:19;:72::i;8875:415:111:-;4819:10;1465:19:135;:23;4778:133:111;;;;;;;216:2:165;4778:133:111;;;198:21:165;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;4778:133:111;14:419:165;4778:133:111;9083:200:::1;9117:11;9142:12;9168:10;9192;9216:7;9237:12;9263:10;;9083:200;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;9083:20:111::1;::::0;-1:-1:-1;;;9083:200:111:i:1;4796:285:16:-:0;4993:81;5013:8;5023:10;5035:3;5040:7;5049:12;5063:10;;4993:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4993:19:16;;-1:-1:-1;;;4993:81:16:i;7764:216:111:-;7901:72;7920:10;7932:3;7937:9;7948:12;7962:10;;7901:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7901:18:111;;-1:-1:-1;;;7901:72:111:i;:::-;7764:216;;;;:::o;14395:871::-;14613:7;14600:9;:20;14579:129;;;;;;;13305:2:165;14579:129:111;;;13287:21:165;13344:2;13324:18;;;13317:30;13383:34;13363:18;;;13356:62;13454:32;13434:18;;;13427:60;13504:19;;14579:129:111;13103:426:165;14579:129:111;14886:56;14910:5;14917:3;14922:7;14931:10;14886:23;:56::i;:::-;14953:9;:21;;;14983:7;15014:12;15081:31;;;15130:5;15153:3;15174:7;15199:10;15041:182;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;14953:306;;;;;;;;;;;;;15237:12;;14953:306;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14395:871;;;;;:::o;15974:1628::-;16223:35;16246:11;16223:22;:35::i;:::-;16219:506;;;16299:46;16319:11;16332:12;16299:19;:46::i;:::-;16274:177;;;;;;;9594:2:165;16274:177:111;;;9576:21:165;9633:2;9613:18;;;9606:30;9672:34;9652:18;;;9645:62;9743:34;9723:18;;;9716:62;9815:10;9794:19;;;9787:39;9843:19;;16274:177:111;9392:476:165;16274:177:111;16466:53;;;;;:37;10065:55:165;;;16466:53:111;;;10047:74:165;10137:18;;;10130:34;;;16466:37:111;;;;;10020:18:165;;16466:53:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16219:506;;;16550:67;:36;;;16587:5;16602:4;16609:7;16550:36;:67::i;:::-;16669:21;;;;;;;;:8;:21;;;;;;;;:35;;;;;;;;;;:45;;16707:7;;16669:45;:::i;:::-;16631:21;;;;;;;;:8;:21;;;;;;;;:35;;;;;;;;;:83;16219:506;16915:85;16941:11;16954:12;16968:5;16975:3;16980:7;16989:10;16915:25;:85::i;:::-;17011:9;:21;;;17054:12;17121:33;;;17407:12;17437:11;17466:5;17489:3;17510:7;17535:10;17081:478;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;17011:584;;;;;;;;;;;;;17573:12;;17011:584;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15974:1628;;;;;;;:::o;17888:287::-;17959:4;17994:79;18026:6;18034:38;17994:31;:79::i;:::-;:174;;;;18089:79;18121:6;18129:38;18089:31;:79::i;:::-;17975:193;17888:287;-1:-1:-1;;17888:287:111:o;18520:215::-;18641:4;18703:14;18683:43;;;:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18668:60;;:11;:60;;;18661:67;;18520:215;;;;:::o;763:205:128:-;902:58;;10077:42:165;10065:55;;902:58:128;;;10047:74:165;10137:18;;;10130:34;;;875:86:128;;895:5;;925:23;;10020:18:165;;902:58:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;9761:419:16:-;10040:5;9996:76;;10027:11;9996:76;;10013:12;9996:76;;;10047:3;10052:7;10061:10;9996:76;;;;;;;;:::i;:::-;;;;;;;;10082:91;10114:11;10127:12;10141:5;10148:3;10153:7;10162:10;10082:31;:91::i;8417:425::-;8686:5;8591:172;;2762:42:42;8591:172:16;;8629:1;8591:172;;;8705:3;8722:7;8743:10;8591:172;;;;;;;;:::i;:::-;;;;;;;;8773:62;8803:5;8810:3;8815:7;8824:10;8773:29;:62::i;452:528:43:-;593:4;609:13;914:1;885;848:9;842:16;810:4;799:9;795:20;756:6;718:7;689:4;667:272;655:284;452:528;-1:-1:-1;;;;;;452:528:43:o;392:703:138:-;448:13;665:5;674:1;665:10;661:51;;-1:-1:-1;;691:10:138;;;;;;;;;;;;;;;;;;392:703::o;661:51::-;736:5;721:12;775:75;782:9;;775:75;;807:8;;;;:::i;:::-;;-1:-1:-1;829:10:138;;-1:-1:-1;837:2:138;829:10;;:::i;:::-;;;775:75;;;859:19;891:6;881:17;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;881:17:138;;859:39;;908:150;915:10;;908:150;;941:11;951:1;941:11;;:::i;:::-;;-1:-1:-1;1009:10:138;1017:2;1009:5;:10;:::i;:::-;996:24;;:2;:24;:::i;:::-;983:39;;966:6;973;966:14;;;;;;;;:::i;:::-;;;;:56;;;;;;;;;;-1:-1:-1;1036:11:138;1045:2;1036:11;;:::i;:::-;;;908:150;;;1081:6;392:703;-1:-1:-1;;;;392:703:138:o;7744:428:16:-;8016:5;7918:175;;2762:42:42;7918:175:16;;7959:1;7918:175;;;8035:3;8052:7;8073:10;7918:175;;;;;;;;:::i;:::-;;;;;;;;8103:62;8133:5;8140:3;8145:7;8154:10;8103:29;:62::i;974:241:128:-;1139:68;;16927:42:165;16996:15;;;1139:68:128;;;16978:34:165;17048:15;;17028:18;;;17021:43;17080:18;;;17073:34;;;1112:96:128;;1132:5;;1162:27;;16890:18:165;;1139:68:128;16715:398:165;9092:422:16;9374:5;9327:79;;9361:11;9327:79;;9347:12;9327:79;;;9381:3;9386:7;9395:10;9327:79;;;;;;;;:::i;:::-;;;;;;;;9416:91;9448:11;9461:12;9475:5;9482:3;9487:7;9496:10;9416:31;:91::i;1333:274:142:-;1420:4;1527:23;1542:7;1527:14;:23::i;:::-;:73;;;;;1554:46;1579:7;1588:11;1554:24;:46::i;:::-;1520:80;1333:274;-1:-1:-1;;;1333:274:142:o;3747:706:128:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:128;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;17602:2:165;4351:85:128;;;17584:21:165;17641:2;17621:18;;;17614:30;17680:34;17660:18;;;17653:62;17751:12;17731:18;;;17724:40;17781:19;;4351:85:128;17400:406:165;21388:321:111;21670:5;21622:80;;21656:12;21622:80;;21643:11;21622:80;;;21677:3;21682:7;21691:10;21622:80;;;;;;;;:::i;:::-;;;;;;;;21388:321;;;;;;:::o;19740:231::-;19939:3;19913:51;;19932:5;19913:51;;;19944:7;19953:10;19913:51;;;;;;;:::i;:::-;;;;;;;;19740:231;;;;:::o;19122:::-;19321:3;19295:51;;19314:5;19295:51;;;19326:7;19335:10;19295:51;;;;;;;:::i;20519:321::-;20801:5;20753:80;;20787:12;20753:80;;20774:11;20753:80;;;20808:3;20813:7;20822:10;20753:80;;;;;;;;:::i;704:411:142:-;768:4;975:60;1000:7;1009:25;975:24;:60::i;:::-;:133;;;;-1:-1:-1;1052:56:142;1077:7;1086:21;1052:24;:56::i;:::-;1051:57;956:152;704:411;-1:-1:-1;;704:411:142:o;4223:638::-;4385:71;;;18279:66:165;18267:79;;4385:71:142;;;;18249:98:165;;;;4385:71:142;;;;;;;;;;18222:18:165;;;;4385:71:142;;;;;;;;;;;4408:34;4385:71;;;4664:20;;4316:4;;4385:71;4316:4;;;;;;4385:71;4316:4;;4664:20;4629:7;4622:5;4611:86;4600:97;;4724:16;4710:30;;4774:4;4768:11;4753:26;;4806:7;:29;;;;;4831:4;4817:10;:18;;4806:29;:48;;;;;4853:1;4839:11;:15;4806:48;4799:55;4223:638;-1:-1:-1;;;;;;;4223:638:142:o;3861:223:135:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;1465:19;;;;5228:60;;;;;;;18967:2:165;5228:60:135;;;18949:21:165;19006:2;18986:18;;;18979:30;19045:31;19025:18;;;19018:59;19094:18;;5228:60:135;18765:353:165;5228:60:135;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:566;;;-1:-1:-1;7765:10:135;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;438:154:165:-;524:42;517:5;513:54;506:5;503:65;493:93;;582:1;579;572:12;493:93;438:154;:::o;597:347::-;648:8;658:6;712:3;705:4;697:6;693:17;689:27;679:55;;730:1;727;720:12;679:55;-1:-1:-1;753:20:165;;796:18;785:30;;782:50;;;828:1;825;818:12;782:50;865:4;857:6;853:17;841:29;;917:3;910:4;901:6;893;889:19;885:30;882:39;879:59;;;934:1;931;924:12;879:59;597:347;;;;;:::o;949:1038::-;1064:6;1072;1080;1088;1096;1104;1112;1165:3;1153:9;1144:7;1140:23;1136:33;1133:53;;;1182:1;1179;1172:12;1133:53;1221:9;1208:23;1240:31;1265:5;1240:31;:::i;:::-;1290:5;-1:-1:-1;1347:2:165;1332:18;;1319:32;1360:33;1319:32;1360:33;:::i;:::-;1412:7;-1:-1:-1;1471:2:165;1456:18;;1443:32;1484:33;1443:32;1484:33;:::i;:::-;1536:7;-1:-1:-1;1595:2:165;1580:18;;1567:32;1608:33;1567:32;1608:33;:::i;:::-;1660:7;-1:-1:-1;1714:3:165;1699:19;;1686:33;;-1:-1:-1;1770:3:165;1755:19;;1742:33;1798:18;1787:30;;1784:50;;;1830:1;1827;1820:12;1784:50;1869:58;1919:7;1910:6;1899:9;1895:22;1869:58;:::i;:::-;949:1038;;;;-1:-1:-1;949:1038:165;;-1:-1:-1;949:1038:165;;;;1843:84;;-1:-1:-1;;;949:1038:165:o;1992:163::-;2059:20;;2119:10;2108:22;;2098:33;;2088:61;;2145:1;2142;2135:12;2088:61;1992:163;;;:::o;2160:481::-;2238:6;2246;2254;2307:2;2295:9;2286:7;2282:23;2278:32;2275:52;;;2323:1;2320;2313:12;2275:52;2346:28;2364:9;2346:28;:::i;:::-;2336:38;;2425:2;2414:9;2410:18;2397:32;2452:18;2444:6;2441:30;2438:50;;;2484:1;2481;2474:12;2438:50;2523:58;2573:7;2564:6;2553:9;2549:22;2523:58;:::i;:::-;2160:481;;2600:8;;-1:-1:-1;2497:84:165;;-1:-1:-1;;;;2160:481:165:o;2646:754::-;2743:6;2751;2759;2767;2775;2828:3;2816:9;2807:7;2803:23;2799:33;2796:53;;;2845:1;2842;2835:12;2796:53;2884:9;2871:23;2903:31;2928:5;2903:31;:::i;:::-;2953:5;-1:-1:-1;3010:2:165;2995:18;;2982:32;3023:33;2982:32;3023:33;:::i;:::-;3075:7;-1:-1:-1;3129:2:165;3114:18;;3101:32;;-1:-1:-1;3184:2:165;3169:18;;3156:32;3211:18;3200:30;;3197:50;;;3243:1;3240;3233:12;3197:50;3282:58;3332:7;3323:6;3312:9;3308:22;3282:58;:::i;:::-;2646:754;;;;-1:-1:-1;2646:754:165;;-1:-1:-1;3359:8:165;;3256:84;2646:754;-1:-1:-1;;;2646:754:165:o;3405:685::-;3501:6;3509;3517;3525;3533;3586:3;3574:9;3565:7;3561:23;3557:33;3554:53;;;3603:1;3600;3593:12;3554:53;3642:9;3629:23;3661:31;3686:5;3661:31;:::i;:::-;3711:5;-1:-1:-1;3763:2:165;3748:18;;3735:32;;-1:-1:-1;3786:37:165;3819:2;3804:18;;3786:37;:::i;:::-;3776:47;;3874:2;3863:9;3859:18;3846:32;3901:18;3893:6;3890:30;3887:50;;;3933:1;3930;3923:12;4587:969;4701:6;4709;4717;4725;4733;4741;4749;4802:3;4790:9;4781:7;4777:23;4773:33;4770:53;;;4819:1;4816;4809:12;4770:53;4858:9;4845:23;4877:31;4902:5;4877:31;:::i;:::-;4927:5;-1:-1:-1;4984:2:165;4969:18;;4956:32;4997:33;4956:32;4997:33;:::i;:::-;5049:7;-1:-1:-1;5108:2:165;5093:18;;5080:32;5121:33;5080:32;5121:33;:::i;:::-;5173:7;-1:-1:-1;5227:2:165;5212:18;;5199:32;;-1:-1:-1;5250:38:165;5283:3;5268:19;;5250:38;:::i;:::-;5240:48;;5339:3;5328:9;5324:19;5311:33;5367:18;5359:6;5356:30;5353:50;;;5399:1;5396;5389:12;5561:258;5633:1;5643:113;5657:6;5654:1;5651:13;5643:113;;;5733:11;;;5727:18;5714:11;;;5707:39;5679:2;5672:10;5643:113;;;5774:6;5771:1;5768:13;5765:48;;;-1:-1:-1;;5809:1:165;5791:16;;5784:27;5561:258::o;5824:317::-;5866:3;5904:5;5898:12;5931:6;5926:3;5919:19;5947:63;6003:6;5996:4;5991:3;5987:14;5980:4;5973:5;5969:16;5947:63;:::i;:::-;6055:2;6043:15;6060:66;6039:88;6030:98;;;;6130:4;6026:109;;5824:317;-1:-1:-1;;5824:317:165:o;6146:220::-;6295:2;6284:9;6277:21;6258:4;6315:45;6356:2;6345:9;6341:18;6333:6;6315:45;:::i;6634:827::-;6739:6;6747;6755;6763;6771;6779;6832:3;6820:9;6811:7;6807:23;6803:33;6800:53;;;6849:1;6846;6839:12;6800:53;6888:9;6875:23;6907:31;6932:5;6907:31;:::i;:::-;6957:5;-1:-1:-1;7014:2:165;6999:18;;6986:32;7027:33;6986:32;7027:33;:::i;:::-;7079:7;-1:-1:-1;7133:2:165;7118:18;;7105:32;;-1:-1:-1;7156:37:165;7189:2;7174:18;;7156:37;:::i;:::-;7146:47;;7244:3;7233:9;7229:19;7216:33;7272:18;7264:6;7261:30;7258:50;;;7304:1;7301;7294:12;7258:50;7343:58;7393:7;7384:6;7373:9;7369:22;7343:58;:::i;:::-;6634:827;;;;-1:-1:-1;6634:827:165;;-1:-1:-1;6634:827:165;;7420:8;;6634:827;-1:-1:-1;;;6634:827:165:o;7466:388::-;7534:6;7542;7595:2;7583:9;7574:7;7570:23;7566:32;7563:52;;;7611:1;7608;7601:12;7563:52;7650:9;7637:23;7669:31;7694:5;7669:31;:::i;:::-;7719:5;-1:-1:-1;7776:2:165;7761:18;;7748:32;7789:33;7748:32;7789:33;:::i;:::-;7841:7;7831:17;;;7466:388;;;;;:::o;8041:616::-;8128:6;8136;8144;8152;8205:2;8193:9;8184:7;8180:23;8176:32;8173:52;;;8221:1;8218;8211:12;8173:52;8260:9;8247:23;8279:31;8304:5;8279:31;:::i;:::-;8329:5;-1:-1:-1;8353:37:165;8386:2;8371:18;;8353:37;:::i;:::-;8343:47;;8441:2;8430:9;8426:18;8413:32;8468:18;8460:6;8457:30;8454:50;;;8500:1;8497;8490:12;8454:50;8539:58;8589:7;8580:6;8569:9;8565:22;8539:58;:::i;:::-;8041:616;;;;-1:-1:-1;8616:8:165;-1:-1:-1;;;;8041:616:165:o;8662:251::-;8732:6;8785:2;8773:9;8764:7;8760:23;8756:32;8753:52;;;8801:1;8798;8791:12;8753:52;8833:9;8827:16;8852:31;8877:5;8852:31;:::i;10175:184::-;10227:77;10224:1;10217:88;10324:4;10321:1;10314:15;10348:4;10345:1;10338:15;10364:125;10404:4;10432:1;10429;10426:8;10423:34;;;10437:18;;:::i;:::-;-1:-1:-1;10474:9:165;;10364:125::o;12138:960::-;12567:3;12605:6;12599:13;12621:53;12667:6;12662:3;12655:4;12647:6;12643:17;12621:53;:::i;:::-;12705:6;12700:3;12696:16;12683:29;;12731:3;12757:2;12750:5;12743:17;12791:6;12785:13;12807:65;12863:8;12859:1;12852:5;12848:13;12841:4;12833:6;12829:17;12807:65;:::i;:::-;12935:1;12891:20;;12927:10;;;12920:22;12967:13;;12989:62;12967:13;13038:1;13030:10;;13023:4;13011:17;;12989:62;:::i;:::-;13071:17;13090:1;13067:25;;12138:960;-1:-1:-1;;;;;12138:960:165:o;13534:512::-;13728:4;13757:42;13838:2;13830:6;13826:15;13815:9;13808:34;13890:2;13882:6;13878:15;13873:2;13862:9;13858:18;13851:43;;13930:6;13925:2;13914:9;13910:18;13903:34;13973:3;13968:2;13957:9;13953:18;13946:31;13994:46;14035:3;14024:9;14020:19;14012:6;13994:46;:::i;:::-;13986:54;13534:512;-1:-1:-1;;;;;;13534:512:165:o;14051:424::-;14264:42;14256:6;14252:55;14241:9;14234:74;14344:2;14339;14328:9;14324:18;14317:30;14215:4;14364:45;14405:2;14394:9;14390:18;14382:6;14364:45;:::i;:::-;14356:53;;14457:10;14449:6;14445:23;14440:2;14429:9;14425:18;14418:51;14051:424;;;;;;:::o;14480:128::-;14520:3;14551:1;14547:6;14544:1;14541:13;14538:39;;;14557:18;;:::i;:::-;-1:-1:-1;14593:9:165;;14480:128::o;14613:674::-;14863:4;14892:42;14973:2;14965:6;14961:15;14950:9;14943:34;15025:2;15017:6;15013:15;15008:2;14997:9;14993:18;14986:43;15077:2;15069:6;15065:15;15060:2;15049:9;15045:18;15038:43;15129:2;15121:6;15117:15;15112:2;15101:9;15097:18;15090:43;;15170:6;15164:3;15153:9;15149:19;15142:35;15214:3;15208;15197:9;15193:19;15186:32;15235:46;15276:3;15265:9;15261:19;15253:6;15235:46;:::i;:::-;15227:54;14613:674;-1:-1:-1;;;;;;;;14613:674:165:o;15292:409::-;15507:42;15499:6;15495:55;15484:9;15477:74;15587:6;15582:2;15571:9;15567:18;15560:34;15630:2;15625;15614:9;15610:18;15603:30;15458:4;15650:45;15691:2;15680:9;15676:18;15668:6;15650:45;:::i;:::-;15642:53;15292:409;-1:-1:-1;;;;;15292:409:165:o;15706:195::-;15745:3;15776:66;15769:5;15766:77;15763:103;;15846:18;;:::i;:::-;-1:-1:-1;15893:1:165;15882:13;;15706:195::o;15906:184::-;15958:77;15955:1;15948:88;16055:4;16052:1;16045:15;16079:4;16076:1;16069:15;16095:120;16135:1;16161;16151:35;;16166:18;;:::i;:::-;-1:-1:-1;16200:9:165;;16095:120::o;16220:184::-;16272:77;16269:1;16262:88;16369:4;16366:1;16359:15;16393:4;16390:1;16383:15;16409:112;16441:1;16467;16457:35;;16472:18;;:::i;:::-;-1:-1:-1;16506:9:165;;16409:112::o;16526:184::-;16578:77;16575:1;16568:88;16675:4;16672:1;16665:15;16699:4;16696:1;16689:15;17118:277;17185:6;17238:2;17226:9;17217:7;17213:23;17209:32;17206:52;;;17254:1;17251;17244:12;17206:52;17286:9;17280:16;17339:5;17332:13;17325:21;17318:5;17315:32;17305:60;;17361:1;17358;17351:12;17811:289;17986:6;17975:9;17968:25;18029:2;18024;18013:9;18009:18;18002:30;17949:4;18049:45;18090:2;18079:9;18075:18;18067:6;18049:45;:::i;19123:274::-;19252:3;19290:6;19284:13;19306:53;19352:6;19347:3;19340:4;19332:6;19328:17;19306:53;:::i;:::-;19375:16;;;;;19123:274;-1:-1:-1;;19123:274:165:o",
    "linkReferences": {},
    "immutableReferences": {
      "44632": [
        {
          "start": 3968,
          "length": 32
        }
      ],
      "44635": [
        {
          "start": 4009,
          "length": 32
        }
      ],
      "44638": [
        {
          "start": 4050,
          "length": 32
        }
      ],
      "44722": [
        {
          "start": 641,
          "length": 32
        },
        {
          "start": 934,
          "length": 32
        },
        {
          "start": 1249,
          "length": 32
        },
        {
          "start": 1346,
          "length": 32
        },
        {
          "start": 2469,
          "length": 32
        },
        {
          "start": 2566,
          "length": 32
        },
        {
          "start": 3219,
          "length": 32
        },
        {
          "start": 4749,
          "length": 32
        },
        {
          "start": 5583,
          "length": 32
        }
      ],
      "44726": [
        {
          "start": 552,
          "length": 32
        },
        {
          "start": 780,
          "length": 32
        },
        {
          "start": 1291,
          "length": 32
        },
        {
          "start": 2511,
          "length": 32
        },
        {
          "start": 4810,
          "length": 32
        },
        {
          "start": 5643,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MESSENGER()": "927ede2d",
    "OTHER_BRIDGE()": "7f46ddb2",
    "bridgeERC20(address,address,uint256,uint32,bytes)": "87087623",
    "bridgeERC20To(address,address,address,uint256,uint32,bytes)": "540abf73",
    "bridgeETH(uint32,bytes)": "09fc8843",
    "bridgeETHTo(address,uint32,bytes)": "e11013dd",
    "deposits(address,address)": "8f601f66",
    "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": "0166a07a",
    "finalizeBridgeETH(address,address,uint256,bytes)": "1635f5fd",
    "finalizeDeposit(address,address,address,address,uint256,bytes)": "662a633a",
    "l1TokenBridge()": "36c717c1",
    "messenger()": "3cb747bf",
    "version()": "54fd4d50",
    "withdraw(address,uint256,uint32,bytes)": "32b7006d",
    "withdrawTo(address,address,uint256,uint32,bytes)": "a3a79548"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_otherBridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"DepositFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"WithdrawalInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1TokenBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:proxied\":\"@custom:predeploy 0x4200000000000000000000000000000000000010\",\"events\":{\"DepositFinalized(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Emitted whenever an ERC20 deposit is finalized.\",\"params\":{\"amount\":\"Amount of the ERC20 deposited.\",\"extraData\":\"Extra data attached to the deposit.\",\"from\":\"Address of the depositor.\",\"l1Token\":\"Address of the token on L1.\",\"l2Token\":\"Address of the corresponding token on L2.\",\"to\":\"Address of the recipient on L2.\"}},\"WithdrawalInitiated(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Emitted whenever a withdrawal from L2 to L1 is initiated.\",\"params\":{\"amount\":\"Amount of the ERC20 withdrawn.\",\"extraData\":\"Extra data attached to the withdrawal.\",\"from\":\"Address of the withdrawer.\",\"l1Token\":\"Address of the token on L1.\",\"l2Token\":\"Address of the corresponding token on L2.\",\"to\":\"Address of the recipient on L1.\"}}},\"kind\":\"dev\",\"methods\":{\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\"}},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"bridgeETH(uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\"}},\"bridgeETHTo(address,uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_to\":\"Address of the receiver.\"}},\"constructor\":{\"custom:semver\":\"1.1.0\",\"params\":{\"_otherBridge\":\"Address of the L1StandardBridge.\"}},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of the ERC20 being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of ETH being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_to\":\"Address of the receiver.\"}},\"finalizeDeposit(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Finalizes a deposit from L1 to L2. To finalize a deposit of ether, use address(0)         and the l1Token and the Legacy ERC20 ether predeploy address as the l2Token.\",\"params\":{\"_amount\":\"Amount of the tokens being deposited.\",\"_extraData\":\"Extra data attached to the deposit.\",\"_from\":\"Address of the depositor.\",\"_l1Token\":\"Address of the L1 token to deposit.\",\"_l2Token\":\"Address of the corresponding L2 token.\",\"_to\":\"Address of the recipient.\"}},\"l1TokenBridge()\":{\"custom:legacy\":\"@notice Retrieves the access of the corresponding L1 bridge contract.\",\"returns\":{\"_0\":\"Address of the corresponding L1 bridge contract.\"}},\"messenger()\":{\"custom:legacy\":\"@notice Legacy getter for messenger contract.\",\"returns\":{\"_0\":\"Messenger contract on this domain.\"}},\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}},\"withdraw(address,uint256,uint32,bytes)\":{\"custom:legacy\":\"@notice Initiates a withdrawal from L2 to L1.         This function only works with MantleMintableERC20 tokens or ether. Use the         `bridgeERC20` function to bridge native L2 tokens to L1.\",\"params\":{\"_amount\":\"Amount of the L2 token to withdraw.\",\"_extraData\":\"Extra data attached to the withdrawal.\",\"_l2Token\":\"Address of the L2 token to withdraw.\",\"_minGasLimit\":\"Minimum gas limit to use for the transaction.\"}},\"withdrawTo(address,address,uint256,uint32,bytes)\":{\"custom:legacy\":\"@notice Initiates a withdrawal from L2 to L1 to a target account on L1.         Note that if ETH is sent to a contract on L1 and the call fails, then that ETH will         be locked in the L1StandardBridge. ETH may be recoverable if the call can be         successfully replayed by increasing the amount of gas supplied to the call. If the         call will fail for any amount of gas, then the ETH will be locked permanently.         This function only works with MantleMintableERC20 tokens or ether. Use the         `bridgeERC20To` function to bridge native L2 tokens to L1.\",\"params\":{\"_amount\":\"Amount of the L2 token to withdraw.\",\"_extraData\":\"Extra data attached to the withdrawal.\",\"_l2Token\":\"Address of the L2 token to withdraw.\",\"_minGasLimit\":\"Minimum gas limit to use for the transaction.\",\"_to\":\"Recipient account on L1.\"}}},\"title\":\"L2StandardBridge\",\"version\":1},\"userdoc\":{\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is finalized on this chain.\"},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is initiated to the other chain.\"},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is finalized on this chain.\"},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is initiated to the other chain.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Messenger contract on this domain.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Corresponding bridge on the other domain.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeETH(uint32,bytes)\":{\"notice\":\"Sends ETH to the sender's address on the other chain.\"},\"bridgeETHTo(address,uint32,bytes)\":{\"notice\":\"Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case.\"},\"deposits(address,address)\":{\"notice\":\"Mapping that stores deposits for a given pair of local and remote tokens.\"},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"version()\":{\"notice\":\"Returns the full semver contract version.\"}},\"notice\":\"The L2StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and         L2. In the case that an ERC20 token is native to L2, it will be escrowed within this         contract. If the ERC20 token is native to L1, it will be burnt.         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples         of some token types that may not be properly supported by this contract include, but are         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/L2/L2StandardBridge.sol\":\"L2StandardBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/L2/L2StandardBridge.sol\":{\"keccak256\":\"0x32993218778b2799c2a29f1f85fb53349f5172d77ba52675a2279c8282c1cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4cf2629297d832dffa8b0201186f563f2f5676bdcc9537729b02657e5016e9f\",\"dweb:/ipfs/QmXSZgQRbmsT6hpxjqZTakbA6rQS8YaNtznqPtGGxzZETX\"]},\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0x09a0d1616d822d77142123e6d1262be7ee71ee840e6022f75a4aa0c508659a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfbb81c230c0032a4d1c3e37b32708e82523c53b7b3b0df5558335c5c0949ee\",\"dweb:/ipfs/QmcRoHQTRxEbbngT1o9yPC5FfQiqqH8P1nTAB7RzgQbKVj\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b\",\"dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0\",\"dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X\"]},\"contracts/libraries/Predeploys.sol\":{\"keccak256\":\"0x7e3206b5b47978d7fab230fc46c3a868466ecb4744feeee9aaff159de1e4c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74edb3e68a84a4acc96ce3981ada0c9c7768d6c8d40e783b3b0d41a53e7f041\",\"dweb:/ipfs/QmcbhLFHv9ZgqsCpDUU18oYevrqynJjnp3cqJ1h9MR8y6K\"]},\"contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xbb0621c028c18e9d5a54cf1a8136cf2e77f161de48aeb8d911e230f6b280c9ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924ecc629c7642bc19e2f8a390f1b946d22862c8889453da681b5bc1a45d7703\",\"dweb:/ipfs/QmbNknQ8pzssXDXGVjXxzZ8zh1YnNCWtRJVepiM1TnqoqQ\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef\",\"dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x3d8194c9e05aea4a9cefa1833ab4f3e95749b685ccf9a04719d235cac2fa3774\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0043e95acd7c29de3836e98cdcc4292eef201e3ebfab2d768bcfe47f800df8d\",\"dweb:/ipfs/QmTZNQVBdodruQ2x38nhERY9DFjU9oEFU21j5Atf7HUi3U\"]},\"contracts/universal/IMantleMintableERC20.sol\":{\"keccak256\":\"0xdc156dcecc45f6a3d4e43ebf32ada4e138b10ba54bd14486a3e5ac245f1fec56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae5d3252cb0620ce50c7d3f24ad31a1e7f0f327bfcabde2c91edc917d9e2595e\",\"dweb:/ipfs/QmSJzMvdZRgTeGK9dvm9W1EAPMmzhmNMF9TEBGqDC5E5ve\"]},\"contracts/universal/MantleMintableERC20.sol\":{\"keccak256\":\"0xbae1a4767d3274d9e591264c0fa1e924dae72809191a96d39becd3fc0340d09c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65dc69f7a27052ed082008268e5125ba1d97729db446a498d754baa0d13364d4\",\"dweb:/ipfs/QmUVUppu1N4zxk7CgxrH6xSccjYm7cdyX6YPhAmFZ9rhRz\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e\",\"dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m\"]},\"contracts/universal/StandardBridge.sol\":{\"keccak256\":\"0xd2ec8c4171f48c47216fdf3e9f58f2b95e9fdcc54f35609ed06195a5f92ea99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed3b1e5ca6d032a55fc44f7ed75d205f29833a25526b39635d9a61d72f69346\",\"dweb:/ipfs/QmTCwfHuZUFiLKCHnfjn3gkjSCGiqY8WSSeha173RcuRYy\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_otherBridge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "l1Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "l2Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "l1Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "l2Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalInitiated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSENGER",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_BRIDGE",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20To"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETHTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeBridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeBridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l1Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l1TokenBridge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messenger",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawTo"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain."
            }
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "bridgeETH(uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
            }
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_to": "Address of the receiver."
            }
          },
          "constructor": {
            "custom:semver": "1.1.0",
            "params": {
              "_otherBridge": "Address of the L1StandardBridge."
            }
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of the ERC20 being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_from": "Address of the sender.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of ETH being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
              "_from": "Address of the sender.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeDeposit(address,address,address,address,uint256,bytes)": {
            "custom:legacy": "@notice Finalizes a deposit from L1 to L2. To finalize a deposit of ether, use address(0)         and the l1Token and the Legacy ERC20 ether predeploy address as the l2Token.",
            "params": {
              "_amount": "Amount of the tokens being deposited.",
              "_extraData": "Extra data attached to the deposit.",
              "_from": "Address of the depositor.",
              "_l1Token": "Address of the L1 token to deposit.",
              "_l2Token": "Address of the corresponding L2 token.",
              "_to": "Address of the recipient."
            }
          },
          "l1TokenBridge()": {
            "custom:legacy": "@notice Retrieves the access of the corresponding L1 bridge contract.",
            "returns": {
              "_0": "Address of the corresponding L1 bridge contract."
            }
          },
          "messenger()": {
            "custom:legacy": "@notice Legacy getter for messenger contract.",
            "returns": {
              "_0": "Messenger contract on this domain."
            }
          },
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          },
          "withdraw(address,uint256,uint32,bytes)": {
            "custom:legacy": "@notice Initiates a withdrawal from L2 to L1.         This function only works with MantleMintableERC20 tokens or ether. Use the         `bridgeERC20` function to bridge native L2 tokens to L1.",
            "params": {
              "_amount": "Amount of the L2 token to withdraw.",
              "_extraData": "Extra data attached to the withdrawal.",
              "_l2Token": "Address of the L2 token to withdraw.",
              "_minGasLimit": "Minimum gas limit to use for the transaction."
            }
          },
          "withdrawTo(address,address,uint256,uint32,bytes)": {
            "custom:legacy": "@notice Initiates a withdrawal from L2 to L1 to a target account on L1.         Note that if ETH is sent to a contract on L1 and the call fails, then that ETH will         be locked in the L1StandardBridge. ETH may be recoverable if the call can be         successfully replayed by increasing the amount of gas supplied to the call. If the         call will fail for any amount of gas, then the ETH will be locked permanently.         This function only works with MantleMintableERC20 tokens or ether. Use the         `bridgeERC20To` function to bridge native L2 tokens to L1.",
            "params": {
              "_amount": "Amount of the L2 token to withdraw.",
              "_extraData": "Extra data attached to the withdrawal.",
              "_l2Token": "Address of the L2 token to withdraw.",
              "_minGasLimit": "Minimum gas limit to use for the transaction.",
              "_to": "Recipient account on L1."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSENGER()": {
            "notice": "Messenger contract on this domain."
          },
          "OTHER_BRIDGE()": {
            "notice": "Corresponding bridge on the other domain."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeETH(uint32,bytes)": {
            "notice": "Sends ETH to the sender's address on the other chain."
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
          },
          "deposits(address,address)": {
            "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "version()": {
            "notice": "Returns the full semver contract version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/L2/L2StandardBridge.sol": "L2StandardBridge"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/L2/L2StandardBridge.sol": {
        "keccak256": "0x32993218778b2799c2a29f1f85fb53349f5172d77ba52675a2279c8282c1cf5d",
        "urls": [
          "bzz-raw://a4cf2629297d832dffa8b0201186f563f2f5676bdcc9537729b02657e5016e9f",
          "dweb:/ipfs/QmXSZgQRbmsT6hpxjqZTakbA6rQS8YaNtznqPtGGxzZETX"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Constants.sol": {
        "keccak256": "0x09a0d1616d822d77142123e6d1262be7ee71ee840e6022f75a4aa0c508659a99",
        "urls": [
          "bzz-raw://7bfbb81c230c0032a4d1c3e37b32708e82523c53b7b3b0df5558335c5c0949ee",
          "dweb:/ipfs/QmcRoHQTRxEbbngT1o9yPC5FfQiqqH8P1nTAB7RzgQbKVj"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018",
        "urls": [
          "bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b",
          "dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Hashing.sol": {
        "keccak256": "0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c",
        "urls": [
          "bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0",
          "dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Predeploys.sol": {
        "keccak256": "0x7e3206b5b47978d7fab230fc46c3a868466ecb4744feeee9aaff159de1e4c605",
        "urls": [
          "bzz-raw://c74edb3e68a84a4acc96ce3981ada0c9c7768d6c8d40e783b3b0d41a53e7f041",
          "dweb:/ipfs/QmcbhLFHv9ZgqsCpDUU18oYevrqynJjnp3cqJ1h9MR8y6K"
        ],
        "license": "MIT"
      },
      "contracts/libraries/SafeCall.sol": {
        "keccak256": "0xbb0621c028c18e9d5a54cf1a8136cf2e77f161de48aeb8d911e230f6b280c9ed",
        "urls": [
          "bzz-raw://924ecc629c7642bc19e2f8a390f1b946d22862c8889453da681b5bc1a45d7703",
          "dweb:/ipfs/QmbNknQ8pzssXDXGVjXxzZ8zh1YnNCWtRJVepiM1TnqoqQ"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Types.sol": {
        "keccak256": "0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a",
        "urls": [
          "bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef",
          "dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      },
      "contracts/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x3d8194c9e05aea4a9cefa1833ab4f3e95749b685ccf9a04719d235cac2fa3774",
        "urls": [
          "bzz-raw://c0043e95acd7c29de3836e98cdcc4292eef201e3ebfab2d768bcfe47f800df8d",
          "dweb:/ipfs/QmTZNQVBdodruQ2x38nhERY9DFjU9oEFU21j5Atf7HUi3U"
        ],
        "license": "MIT"
      },
      "contracts/universal/IMantleMintableERC20.sol": {
        "keccak256": "0xdc156dcecc45f6a3d4e43ebf32ada4e138b10ba54bd14486a3e5ac245f1fec56",
        "urls": [
          "bzz-raw://ae5d3252cb0620ce50c7d3f24ad31a1e7f0f327bfcabde2c91edc917d9e2595e",
          "dweb:/ipfs/QmSJzMvdZRgTeGK9dvm9W1EAPMmzhmNMF9TEBGqDC5E5ve"
        ],
        "license": "MIT"
      },
      "contracts/universal/MantleMintableERC20.sol": {
        "keccak256": "0xbae1a4767d3274d9e591264c0fa1e924dae72809191a96d39becd3fc0340d09c",
        "urls": [
          "bzz-raw://65dc69f7a27052ed082008268e5125ba1d97729db446a498d754baa0d13364d4",
          "dweb:/ipfs/QmUVUppu1N4zxk7CgxrH6xSccjYm7cdyX6YPhAmFZ9rhRz"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b",
        "urls": [
          "bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e",
          "dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m"
        ],
        "license": "MIT"
      },
      "contracts/universal/StandardBridge.sol": {
        "keccak256": "0xd2ec8c4171f48c47216fdf3e9f58f2b95e9fdcc54f35609ed06195a5f92ea99c",
        "urls": [
          "bzz-raw://0ed3b1e5ca6d032a55fc44f7ed75d205f29833a25526b39635d9a61d72f69346",
          "dweb:/ipfs/QmTCwfHuZUFiLKCHnfjn3gkjSCGiqY8WSSeha173RcuRYy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 44729,
        "contract": "contracts/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "spacer_0_0_20",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 44732,
        "contract": "contracts/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "spacer_1_0_20",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 44739,
        "contract": "contracts/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "deposits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 44744,
        "contract": "contracts/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "__gap",
        "offset": 0,
        "slot": "3",
        "type": "t_array(t_uint256)47_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)47_storage": {
        "encoding": "inplace",
        "label": "uint256[47]",
        "numberOfBytes": "1504",
        "base": "t_uint256"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSENGER()": {
        "notice": "Messenger contract on this domain."
      },
      "OTHER_BRIDGE()": {
        "notice": "Corresponding bridge on the other domain."
      },
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeETH(uint32,bytes)": {
        "notice": "Sends ETH to the sender's address on the other chain."
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
      },
      "deposits(address,address)": {
        "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "version()": {
        "notice": "Returns the full semver contract version."
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is finalized on this chain."
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is initiated to the other chain."
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is finalized on this chain."
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is initiated to the other chain."
      }
    },
    "notice": "The L2StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and         L2. In the case that an ERC20 token is native to L2, it will be escrowed within this         contract. If the ERC20 token is native to L1, it will be burnt.         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples         of some token types that may not be properly supported by this contract include, but are         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain."
        }
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "bridgeETH(uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
        }
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_to": "Address of the receiver."
        }
      },
      "constructor": {
        "params": {
          "_otherBridge": "Address of the L1StandardBridge."
        }
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_from": "Address of the sender.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of ETH being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
          "_from": "Address of the sender.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeDeposit(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the tokens being deposited.",
          "_extraData": "Extra data attached to the deposit.",
          "_from": "Address of the depositor.",
          "_l1Token": "Address of the L1 token to deposit.",
          "_l2Token": "Address of the corresponding L2 token.",
          "_to": "Address of the recipient."
        }
      },
      "l1TokenBridge()": {
        "returns": {
          "_0": "Address of the corresponding L1 bridge contract."
        }
      },
      "messenger()": {
        "returns": {
          "_0": "Messenger contract on this domain."
        }
      },
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      },
      "withdraw(address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of the L2 token to withdraw.",
          "_extraData": "Extra data attached to the withdrawal.",
          "_l2Token": "Address of the L2 token to withdraw.",
          "_minGasLimit": "Minimum gas limit to use for the transaction."
        }
      },
      "withdrawTo(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of the L2 token to withdraw.",
          "_extraData": "Extra data attached to the withdrawal.",
          "_l2Token": "Address of the L2 token to withdraw.",
          "_minGasLimit": "Minimum gas limit to use for the transaction.",
          "_to": "Recipient account on L1."
        }
      }
    },
    "events": {
      "DepositFinalized(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 deposited.",
          "extraData": "Extra data attached to the deposit.",
          "from": "Address of the depositor.",
          "l1Token": "Address of the token on L1.",
          "l2Token": "Address of the corresponding token on L2.",
          "to": "Address of the recipient on L2."
        }
      },
      "WithdrawalInitiated(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 withdrawn.",
          "extraData": "Extra data attached to the withdrawal.",
          "from": "Address of the withdrawer.",
          "l1Token": "Address of the token on L1.",
          "l2Token": "Address of the corresponding token on L2.",
          "to": "Address of the recipient on L1."
        }
      }
    },
    "title": "L2StandardBridge"
  },
  "ast": {
    "absolutePath": "contracts/L2/L2StandardBridge.sol",
    "id": 3713,
    "exportedSymbols": {
      "L2StandardBridge": [
        3712
      ],
      "MantleMintableERC20": [
        43448
      ],
      "Predeploys": [
        7812
      ],
      "Semver": [
        44690
      ],
      "StandardBridge": [
        45398
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:10151:16",
    "nodes": [
      {
        "id": 3316,
        "nodeType": "PragmaDirective",
        "src": "32:23:16",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 3318,
        "nodeType": "ImportDirective",
        "src": "57:57:16",
        "nodes": [],
        "absolutePath": "contracts/libraries/Predeploys.sol",
        "file": "../libraries/Predeploys.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3713,
        "sourceUnit": 7813,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3317,
              "name": "Predeploys",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7812,
              "src": "66:10:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3320,
        "nodeType": "ImportDirective",
        "src": "115:65:16",
        "nodes": [],
        "absolutePath": "contracts/universal/StandardBridge.sol",
        "file": "../universal/StandardBridge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3713,
        "sourceUnit": 45399,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3319,
              "name": "StandardBridge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 45398,
              "src": "124:14:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3322,
        "nodeType": "ImportDirective",
        "src": "181:49:16",
        "nodes": [],
        "absolutePath": "contracts/universal/Semver.sol",
        "file": "../universal/Semver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3713,
        "sourceUnit": 44691,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3321,
              "name": "Semver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44690,
              "src": "190:6:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3324,
        "nodeType": "ImportDirective",
        "src": "231:75:16",
        "nodes": [],
        "absolutePath": "contracts/universal/MantleMintableERC20.sol",
        "file": "../universal/MantleMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 3713,
        "sourceUnit": 43449,
        "symbolAliases": [
          {
            "foreign": {
              "id": 3323,
              "name": "MantleMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43448,
              "src": "240:19:16",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 3712,
        "nodeType": "ContractDefinition",
        "src": "994:9188:16",
        "nodes": [
          {
            "id": 3344,
            "nodeType": "EventDefinition",
            "src": "1513:197:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3330,
              "nodeType": "StructuredDocumentation",
              "src": "1052:456:16",
              "text": " @custom:legacy\n @notice Emitted whenever a withdrawal from L2 to L1 is initiated.\n @param l1Token   Address of the token on L1.\n @param l2Token   Address of the corresponding token on L2.\n @param from      Address of the withdrawer.\n @param to        Address of the recipient on L1.\n @param amount    Amount of the ERC20 withdrawn.\n @param extraData Extra data attached to the withdrawal."
            },
            "eventSelector": "73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e",
            "name": "WithdrawalInitiated",
            "nameLocation": "1519:19:16",
            "parameters": {
              "id": 3343,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3332,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l1Token",
                  "nameLocation": "1564:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "1548:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3331,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1548:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3334,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l2Token",
                  "nameLocation": "1597:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "1581:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3333,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1581:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3336,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1630:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "1614:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1614:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3338,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1652:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "1644:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3337,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1644:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3340,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1672:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "1664:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1664:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3342,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "1694:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3344,
                  "src": "1688:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3341,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1688:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1538:171:16"
            }
          },
          {
            "id": 3359,
            "nodeType": "EventDefinition",
            "src": "2163:194:16",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 3345,
              "nodeType": "StructuredDocumentation",
              "src": "1716:442:16",
              "text": " @custom:legacy\n @notice Emitted whenever an ERC20 deposit is finalized.\n @param l1Token   Address of the token on L1.\n @param l2Token   Address of the corresponding token on L2.\n @param from      Address of the depositor.\n @param to        Address of the recipient on L2.\n @param amount    Amount of the ERC20 deposited.\n @param extraData Extra data attached to the deposit."
            },
            "eventSelector": "b0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89",
            "name": "DepositFinalized",
            "nameLocation": "2169:16:16",
            "parameters": {
              "id": 3358,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3347,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l1Token",
                  "nameLocation": "2211:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3359,
                  "src": "2195:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2195:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3349,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l2Token",
                  "nameLocation": "2244:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3359,
                  "src": "2228:23:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3348,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2228:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3351,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2277:4:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3359,
                  "src": "2261:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3350,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2261:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3353,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2299:2:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3359,
                  "src": "2291:10:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3352,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2291:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3355,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2319:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3359,
                  "src": "2311:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3354,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2311:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3357,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "2341:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3359,
                  "src": "2335:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3356,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2335:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2185:171:16"
            }
          },
          {
            "id": 3379,
            "nodeType": "FunctionDefinition",
            "src": "2474:156:16",
            "nodes": [],
            "body": {
              "id": 3378,
              "nodeType": "Block",
              "src": "2628:2:16",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 3360,
              "nodeType": "StructuredDocumentation",
              "src": "2363:106:16",
              "text": " @custom:semver 1.1.0\n @param _otherBridge Address of the L1StandardBridge."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "31",
                    "id": 3365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2531:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "31",
                    "id": 3366,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2534:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_1_by_1",
                      "typeString": "int_const 1"
                    },
                    "value": "1"
                  },
                  {
                    "hexValue": "30",
                    "id": 3367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "2537:1:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  }
                ],
                "id": 3368,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3364,
                  "name": "Semver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44690,
                  "src": "2524:6:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2524:15:16"
              },
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3372,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7812,
                          "src": "2571:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$7812_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 3373,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "L2_CROSS_DOMAIN_MESSENGER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7747,
                        "src": "2571:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 3371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2563:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_payable_$",
                        "typeString": "type(address payable)"
                      },
                      "typeName": {
                        "id": 3370,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2563:8:16",
                        "stateMutability": "payable",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2563:45:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  {
                    "id": 3375,
                    "name": "_otherBridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3362,
                    "src": "2610:12:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  }
                ],
                "id": 3376,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 3369,
                  "name": "StandardBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 45398,
                  "src": "2548:14:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2548:75:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 3363,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3362,
                  "mutability": "mutable",
                  "name": "_otherBridge",
                  "nameLocation": "2502:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3379,
                  "src": "2486:28:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 3361,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2486:15:16",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2485:30:16"
            },
            "returnParameters": {
              "id": 3377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2628:0:16"
            },
            "scope": 3712,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 3403,
            "nodeType": "FunctionDefinition",
            "src": "2728:264:16",
            "nodes": [],
            "body": {
              "id": 3402,
              "nodeType": "Block",
              "src": "2772:220:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3387,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7812,
                          "src": "2815:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$7812_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 3388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "2815:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3389,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2856:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2856:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3391,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2880:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3392,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2880:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3393,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2904:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "2904:9:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3395,
                        "name": "RECEIVE_DEFAULT_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44718,
                        "src": "2927:25:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 3398,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2972:2:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 3397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2966:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 3396,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "2966:5:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2966:9:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3386,
                      "name": "_initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3563,
                      "src": "2782:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 3400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2782:203:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3401,
                  "nodeType": "ExpressionStatement",
                  "src": "2782:203:16"
                }
              ]
            },
            "baseFunctions": [
              44861
            ],
            "documentation": {
              "id": 3380,
              "nodeType": "StructuredDocumentation",
              "src": "2636:87:16",
              "text": " @notice Allows EOAs to bridge ETH by sending directly to the bridge."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "id": 3384,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3383,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44811,
                  "src": "2764:7:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2764:7:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "overrides": {
              "id": 3382,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2755:8:16"
            },
            "parameters": {
              "id": 3381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2735:2:16"
            },
            "returnParameters": {
              "id": 3385,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2772:0:16"
            },
            "scope": 3712,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3429,
            "nodeType": "FunctionDefinition",
            "src": "3524:277:16",
            "nodes": [],
            "body": {
              "id": 3428,
              "nodeType": "Block",
              "src": "3696:105:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3418,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3406,
                        "src": "3726:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3419,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3736:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3736:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3421,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3748:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3422,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3748:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3423,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3408,
                        "src": "3760:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3424,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3410,
                        "src": "3769:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3425,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3412,
                        "src": "3783:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 3417,
                      "name": "_initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3563,
                      "src": "3706:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 3426,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3706:88:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3427,
                  "nodeType": "ExpressionStatement",
                  "src": "3706:88:16"
                }
              ]
            },
            "documentation": {
              "id": 3404,
              "nodeType": "StructuredDocumentation",
              "src": "2998:521:16",
              "text": " @custom:legacy\n @notice Initiates a withdrawal from L2 to L1.\n         This function only works with MantleMintableERC20 tokens or ether. Use the\n         `bridgeERC20` function to bridge native L2 tokens to L1.\n @param _l2Token     Address of the L2 token to withdraw.\n @param _amount      Amount of the L2 token to withdraw.\n @param _minGasLimit Minimum gas limit to use for the transaction.\n @param _extraData   Extra data attached to the withdrawal."
            },
            "functionSelector": "32b7006d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 3415,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3414,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 44811,
                  "src": "3688:7:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "3688:7:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3533:8:16",
            "parameters": {
              "id": 3413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3406,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "3559:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3429,
                  "src": "3551:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3551:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3408,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3585:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3429,
                  "src": "3577:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3407,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3577:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3410,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "3609:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3429,
                  "src": "3602:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3409,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3602:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3412,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "3646:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3429,
                  "src": "3631:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3411,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3631:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3541:121:16"
            },
            "returnParameters": {
              "id": 3416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3696:0:16"
            },
            "scope": 3712,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3454,
            "nodeType": "FunctionDefinition",
            "src": "4796:285:16",
            "nodes": [],
            "body": {
              "id": 3453,
              "nodeType": "Block",
              "src": "4983:98:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3444,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3432,
                        "src": "5013:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3445,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5023:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5023:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3447,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3434,
                        "src": "5035:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3448,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3436,
                        "src": "5040:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3449,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3438,
                        "src": "5049:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 3450,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3440,
                        "src": "5063:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 3443,
                      "name": "_initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3563,
                      "src": "4993:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 3451,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4993:81:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3452,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:81:16"
                }
              ]
            },
            "documentation": {
              "id": 3430,
              "nodeType": "StructuredDocumentation",
              "src": "3807:984:16",
              "text": " @custom:legacy\n @notice Initiates a withdrawal from L2 to L1 to a target account on L1.\n         Note that if ETH is sent to a contract on L1 and the call fails, then that ETH will\n         be locked in the L1StandardBridge. ETH may be recoverable if the call can be\n         successfully replayed by increasing the amount of gas supplied to the call. If the\n         call will fail for any amount of gas, then the ETH will be locked permanently.\n         This function only works with MantleMintableERC20 tokens or ether. Use the\n         `bridgeERC20To` function to bridge native L2 tokens to L1.\n @param _l2Token     Address of the L2 token to withdraw.\n @param _to          Recipient account on L1.\n @param _amount      Amount of the L2 token to withdraw.\n @param _minGasLimit Minimum gas limit to use for the transaction.\n @param _extraData   Extra data attached to the withdrawal."
            },
            "functionSelector": "a3a79548",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTo",
            "nameLocation": "4805:10:16",
            "parameters": {
              "id": 3441,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3432,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "4833:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "4825:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3431,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3434,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4859:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "4851:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4851:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3436,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4880:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "4872:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4872:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3438,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "4904:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "4897:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3437,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4897:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3440,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "4941:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3454,
                  "src": "4926:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3439,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4926:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4815:142:16"
            },
            "returnParameters": {
              "id": 3442,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4983:0:16"
            },
            "scope": 3712,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3501,
            "nodeType": "FunctionDefinition",
            "src": "5672:477:16",
            "nodes": [],
            "body": {
              "id": 3500,
              "nodeType": "Block",
              "src": "5884:265:16",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3470,
                        "name": "_l1Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3457,
                        "src": "5898:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3473,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5918:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3472,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5910:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3471,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5910:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3474,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5910:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5898:22:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 3479,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3476,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3459,
                        "src": "5924:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3477,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7812,
                          "src": "5936:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$7812_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 3478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "5936:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5924:39:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5898:65:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3498,
                    "nodeType": "Block",
                    "src": "6046:97:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3490,
                              "name": "_l2Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3459,
                              "src": "6080:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3491,
                              "name": "_l1Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3457,
                              "src": "6090:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3492,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3461,
                              "src": "6100:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3493,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3463,
                              "src": "6107:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3494,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3465,
                              "src": "6112:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3495,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3467,
                              "src": "6121:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 3489,
                            "name": "finalizeBridgeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45109,
                            "src": "6060:19:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (address,address,address,address,uint256,bytes calldata)"
                            }
                          },
                          "id": 3496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6060:72:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3497,
                        "nodeType": "ExpressionStatement",
                        "src": "6060:72:16"
                      }
                    ]
                  },
                  "id": 3499,
                  "nodeType": "IfStatement",
                  "src": "5894:249:16",
                  "trueBody": {
                    "id": 3488,
                    "nodeType": "Block",
                    "src": "5965:75:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3482,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3461,
                              "src": "5997:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3483,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3463,
                              "src": "6004:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3484,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3465,
                              "src": "6009:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3485,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3467,
                              "src": "6018:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 3481,
                            "name": "finalizeBridgeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45037,
                            "src": "5979:17:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,bytes calldata)"
                            }
                          },
                          "id": 3486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5979:50:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3487,
                        "nodeType": "ExpressionStatement",
                        "src": "5979:50:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3455,
              "nodeType": "StructuredDocumentation",
              "src": "5087:580:16",
              "text": " @custom:legacy\n @notice Finalizes a deposit from L1 to L2. To finalize a deposit of ether, use address(0)\n         and the l1Token and the Legacy ERC20 ether predeploy address as the l2Token.\n @param _l1Token   Address of the L1 token to deposit.\n @param _l2Token   Address of the corresponding L2 token.\n @param _from      Address of the depositor.\n @param _to        Address of the recipient.\n @param _amount    Amount of the tokens being deposited.\n @param _extraData Extra data attached to the deposit."
            },
            "functionSelector": "662a633a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeDeposit",
            "nameLocation": "5681:15:16",
            "parameters": {
              "id": 3468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3457,
                  "mutability": "mutable",
                  "name": "_l1Token",
                  "nameLocation": "5714:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "5706:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5706:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3459,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "5740:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "5732:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5732:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3461,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "5766:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "5758:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5758:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3463,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "5789:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "5781:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3462,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3465,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5810:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "5802:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5802:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3467,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "5842:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3501,
                  "src": "5827:25:16",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3466,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5827:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5696:162:16"
            },
            "returnParameters": {
              "id": 3469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5884:0:16"
            },
            "scope": 3712,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 3513,
            "nodeType": "FunctionDefinition",
            "src": "6341:102:16",
            "nodes": [],
            "body": {
              "id": 3512,
              "nodeType": "Block",
              "src": "6398:45:16",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3509,
                        "name": "OTHER_BRIDGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44726,
                        "src": "6423:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StandardBridge_$45398",
                          "typeString": "contract StandardBridge"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_StandardBridge_$45398",
                          "typeString": "contract StandardBridge"
                        }
                      ],
                      "id": 3508,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "6415:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 3507,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "6415:7:16",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6415:21:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 3506,
                  "id": 3511,
                  "nodeType": "Return",
                  "src": "6408:28:16"
                }
              ]
            },
            "documentation": {
              "id": 3502,
              "nodeType": "StructuredDocumentation",
              "src": "6155:181:16",
              "text": " @custom:legacy\n @notice Retrieves the access of the corresponding L1 bridge contract.\n @return Address of the corresponding L1 bridge contract."
            },
            "functionSelector": "36c717c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "l1TokenBridge",
            "nameLocation": "6350:13:16",
            "parameters": {
              "id": 3503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6363:2:16"
            },
            "returnParameters": {
              "id": 3506,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3505,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3513,
                  "src": "6389:7:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3504,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6389:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6388:9:16"
            },
            "scope": 3712,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 3563,
            "nodeType": "FunctionDefinition",
            "src": "6956:540:16",
            "nodes": [],
            "body": {
              "id": 3562,
              "nodeType": "Block",
              "src": "7157:339:16",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3529,
                      "name": "_l2Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3516,
                      "src": "7171:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3530,
                        "name": "Predeploys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7812,
                        "src": "7183:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Predeploys_$7812_$",
                          "typeString": "type(library Predeploys)"
                        }
                      },
                      "id": 3531,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "LEGACY_ERC20_ETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7787,
                      "src": "7183:27:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "7171:39:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3560,
                    "nodeType": "Block",
                    "src": "7308:182:16",
                    "statements": [
                      {
                        "assignments": [
                          3543
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 3543,
                            "mutability": "mutable",
                            "name": "l1Token",
                            "nameLocation": "7330:7:16",
                            "nodeType": "VariableDeclaration",
                            "scope": 3560,
                            "src": "7322:15:16",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 3542,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7322:7:16",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 3549,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3545,
                                  "name": "_l2Token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3516,
                                  "src": "7360:8:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3544,
                                "name": "MantleMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 43448,
                                "src": "7340:19:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_MantleMintableERC20_$43448_$",
                                  "typeString": "type(contract MantleMintableERC20)"
                                }
                              },
                              "id": 3546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7340:29:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_MantleMintableERC20_$43448",
                                "typeString": "contract MantleMintableERC20"
                              }
                            },
                            "id": 3547,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "l1Token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43420,
                            "src": "7340:37:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 3548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7340:39:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7322:57:16"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3551,
                              "name": "_l2Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3516,
                              "src": "7414:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3552,
                              "name": "l1Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3543,
                              "src": "7424:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3553,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3518,
                              "src": "7433:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3554,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3520,
                              "src": "7440:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3555,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3522,
                              "src": "7445:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3556,
                              "name": "_minGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3524,
                              "src": "7454:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 3557,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "7468:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3550,
                            "name": "_initiateBridgeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45259,
                            "src": "7393:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                            }
                          },
                          "id": 3558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7393:86:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3559,
                        "nodeType": "ExpressionStatement",
                        "src": "7393:86:16"
                      }
                    ]
                  },
                  "id": 3561,
                  "nodeType": "IfStatement",
                  "src": "7167:323:16",
                  "trueBody": {
                    "id": 3541,
                    "nodeType": "Block",
                    "src": "7212:90:16",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3534,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3518,
                              "src": "7245:5:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3535,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3520,
                              "src": "7252:3:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3536,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3522,
                              "src": "7257:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 3537,
                              "name": "_minGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3524,
                              "src": "7266:12:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 3538,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3526,
                              "src": "7280:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 3533,
                            "name": "_initiateBridgeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45161,
                            "src": "7226:18:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,uint32,bytes memory)"
                            }
                          },
                          "id": 3539,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7226:65:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3540,
                        "nodeType": "ExpressionStatement",
                        "src": "7226:65:16"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 3514,
              "nodeType": "StructuredDocumentation",
              "src": "6449:502:16",
              "text": " @custom:legacy\n @notice Internal function to a withdrawal from L2 to L1 to a target account on L1.\n @param _l2Token     Address of the L2 token to withdraw.\n @param _from        Address of the withdrawer.\n @param _to          Recipient account on L1.\n @param _amount      Amount of the L2 token to withdraw.\n @param _minGasLimit Minimum gas limit to use for the transaction.\n @param _extraData   Extra data attached to the withdrawal."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateWithdrawal",
            "nameLocation": "6965:19:16",
            "parameters": {
              "id": 3527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3516,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "7002:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3563,
                  "src": "6994:16:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3515,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6994:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3518,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "7028:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3563,
                  "src": "7020:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7020:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3520,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7051:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3563,
                  "src": "7043:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7043:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3522,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7072:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3563,
                  "src": "7064:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7064:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3524,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "7096:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3563,
                  "src": "7089:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 3523,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7089:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3526,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "7131:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3563,
                  "src": "7118:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3525,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7118:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6984:163:16"
            },
            "returnParameters": {
              "id": 3528,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7157:0:16"
            },
            "scope": 3712,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3599,
            "nodeType": "FunctionDefinition",
            "src": "7744:428:16",
            "nodes": [],
            "body": {
              "id": 3598,
              "nodeType": "Block",
              "src": "7903:269:16",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3579,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7959:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7951:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3577,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7951:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7951:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3581,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7812,
                          "src": "7975:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$7812_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 3582,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "7975:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3583,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3566,
                        "src": "8016:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3584,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "8035:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3585,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3570,
                        "src": "8052:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3586,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3572,
                        "src": "8073:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3576,
                      "name": "WithdrawalInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "7918:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7918:175:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3588,
                  "nodeType": "EmitStatement",
                  "src": "7913:180:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3592,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3566,
                        "src": "8133:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3593,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3568,
                        "src": "8140:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3594,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3570,
                        "src": "8145:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3595,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3572,
                        "src": "8154:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3589,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8103:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardBridge_$3712_$",
                          "typeString": "type(contract super L2StandardBridge)"
                        }
                      },
                      "id": 3591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitETHBridgeInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45325,
                      "src": "8103:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8103:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3597,
                  "nodeType": "ExpressionStatement",
                  "src": "8103:62:16"
                }
              ]
            },
            "baseFunctions": [
              45325
            ],
            "documentation": {
              "id": 3564,
              "nodeType": "StructuredDocumentation",
              "src": "7502:237:16",
              "text": " @notice Emits the legacy WithdrawalInitiated event followed by the ETHBridgeInitiated event.\n         This is necessary for backwards compatibility with the legacy bridge.\n @inheritdoc StandardBridge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeInitiated",
            "nameLocation": "7753:23:16",
            "overrides": {
              "id": 3574,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "7894:8:16"
            },
            "parameters": {
              "id": 3573,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3566,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "7794:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "7786:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3565,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7786:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3568,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7817:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "7809:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3567,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7809:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3570,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7838:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "7830:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3569,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7830:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3572,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "7868:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3599,
                  "src": "7855:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3571,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7855:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7776:108:16"
            },
            "returnParameters": {
              "id": 3575,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7903:0:16"
            },
            "scope": 3712,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3635,
            "nodeType": "FunctionDefinition",
            "src": "8417:425:16",
            "nodes": [],
            "body": {
              "id": 3634,
              "nodeType": "Block",
              "src": "8576:266:16",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 3615,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8629:1:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 3614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8621:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3613,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "8621:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8621:10:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3617,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7812,
                          "src": "8645:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$7812_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 3618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7787,
                        "src": "8645:27:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3619,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3602,
                        "src": "8686:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3620,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3604,
                        "src": "8705:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3621,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3606,
                        "src": "8722:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3622,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3608,
                        "src": "8743:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3612,
                      "name": "DepositFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3359,
                      "src": "8591:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8591:172:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3624,
                  "nodeType": "EmitStatement",
                  "src": "8586:177:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3628,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3602,
                        "src": "8803:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3629,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3604,
                        "src": "8810:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3630,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3606,
                        "src": "8815:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3631,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3608,
                        "src": "8824:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3625,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "8773:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardBridge_$3712_$",
                          "typeString": "type(contract super L2StandardBridge)"
                        }
                      },
                      "id": 3627,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitETHBridgeFinalized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45345,
                      "src": "8773:29:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8773:62:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3633,
                  "nodeType": "ExpressionStatement",
                  "src": "8773:62:16"
                }
              ]
            },
            "baseFunctions": [
              45345
            ],
            "documentation": {
              "id": 3600,
              "nodeType": "StructuredDocumentation",
              "src": "8178:234:16",
              "text": " @notice Emits the legacy DepositFinalized event followed by the ETHBridgeFinalized event.\n         This is necessary for backwards compatibility with the legacy bridge.\n @inheritdoc StandardBridge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeFinalized",
            "nameLocation": "8426:23:16",
            "overrides": {
              "id": 3610,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "8567:8:16"
            },
            "parameters": {
              "id": 3609,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3602,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "8467:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3635,
                  "src": "8459:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8459:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3604,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8490:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3635,
                  "src": "8482:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3603,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8482:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3606,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8511:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3635,
                  "src": "8503:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8503:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3608,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "8541:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3635,
                  "src": "8528:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3607,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8528:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8449:108:16"
            },
            "returnParameters": {
              "id": 3611,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8576:0:16"
            },
            "scope": 3712,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3673,
            "nodeType": "FunctionDefinition",
            "src": "9092:422:16",
            "nodes": [],
            "body": {
              "id": 3672,
              "nodeType": "Block",
              "src": "9312:202:16",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3653,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3640,
                        "src": "9347:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3654,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3638,
                        "src": "9361:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3655,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3642,
                        "src": "9374:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3656,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3644,
                        "src": "9381:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3657,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3646,
                        "src": "9386:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3658,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3648,
                        "src": "9395:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3652,
                      "name": "WithdrawalInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3344,
                      "src": "9327:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9327:79:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3660,
                  "nodeType": "EmitStatement",
                  "src": "9322:84:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3664,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3638,
                        "src": "9448:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3665,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3640,
                        "src": "9461:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3666,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3642,
                        "src": "9475:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3667,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3644,
                        "src": "9482:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3668,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3646,
                        "src": "9487:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3669,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3648,
                        "src": "9496:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3661,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9416:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardBridge_$3712_$",
                          "typeString": "type(contract super L2StandardBridge)"
                        }
                      },
                      "id": 3663,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitERC20BridgeInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45371,
                      "src": "9416:31:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9416:91:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3671,
                  "nodeType": "ExpressionStatement",
                  "src": "9416:91:16"
                }
              ]
            },
            "baseFunctions": [
              45371
            ],
            "documentation": {
              "id": 3636,
              "nodeType": "StructuredDocumentation",
              "src": "8848:239:16",
              "text": " @notice Emits the legacy WithdrawalInitiated event followed by the ERC20BridgeInitiated\n         event. This is necessary for backwards compatibility with the legacy bridge.\n @inheritdoc StandardBridge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeInitiated",
            "nameLocation": "9101:25:16",
            "overrides": {
              "id": 3650,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9303:8:16"
            },
            "parameters": {
              "id": 3649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3638,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "9144:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3673,
                  "src": "9136:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3637,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9136:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3640,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "9173:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3673,
                  "src": "9165:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3639,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9165:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3642,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "9203:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3673,
                  "src": "9195:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3641,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9195:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3644,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9226:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3673,
                  "src": "9218:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9218:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3646,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9247:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3673,
                  "src": "9239:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3645,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9239:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3648,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "9277:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3673,
                  "src": "9264:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3647,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9264:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9126:167:16"
            },
            "returnParameters": {
              "id": 3651,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9312:0:16"
            },
            "scope": 3712,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 3711,
            "nodeType": "FunctionDefinition",
            "src": "9761:419:16",
            "nodes": [],
            "body": {
              "id": 3710,
              "nodeType": "Block",
              "src": "9981:199:16",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 3691,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3678,
                        "src": "10013:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3692,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3676,
                        "src": "10027:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3693,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3680,
                        "src": "10040:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3694,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3682,
                        "src": "10047:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3695,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3684,
                        "src": "10052:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3696,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3686,
                        "src": "10061:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 3690,
                      "name": "DepositFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3359,
                      "src": "9996:16:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9996:76:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3698,
                  "nodeType": "EmitStatement",
                  "src": "9991:81:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3702,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3676,
                        "src": "10114:11:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3703,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3678,
                        "src": "10127:12:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3704,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3680,
                        "src": "10141:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3705,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3682,
                        "src": "10148:3:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3706,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3684,
                        "src": "10153:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 3707,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3686,
                        "src": "10162:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 3699,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10082:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardBridge_$3712_$",
                          "typeString": "type(contract super L2StandardBridge)"
                        }
                      },
                      "id": 3701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitERC20BridgeFinalized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45397,
                      "src": "10082:31:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 3708,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10082:91:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3709,
                  "nodeType": "ExpressionStatement",
                  "src": "10082:91:16"
                }
              ]
            },
            "baseFunctions": [
              45397
            ],
            "documentation": {
              "id": 3674,
              "nodeType": "StructuredDocumentation",
              "src": "9520:236:16",
              "text": " @notice Emits the legacy DepositFinalized event followed by the ERC20BridgeFinalized event.\n         This is necessary for backwards compatibility with the legacy bridge.\n @inheritdoc StandardBridge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeFinalized",
            "nameLocation": "9770:25:16",
            "overrides": {
              "id": 3688,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9972:8:16"
            },
            "parameters": {
              "id": 3687,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3676,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "9813:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3711,
                  "src": "9805:19:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3675,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9805:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3678,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "9842:12:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3711,
                  "src": "9834:20:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3677,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9834:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3680,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "9872:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3711,
                  "src": "9864:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3679,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9864:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3682,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9895:3:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3711,
                  "src": "9887:11:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3681,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9887:7:16",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3684,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9916:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3711,
                  "src": "9908:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3683,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9908:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3686,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "9946:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 3711,
                  "src": "9933:23:16",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3685,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9933:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9795:167:16"
            },
            "returnParameters": {
              "id": 3689,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9981:0:16"
            },
            "scope": 3712,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3326,
              "name": "StandardBridge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 45398,
              "src": "1023:14:16"
            },
            "id": 3327,
            "nodeType": "InheritanceSpecifier",
            "src": "1023:14:16"
          },
          {
            "baseName": {
              "id": 3328,
              "name": "Semver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 44690,
              "src": "1039:6:16"
            },
            "id": 3329,
            "nodeType": "InheritanceSpecifier",
            "src": "1039:6:16"
          }
        ],
        "canonicalName": "L2StandardBridge",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 3325,
          "nodeType": "StructuredDocumentation",
          "src": "308:685:16",
          "text": " @custom:proxied\n @custom:predeploy 0x4200000000000000000000000000000000000010\n @title L2StandardBridge\n @notice The L2StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and\n         L2. In the case that an ERC20 token is native to L2, it will be escrowed within this\n         contract. If the ERC20 token is native to L1, it will be burnt.\n         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples\n         of some token types that may not be properly supported by this contract include, but are\n         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          3712,
          44690,
          45398
        ],
        "name": "L2StandardBridge",
        "nameLocation": "1003:16:16",
        "scope": 3713,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 16
}