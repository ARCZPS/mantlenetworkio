{
  "abi": [
    {
      "inputs": [],
      "name": "echidna_round_trip_encoding_AToB",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "echidna_round_trip_encoding_BToA",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint240",
          "name": "_nonce",
          "type": "uint240"
        },
        {
          "internalType": "uint16",
          "name": "_version",
          "type": "uint16"
        }
      ],
      "name": "testRoundTripAToB",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_versionedNonce",
          "type": "uint256"
        }
      ],
      "name": "testRoundTripBToA",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5061023d806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806328f9acd8146100515780633149fcfb14610066578063a6138b0414610082578063e823d02314610093575b600080fd5b61006461005f3660046101b4565b6100a6565b005b60005460ff16155b604051901515815260200160405180910390f35b600054610100900460ff161561006e565b6100646100a13660046101cd565b61012b565b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811660f082901c7fffff0000000000000000000000000000000000000000000000000000000000008316821780841461012557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b50505050565b6000610139838360f01b1790565b90507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082169060f083901c9085168214158061017c57508361ffff168161ffff1614155b156101ad57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b5050505050565b6000602082840312156101c657600080fd5b5035919050565b600080604083850312156101e057600080fd5b82357dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8116811461020e57600080fd5b9150602083013561ffff8116811461022557600080fd5b80915050925092905056fea164736f6c634300080f000a",
    "sourceMap": "80:2657:23:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806328f9acd8146100515780633149fcfb14610066578063a6138b0414610082578063e823d02314610093575b600080fd5b61006461005f3660046101b4565b6100a6565b005b60005460ff16155b604051901515815260200160405180910390f35b600054610100900460ff161561006e565b6100646100a13660046101cd565b61012b565b7dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811660f082901c7fffff0000000000000000000000000000000000000000000000000000000000008316821780841461012557600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b50505050565b6000610139838360f01b1790565b90507dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8082169060f083901c9085168214158061017c57508361ffff168161ffff1614155b156101ad57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555b5050505050565b6000602082840312156101c657600080fd5b5035919050565b600080604083850312156101e057600080fd5b82357dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8116811461020e57600080fd5b9150602083013561ffff8116811461022557600080fd5b80915050925092905056fea164736f6c634300080f000a",
    "sourceMap": "80:2657:23:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1339:595;;;;;;:::i;:::-;;:::i;:::-;;2117:192;2182:4;2283:19;;;2282:20;2117:192;;;364:14:165;;357:22;339:41;;327:2;312:18;2117:192:23;;;;;;;2518:217;2583:4;2709:19;;;;;;2708:20;2518:217;;444:613;;;;;;:::i;:::-;;:::i;1339:595::-;5555:66:40;5543:79;;5650:3;5646:16;;;5035:18;;;5032:30;;1835:40:23;;;1831:97;;1891:19;:26;;;;;;;;1831:97;1398:536;;;1339:595;:::o;444:613::-;561:29;593:47;623:6;631:8;5039:3:40;5035:18;5032:30;;4872:228;593:47:23;561:79;-1:-1:-1;5555:66:40;5543:79;;;;5650:3;5646:16;;;;943:22:23;;;;;;942:56;;;989:8;971:26;;:14;:26;;;;942:56;938:113;;;1014:19;:26;;;;1036:4;1014:26;;;938:113;511:546;;;444:613;;:::o;14:180:165:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:165;;14:180;-1:-1:-1;14:180:165:o;391:497::-;458:6;466;519:2;507:9;498:7;494:23;490:32;487:52;;;535:1;532;525:12;487:52;574:9;561:23;624:62;617:5;613:74;606:5;603:85;593:113;;702:1;699;692:12;593:113;725:5;-1:-1:-1;782:2:165;767:18;;754:32;830:6;817:20;;805:33;;795:61;;852:1;849;842:12;795:61;875:7;865:17;;;391:497;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "echidna_round_trip_encoding_AToB()": "3149fcfb",
    "echidna_round_trip_encoding_BToA()": "a6138b04",
    "testRoundTripAToB(uint240,uint16)": "e823d023",
    "testRoundTripBToA(uint256)": "28f9acd8"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"echidna_round_trip_encoding_AToB\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"echidna_round_trip_encoding_BToA\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint240\",\"name\":\"_nonce\",\"type\":\"uint240\"},{\"internalType\":\"uint16\",\"name\":\"_version\",\"type\":\"uint16\"}],\"name\":\"testRoundTripAToB\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_versionedNonce\",\"type\":\"uint256\"}],\"name\":\"testRoundTripBToA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"echidna_round_trip_encoding_AToB()\":{\"custom:invariant\":\"`testRoundTripAToB` never fails. Asserts that a raw versioned nonce can be encoded / decoded to reach the same raw value.\"},\"echidna_round_trip_encoding_BToA()\":{\"custom:invariant\":\"`testRoundTripBToA` never fails. Asserts that an encoded versioned nonce can always be decoded / re-encoded to reach the same encoded value.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"testRoundTripAToB(uint240,uint16)\":{\"notice\":\"Takes a pair of integers to be encoded into a versioned nonce with the         Encoding library and then decoded and updates the test contract's state         indicating if the round trip encoding failed.\"},\"testRoundTripBToA(uint256)\":{\"notice\":\"Takes an integer representing a packed version and nonce and attempts         to decode them using the Encoding library before re-encoding and updates         the test contract's state indicating if the round trip encoding failed.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/echidna/FuzzEncoding.sol\":\"EchidnaFuzzEncoding\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/echidna/FuzzEncoding.sol\":{\"keccak256\":\"0x55ccf8fb3975fdf3376e28658b9bd1f53ac63b913f593c029f12541dcac34f86\",\"urls\":[\"bzz-raw://f04e820315f0b0cba1b21af27b4bd853b38d53ef9a1f64ce647ddf7a20617094\",\"dweb:/ipfs/QmeV8xs22ZaJdhg9cKsMZwxDELVFXnJc14AfgJKgWRU8NR\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b\",\"dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0\",\"dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef\",\"dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "echidna_round_trip_encoding_AToB",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "echidna_round_trip_encoding_BToA",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint240",
              "name": "_nonce",
              "type": "uint240"
            },
            {
              "internalType": "uint16",
              "name": "_version",
              "type": "uint16"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRoundTripAToB"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_versionedNonce",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testRoundTripBToA"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "echidna_round_trip_encoding_AToB()": {
            "custom:invariant": "`testRoundTripAToB` never fails. Asserts that a raw versioned nonce can be encoded / decoded to reach the same raw value."
          },
          "echidna_round_trip_encoding_BToA()": {
            "custom:invariant": "`testRoundTripBToA` never fails. Asserts that an encoded versioned nonce can always be decoded / re-encoded to reach the same encoded value."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "testRoundTripAToB(uint240,uint16)": {
            "notice": "Takes a pair of integers to be encoded into a versioned nonce with the         Encoding library and then decoded and updates the test contract's state         indicating if the round trip encoding failed."
          },
          "testRoundTripBToA(uint256)": {
            "notice": "Takes an integer representing a packed version and nonce and attempts         to decode them using the Encoding library before re-encoding and updates         the test contract's state indicating if the round trip encoding failed."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/echidna/FuzzEncoding.sol": "EchidnaFuzzEncoding"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/echidna/FuzzEncoding.sol": {
        "keccak256": "0x55ccf8fb3975fdf3376e28658b9bd1f53ac63b913f593c029f12541dcac34f86",
        "urls": [
          "bzz-raw://f04e820315f0b0cba1b21af27b4bd853b38d53ef9a1f64ce647ddf7a20617094",
          "dweb:/ipfs/QmeV8xs22ZaJdhg9cKsMZwxDELVFXnJc14AfgJKgWRU8NR"
        ],
        "license": null
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018",
        "urls": [
          "bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b",
          "dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Hashing.sol": {
        "keccak256": "0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c",
        "urls": [
          "bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0",
          "dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Types.sol": {
        "keccak256": "0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a",
        "urls": [
          "bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef",
          "dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 4998,
        "contract": "contracts/echidna/FuzzEncoding.sol:EchidnaFuzzEncoding",
        "label": "failedRoundtripAToB",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 5000,
        "contract": "contracts/echidna/FuzzEncoding.sol:EchidnaFuzzEncoding",
        "label": "failedRoundtripBToA",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "testRoundTripAToB(uint240,uint16)": {
        "notice": "Takes a pair of integers to be encoded into a versioned nonce with the         Encoding library and then decoded and updates the test contract's state         indicating if the round trip encoding failed."
      },
      "testRoundTripBToA(uint256)": {
        "notice": "Takes an integer representing a packed version and nonce and attempts         to decode them using the Encoding library before re-encoding and updates         the test contract's state indicating if the round trip encoding failed."
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "echidna_round_trip_encoding_AToB()": {},
      "echidna_round_trip_encoding_BToA()": {}
    }
  },
  "ast": {
    "absolutePath": "contracts/echidna/FuzzEncoding.sol",
    "id": 5108,
    "exportedSymbols": {
      "EchidnaFuzzEncoding": [
        5107
      ],
      "Encoding": [
        7514
      ]
    },
    "nodeType": "SourceUnit",
    "src": "0:2738:23",
    "nodes": [
      {
        "id": 4994,
        "nodeType": "PragmaDirective",
        "src": "0:23:23",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 4996,
        "nodeType": "ImportDirective",
        "src": "25:53:23",
        "nodes": [],
        "absolutePath": "contracts/libraries/Encoding.sol",
        "file": "../libraries/Encoding.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 5108,
        "sourceUnit": 7515,
        "symbolAliases": [
          {
            "foreign": {
              "id": 4995,
              "name": "Encoding",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7514,
              "src": "34:8:23",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 5107,
        "nodeType": "ContractDefinition",
        "src": "80:2657:23",
        "nodes": [
          {
            "id": 4998,
            "nodeType": "VariableDeclaration",
            "src": "115:33:23",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "failedRoundtripAToB",
            "nameLocation": "129:19:23",
            "scope": 5107,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4997,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "115:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 5000,
            "nodeType": "VariableDeclaration",
            "src": "154:33:23",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "failedRoundtripBToA",
            "nameLocation": "168:19:23",
            "scope": 5107,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 4999,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "154:4:23",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 5047,
            "nodeType": "FunctionDefinition",
            "src": "444:613:23",
            "nodes": [],
            "body": {
              "id": 5046,
              "nodeType": "Block",
              "src": "511:546:23",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5009
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5009,
                      "mutability": "mutable",
                      "name": "encodedVersionedNonce",
                      "nameLocation": "569:21:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 5046,
                      "src": "561:29:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5008,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "561:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5015,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5012,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5003,
                        "src": "623:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      {
                        "id": 5013,
                        "name": "_version",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5005,
                        "src": "631:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 5010,
                        "name": "Encoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7514,
                        "src": "593:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Encoding_$7514_$",
                          "typeString": "type(library Encoding)"
                        }
                      },
                      "id": 5011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encodeVersionedNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7491,
                      "src": "593:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint240_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint240,uint16) pure returns (uint256)"
                      }
                    },
                    "id": 5014,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "593:47:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "561:79:23"
                },
                {
                  "assignments": [
                    5017
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5017,
                      "mutability": "mutable",
                      "name": "decodedNonce",
                      "nameLocation": "699:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 5046,
                      "src": "691:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint240",
                        "typeString": "uint240"
                      },
                      "typeName": {
                        "id": 5016,
                        "name": "uint240",
                        "nodeType": "ElementaryTypeName",
                        "src": "691:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5018,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "691:20:23"
                },
                {
                  "assignments": [
                    5020
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5020,
                      "mutability": "mutable",
                      "name": "decodedVersion",
                      "nameLocation": "728:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 5046,
                      "src": "721:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 5019,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "721:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5021,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "721:21:23"
                },
                {
                  "expression": {
                    "id": 5029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 5022,
                          "name": "decodedNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5017,
                          "src": "754:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint240",
                            "typeString": "uint240"
                          }
                        },
                        {
                          "id": 5023,
                          "name": "decodedVersion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5020,
                          "src": "768:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "id": 5024,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "753:30:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint240_$_t_uint16_$",
                        "typeString": "tuple(uint240,uint16)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5027,
                          "name": "encodedVersionedNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5009,
                          "src": "816:21:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 5025,
                          "name": "Encoding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7514,
                          "src": "786:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Encoding_$7514_$",
                            "typeString": "type(library Encoding)"
                          }
                        },
                        "id": 5026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decodeVersionedNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7513,
                        "src": "786:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$",
                          "typeString": "function (uint256) pure returns (uint240,uint16)"
                        }
                      },
                      "id": 5028,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "786:52:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint240_$_t_uint16_$",
                        "typeString": "tuple(uint240,uint16)"
                      }
                    },
                    "src": "753:85:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5030,
                  "nodeType": "ExpressionStatement",
                  "src": "753:85:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 5039,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint240",
                            "typeString": "uint240"
                          },
                          "id": 5033,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5031,
                            "name": "decodedNonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5017,
                            "src": "943:12:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint240",
                              "typeString": "uint240"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 5032,
                            "name": "_nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5003,
                            "src": "959:6:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint240",
                              "typeString": "uint240"
                            }
                          },
                          "src": "943:22:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 5034,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "942:24:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          },
                          "id": 5037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 5035,
                            "name": "decodedVersion",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5020,
                            "src": "971:14:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 5036,
                            "name": "_version",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5005,
                            "src": "989:8:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint16",
                              "typeString": "uint16"
                            }
                          },
                          "src": "971:26:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 5038,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "970:28:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "942:56:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5045,
                  "nodeType": "IfStatement",
                  "src": "938:113:23",
                  "trueBody": {
                    "id": 5044,
                    "nodeType": "Block",
                    "src": "1000:51:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 5042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5040,
                            "name": "failedRoundtripAToB",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4998,
                            "src": "1014:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 5041,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1036:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1014:26:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5043,
                        "nodeType": "ExpressionStatement",
                        "src": "1014:26:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5001,
              "nodeType": "StructuredDocumentation",
              "src": "194:245:23",
              "text": " @notice Takes a pair of integers to be encoded into a versioned nonce with the\n         Encoding library and then decoded and updates the test contract's state\n         indicating if the round trip encoding failed."
            },
            "functionSelector": "e823d023",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRoundTripAToB",
            "nameLocation": "453:17:23",
            "parameters": {
              "id": 5006,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5003,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "479:6:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5047,
                  "src": "471:14:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint240",
                    "typeString": "uint240"
                  },
                  "typeName": {
                    "id": 5002,
                    "name": "uint240",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint240",
                      "typeString": "uint240"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5005,
                  "mutability": "mutable",
                  "name": "_version",
                  "nameLocation": "494:8:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5047,
                  "src": "487:15:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint16",
                    "typeString": "uint16"
                  },
                  "typeName": {
                    "id": 5004,
                    "name": "uint16",
                    "nodeType": "ElementaryTypeName",
                    "src": "487:6:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "470:33:23"
            },
            "returnParameters": {
              "id": 5007,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "511:0:23"
            },
            "scope": 5107,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5086,
            "nodeType": "FunctionDefinition",
            "src": "1339:595:23",
            "nodes": [],
            "body": {
              "id": 5085,
              "nodeType": "Block",
              "src": "1398:536:23",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    5054
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5054,
                      "mutability": "mutable",
                      "name": "decodedNonce",
                      "nameLocation": "1456:12:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 5085,
                      "src": "1448:20:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint240",
                        "typeString": "uint240"
                      },
                      "typeName": {
                        "id": 5053,
                        "name": "uint240",
                        "nodeType": "ElementaryTypeName",
                        "src": "1448:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5055,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1448:20:23"
                },
                {
                  "assignments": [
                    5057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5057,
                      "mutability": "mutable",
                      "name": "decodedVersion",
                      "nameLocation": "1485:14:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 5085,
                      "src": "1478:21:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 5056,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "1478:6:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5058,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1478:21:23"
                },
                {
                  "expression": {
                    "id": 5066,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 5059,
                          "name": "decodedNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5054,
                          "src": "1511:12:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint240",
                            "typeString": "uint240"
                          }
                        },
                        {
                          "id": 5060,
                          "name": "decodedVersion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5057,
                          "src": "1525:14:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        }
                      ],
                      "id": 5061,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "1510:30:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint240_$_t_uint16_$",
                        "typeString": "tuple(uint240,uint16)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 5064,
                          "name": "_versionedNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 5050,
                          "src": "1573:15:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 5062,
                          "name": "Encoding",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7514,
                          "src": "1543:8:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Encoding_$7514_$",
                            "typeString": "type(library Encoding)"
                          }
                        },
                        "id": 5063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "decodeVersionedNonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 7513,
                        "src": "1543:29:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$",
                          "typeString": "function (uint256) pure returns (uint240,uint16)"
                        }
                      },
                      "id": 5065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1543:46:23",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint240_$_t_uint16_$",
                        "typeString": "tuple(uint240,uint16)"
                      }
                    },
                    "src": "1510:79:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 5067,
                  "nodeType": "ExpressionStatement",
                  "src": "1510:79:23"
                },
                {
                  "assignments": [
                    5069
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 5069,
                      "mutability": "mutable",
                      "name": "encodedVersionedNonce",
                      "nameLocation": "1648:21:23",
                      "nodeType": "VariableDeclaration",
                      "scope": 5085,
                      "src": "1640:29:23",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 5068,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1640:7:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 5075,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 5072,
                        "name": "decodedNonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5054,
                        "src": "1702:12:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      {
                        "id": 5073,
                        "name": "decodedVersion",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5057,
                        "src": "1716:14:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        },
                        {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      ],
                      "expression": {
                        "id": 5070,
                        "name": "Encoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7514,
                        "src": "1672:8:23",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Encoding_$7514_$",
                          "typeString": "type(library Encoding)"
                        }
                      },
                      "id": 5071,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "encodeVersionedNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7491,
                      "src": "1672:29:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint240_$_t_uint16_$returns$_t_uint256_$",
                        "typeString": "function (uint240,uint16) pure returns (uint256)"
                      }
                    },
                    "id": 5074,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1672:59:23",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1640:91:23"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 5078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 5076,
                      "name": "encodedVersionedNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5069,
                      "src": "1835:21:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 5077,
                      "name": "_versionedNonce",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5050,
                      "src": "1860:15:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1835:40:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 5084,
                  "nodeType": "IfStatement",
                  "src": "1831:97:23",
                  "trueBody": {
                    "id": 5083,
                    "nodeType": "Block",
                    "src": "1877:51:23",
                    "statements": [
                      {
                        "expression": {
                          "id": 5081,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 5079,
                            "name": "failedRoundtripBToA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5000,
                            "src": "1891:19:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 5080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1913:4:23",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "1891:26:23",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 5082,
                        "nodeType": "ExpressionStatement",
                        "src": "1891:26:23"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 5048,
              "nodeType": "StructuredDocumentation",
              "src": "1063:271:23",
              "text": " @notice Takes an integer representing a packed version and nonce and attempts\n         to decode them using the Encoding library before re-encoding and updates\n         the test contract's state indicating if the round trip encoding failed."
            },
            "functionSelector": "28f9acd8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRoundTripBToA",
            "nameLocation": "1348:17:23",
            "parameters": {
              "id": 5051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5050,
                  "mutability": "mutable",
                  "name": "_versionedNonce",
                  "nameLocation": "1374:15:23",
                  "nodeType": "VariableDeclaration",
                  "scope": 5086,
                  "src": "1366:23:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1365:25:23"
            },
            "returnParameters": {
              "id": 5052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1398:0:23"
            },
            "scope": 5107,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5096,
            "nodeType": "FunctionDefinition",
            "src": "2117:192:23",
            "nodes": [],
            "body": {
              "id": 5095,
              "nodeType": "Block",
              "src": "2188:121:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5093,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2282:20:23",
                    "subExpression": {
                      "id": 5092,
                      "name": "failedRoundtripAToB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4998,
                      "src": "2283:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5091,
                  "id": 5094,
                  "nodeType": "Return",
                  "src": "2275:27:23"
                }
              ]
            },
            "documentation": {
              "id": 5087,
              "nodeType": "StructuredDocumentation",
              "src": "1940:172:23",
              "text": " @custom:invariant `testRoundTripAToB` never fails.\n Asserts that a raw versioned nonce can be encoded / decoded to reach the same raw value."
            },
            "functionSelector": "3149fcfb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "echidna_round_trip_encoding_AToB",
            "nameLocation": "2126:32:23",
            "parameters": {
              "id": 5088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2158:2:23"
            },
            "returnParameters": {
              "id": 5091,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5090,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5096,
                  "src": "2182:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5089,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2182:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2181:6:23"
            },
            "scope": 5107,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 5106,
            "nodeType": "FunctionDefinition",
            "src": "2518:217:23",
            "nodes": [],
            "body": {
              "id": 5105,
              "nodeType": "Block",
              "src": "2589:146:23",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 5103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "2708:20:23",
                    "subExpression": {
                      "id": 5102,
                      "name": "failedRoundtripBToA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5000,
                      "src": "2709:19:23",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 5101,
                  "id": 5104,
                  "nodeType": "Return",
                  "src": "2701:27:23"
                }
              ]
            },
            "documentation": {
              "id": 5097,
              "nodeType": "StructuredDocumentation",
              "src": "2315:198:23",
              "text": " @custom:invariant `testRoundTripBToA` never fails.\n Asserts that an encoded versioned nonce can always be decoded / re-encoded to reach\n the same encoded value."
            },
            "functionSelector": "a6138b04",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "echidna_round_trip_encoding_BToA",
            "nameLocation": "2527:32:23",
            "parameters": {
              "id": 5098,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2559:2:23"
            },
            "returnParameters": {
              "id": 5101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5100,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 5106,
                  "src": "2583:4:23",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5099,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2583:4:23",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2582:6:23"
            },
            "scope": 5107,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "EchidnaFuzzEncoding",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          5107
        ],
        "name": "EchidnaFuzzEncoding",
        "nameLocation": "89:19:23",
        "scope": 5108,
        "usedErrors": []
      }
    ]
  },
  "id": 23
}