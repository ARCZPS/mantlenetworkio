{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "opaqueData",
          "type": "bytes"
        }
      ],
      "name": "TransactionDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_amount",
          "type": "uint64"
        },
        {
          "internalType": "uint256",
          "name": "_blockDiff",
          "type": "uint256"
        }
      ],
      "name": "testFuzz_meter_largeBlockDiff_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_meter_initialResourceParams_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_meter_updateNoGasDelta_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_meter_updateOneEmptyBlock_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_meter_updateParamsNoChange_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_meter_updateTenEmptyBlocks_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_meter_updateTwoEmptyBlocks_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_meter_useMax_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_meter_useMoreThanMax_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1572:26:149:-:0;;;1594:4;-1:-1:-1;;1572:26:149;;;;;;;3288:44:152;;;;;;;;;;;1813:28:53;;;1837:3;-1:-1:-1;;;;;;1813:28:53;;;;;;;;1847:26;;;1572::149;1847::53;;;;;;;;1879:31;;;1906:3;1879:31;;;;;;1917:43;;;;1966:47;;;;;2054:3;2019:38;;2063:32;;;;;2138:5;2101:42;;;216:2:165;2181:22:53;198:21:165;255:1;235:18;228:29;-1:-1:-1;;;273:18:165;266:38;2181:22:53;460:4203:89;2181:22:53;2171:33;2149:55;;-1:-1:-1;2210:95:53;;321:18:165;2210:95:53;;;321:18:165;2210:95:53;;;;;;;;;:::i;:::-;;460:4203:89;;;;;;;;;;;;350:127:165;411:10;406:3;402:20;399:1;392:31;442:4;439:1;432:15;466:4;463:1;456:15;482:380;561:1;557:12;;;;604;;;625:61;;679:4;671:6;667:17;657:27;;625:61;732:2;724:6;721:14;701:18;698:38;695:161;;778:10;773:3;769:20;766:1;759:31;813:4;810:1;803:15;841:4;838:1;831:15;695:161;;482:380;;;:::o;992:544::-;1093:2;1088:3;1085:11;1082:448;;;1129:1;1154:5;1150:2;1143:17;1199:4;1195:2;1185:19;1269:2;1257:10;1253:19;1250:1;1246:27;1240:4;1236:38;1305:4;1293:10;1290:20;1287:47;;;-1:-1:-1;1328:4:165;1287:47;1383:2;1378:3;1374:12;1371:1;1367:20;1361:4;1357:31;1347:41;;1438:82;1456:2;1449:5;1446:13;1438:82;;;1501:17;;;1482:1;1471:13;1438:82;;;1442:3;;;1082:448;992:544;;;:::o;1712:1349::-;1831:10;;-1:-1:-1;;;;;1853:30:165;;1850:56;;;1886:18;;:::i;:::-;1915:96;2004:6;1964:38;1996:4;1990:11;1964:38;:::i;:::-;1958:4;1915:96;:::i;:::-;2066:4;;2130:2;2119:14;;2147:1;2142:662;;;;2848:1;2865:6;2862:89;;;-1:-1:-1;2917:19:165;;;2911:26;2862:89;-1:-1:-1;;1669:1:165;1665:11;;;1661:24;1657:29;1647:40;1693:1;1689:11;;;1644:57;2964:81;;2112:943;;2142:662;939:1;932:14;;;976:4;963:18;;-1:-1:-1;;2178:20:165;;;2295:236;2309:7;2306:1;2303:14;2295:236;;;2398:19;;;2392:26;2377:42;;2490:27;;;;2458:1;2446:14;;;;2325:19;;2295:236;;;2299:3;2559:6;2550:7;2547:19;2544:201;;;2620:19;;;2614:26;-1:-1:-1;;2703:1:165;2699:14;;;2715:3;2695:24;2691:37;2687:42;2672:58;2657:74;;2544:201;-1:-1:-1;;;;;2791:1:165;2775:14;;;2771:22;2758:36;;-1:-1:-1;1712:1349:165:o;:::-;460:4203:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "460:4203:89:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1537:389;;;:::i;:::-;;4068:593;;;;;;:::i;:::-;;:::i;1932:351::-;;;:::i;570:152::-;;;:::i;2289:353::-;;;:::i;2161:134:155:-;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;1037:494:89:-;;;:::i;2447:178:155:-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;728:303:89:-;;;:::i;3606:344::-;;;:::i;3042:558::-;;;:::i;1866:141:155:-;;;:::i;2648:388:89:-;;;:::i;1819:584:149:-;;;:::i;:::-;;;4406:14:165;;4399:22;4381:41;;4369:2;4354:18;1819:584:149;4241:187:165;2013:142:155;;;:::i;1572:26:149:-;;;;;;;;;1537:389:89;1615:15;;1607:7;;;;1615:19;;:15;;;;;1633:1;1615:19;:::i;:::-;1607:28;;;;;;;;;;5038:18:165;5026:31;;;1607:28:89;;;5008:50:165;4981:18;;1607:28:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1645:5:89;;:12;;;;;:5;:12;;;5008:50:165;1645:5:89;;;;;-1:-1:-1;1645:9:89;;-1:-1:-1;4981:18:165;;1645:12:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1668:19;1689:20;1711:19;1734:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1667:81;;;;;;1798:32;1807:11;1798:32;;1820:9;1798:8;:32::i;:::-;1840:26;1849:13;1840:26;;1864:1;1840:8;:26::i;:::-;1899:15;;1876:43;;;;;;;1899:19;;:15;;;;;1917:1;1899:19;:::i;:::-;1876:43;;:8;:43::i;:::-;1597:329;;;1537:389::o;4068:593::-;4314:66;;;;;4337:42;4324:55;;4314:66;;;4381:41:165;4314:9:89;;;;4354:18:165;;4314:66:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4391:13;4422:5;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4391:62;;4463:17;4498:5;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4463:66;-1:-1:-1;4539:9:89;;4559:19;4463:66;4559:6;:19;:::i;:::-;4549:29;;:7;:29;;;4539:40;;;;;;;;;;;;;4406:14:165;4399:22;4381:41;;4369:2;4354:18;;4241:187;4539:40:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4597:15:89;;4589:7;;-1:-1:-1;4589:7:89;;-1:-1:-1;4597:28:89;;4615:10;;4597:15;;;;;:28;:::i;:::-;4589:37;;;;;;;;;;;;;6693:25:165;;6681:2;6666:18;;6547:177;4589:37:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4636:5:89;;:18;;;;;5038::165;5026:31;;4636:18:89;;;5008:50:165;4636:5:89;;;;;-1:-1:-1;4636:9:89;;-1:-1:-1;4981:18:165;;4636::89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4161:500;;4068:593;;:::o;1932:351::-;2011:15;;2003:7;;;;2011:19;;:15;;;;;2029:1;2011:19;:::i;:::-;2003:28;;;;;;;;;;5038:18:165;5026:31;;;2003:28:89;;;5008:50:165;4981:18;;2003:28:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2041:5:89;;:12;;;;;:5;:12;;;5008:50:165;2041:5:89;;;;;-1:-1:-1;2041:9:89;;-1:-1:-1;4981:18:165;;2041:12:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2064:19;2085:20;2107:19;2130:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2063:81;;;;;;2155:32;2164:11;2155:32;;2177:9;2155:8;:32::i;:::-;2197:26;2206:13;2197:26;;2221:1;2197:8;:26::i;:::-;2256:15;;2233:43;;;;;;;2256:19;;:15;;;;;2274:1;2256:19;:::i;570:152::-;621:13;:11;:13::i;:::-;652:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;644:5:89;:23;;;;;;;677:38;;;;;;;;;702:12;677:38;;;;;;570:152::o;2289:353::-;2368:15;;2360:7;;;;2368:20;;:15;;;;;2386:2;2368:20;:::i;:::-;2360:29;;;;;;;;;;5038:18:165;5026:31;;;2360:29:89;;;5008:50:165;4981:18;;2360:29:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2399:5:89;;:12;;;;;:5;:12;;;5008:50:165;2399:5:89;;;;;-1:-1:-1;2399:9:89;;-1:-1:-1;4981:18:165;;2399:12:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2422:19;2443:20;2465:19;2488:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2421:81;;;;;;2513:32;2522:11;2513:32;;2535:9;2513:8;:32::i;:::-;2555:26;2564:13;2555:26;;2579:1;2555:8;:26::i;:::-;2614:15;;2591:44;;;;;;;2614:20;;:15;;;;;2632:2;2614:20;:::i;2161:134:155:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;1037:494:89:-;1108:5;;:12;;;;;:5;:12;;;5008:50:165;1108:5:89;;;;;:9;;4981:18:165;;1108:12:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1192:19;1213:20;1235:19;1258:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1282:5;;:12;;;;;:5;:12;;;5008:50:165;1191:81:89;;-1:-1:-1;1191:81:89;;-1:-1:-1;1191:81:89;-1:-1:-1;1282:5:89;;;:9;;4981:18:165;;1282:12:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1305:19;1326:20;1348:19;1371:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1304:81;;;;;;1396:34;1405:11;1396:34;;1418:11;1396:34;;:8;:34::i;:::-;1440:38;1449:13;1440:38;;1464:13;1440:38;;:8;:38::i;:::-;1488:36;1497:12;1488:36;;1511:12;1488:36;;:8;:36::i;:::-;1098:433;;;;;;1037:494::o;2447:178:155:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;728:303:89;801:19;822:20;844:19;867:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;800:81;;;;;;892:47;901:11;892:47;;914:5;;;;;;;;;;;:22;;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;892:47;;:8;:47::i;:::-;949:26;958:13;949:26;;973:1;949:8;:26::i;:::-;1008:15;;985:39;;;;;;;1008:15;;;;985:8;:39::i;3606:344::-;3701:5;;:29;;;;;;;;3670:13;;3701:5;;;:27;;:29;;;;;;;;;;;;;;:5;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3670:62;;3742:17;3777:5;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3818:81;;;;;7790:2:165;3818:81:89;;;7772:21:165;7829:2;7809:18;;;7802:30;7868:34;7848:18;;;7841:62;7939:32;7919:18;;;7912:60;3742:66:89;;-1:-1:-1;3818:15:89;;;;7989:19:165;;3818:81:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3909:5:89;;;;;-1:-1:-1;3909:9:89;;-1:-1:-1;3919:19:89;3928:10;3919:6;:19;:::i;:::-;:23;;3941:1;3919:23;:::i;:::-;3909:34;;;;;;;;;;5038:18:165;5026:31;;;3909:34:89;;;5008:50:165;4981:18;;3909:34:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3042:558;3130:5;;:29;;;;;;;;3099:13;;3130:5;;;:27;;:29;;;;;;;;;;;;;;:5;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3099:62;;3171:17;3206:5;;;;;;;;;;;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3247:5;;3171:66;;-1:-1:-1;3247:5:89;;:9;3257:19;3171:66;3257:6;:19;:::i;:::-;3247:30;;;;;;;;;;5038:18:165;5026:31;;;3247:30:89;;;5008:50:165;4981:18;;3247:30:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3291:20;3317:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3288:43:89;-1:-1:-1;3341:44:89;;-1:-1:-1;3341:44:89;;;3365:19;3374:10;3365:6;:19;:::i;3341:44::-;3404:15;;3396:7;;;;3404:19;;:15;;;;;3422:1;3404:19;:::i;:::-;3396:28;;;;;;;;;;5038:18:165;5026:31;;;3396:28:89;;;5008:50:165;4981:18;;3396:28:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3434:5:89;;:12;;;;;:5;:12;;;5008:50:165;3434:5:89;;;;;-1:-1:-1;3434:9:89;;-1:-1:-1;4981:18:165;;3434:12:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3457:19;3484:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3456:42;;;;3560:33;3569:11;3560:33;;3582:10;3560:8;:33::i;:::-;3089:511;;;;3042:558::o;1866:141:155:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2648:388:89;2746:5;;:29;;;;;;;;2715:13;;2746:5;;;:27;;:29;;;;;;;;;;;;;;:5;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2787:5;;:17;;;;;5038:18:165;5026:31;;2787:17:89;;;5008:50:165;2715:62:89;;-1:-1:-1;2787:5:89;;;:9;;4981:18:165;;2787:17:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2815:19;2836:20;2858:19;2881:5;;;;;;;;;;;:12;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2814:81;;;;;;2906:33;2915:11;2906:33;;2928:10;2906:8;:33::i;:::-;2949:31;2958:13;2949:31;;2973:6;2949:31;;:8;:31::i;:::-;3013:15;;2990:39;;;;;;;3013:15;;;;2990:8;:39::i;1819:584:149:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:149;;;;;;;;1819:584::o;1869:528::-;1941:17;2990:42;2978:55;3059:16;1980:374;;2196:43;;;1671:64;2196:43;;;8193:74:165;;;2221:17:149;8283:18:165;;;8276:34;2196:43:149;;;;;;;;;8166:18:165;;;2196:43:149;;;-1:-1:-1;;1671:64:149;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:149:o;2013:142:155:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;5202:262:149:-;5264:1;5259;:6;5255:203;;5286:41;;;;;9506:2:165;9488:21;;;9545:2;9525:18;;;9518:30;9584:34;9579:2;9564:18;;9557:62;9655:4;9650:2;9635:18;;9628:32;9692:3;9677:19;;9304:398;5286:41:149;;;;;;;;5346:31;;;9919:21:165;;;9976:2;9956:18;;;9949:30;10015:12;10010:2;9995:18;;9988:40;10095:4;10080:20;;10073:36;;;5346:31:149;;;;;;;10060:3:165;5346:31:149;;;5396;;;10332:21:165;;;10389:2;10369:18;;;10362:30;10428:12;10423:2;10408:18;;10401:40;10508:4;10493:20;;10486:36;;;5396:31:149;;;;;;;10473:3:165;5396:31:149;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;2491:396:53:-;2580:5;;2572:23;;;;;:7;2580:5;;;2572:23;;;8193:74:165;2587:7:53;8283:18:165;;;8276:34;2572:7:53;;;;8166:18:165;;2572:23:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2613:3:53;;2605:21;;;;;:7;2613:3;;;2605:21;;;8193:74:165;2618:7:53;8283:18:165;;;8276:34;2605:7:53;;-1:-1:-1;2605:7:53;;-1:-1:-1;8166:18:165;;2605:21:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2644:8:53;;2636:26;;;;;:7;2644:8;;;2636:26;;;8193:74:165;2654:7:53;8283:18:165;;;8276:34;2636:7:53;;-1:-1:-1;2636:7:53;;-1:-1:-1;8166:18:165;;2636:26:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2682:5:53;;2673:24;;;;;;:8;2682:5;;;2673:24;;;11059:74:165;11149:18;;;11142:30;11208:1;11188:18;;;11181:29;11246:7;11226:18;;;11219:35;2673:8:53;;-1:-1:-1;2673:8:53;;-1:-1:-1;11271:19:165;;2673:24:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2716:3:53;;2707:20;;;;;;:8;2716:3;;;2707:20;;;11513:74:165;11603:18;;;11596:30;11662:1;11642:18;;;11635:29;11700:5;11680:18;;;11673:33;2707:8:53;;-1:-1:-1;2707:8:53;;-1:-1:-1;11723:19:165;;2707:20:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2746:8:53;;2737:30;;;;;;:8;2746;;;2737:30;;;11965:74:165;12055:18;;;12048:30;12114:1;12094:18;;;12087:29;12152:10;12132:18;;;12125:38;2737:8:53;;-1:-1:-1;2737:8:53;;-1:-1:-1;12180:19:165;;2737:30:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2827:18:53;;;;;2834:10;2827:18;;;6693:25:165;2827:6:53;;-1:-1:-1;2827:6:53;;-1:-1:-1;6666:18:165;;2827::53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2862;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2856:3:53;:24;;;;;;;;;;;;;;;2491:396::o;2410:424:149:-;2990:42;2978:55;3059:16;2445:359;;2645:67;;;1671:64;2645:67;;;12611:74:165;;;2670:17:149;12701:18:165;;;12694:34;;;;2705:4:149;12744:18:165;;;12737:34;2482:11:149;;1671:64;2579:43;;12584:18:165;;2645:67:149;;;;;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;;;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:149;2813:7;:14;;;;;;;;2410:424::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:129:165:-;99:18;92:5;88:30;81:5;78:41;68:69;;133:1;130;123:12;68:69;14:129;:::o;148:313::-;215:6;223;276:2;264:9;255:7;251:23;247:32;244:52;;;292:1;289;282:12;244:52;331:9;318:23;350:30;374:5;350:30;:::i;:::-;399:5;451:2;436:18;;;;423:32;;-1:-1:-1;;;148:313:165:o;466:681::-;637:2;689:21;;;759:13;;662:18;;;781:22;;;608:4;;637:2;860:15;;;;834:2;819:18;;;608:4;903:218;917:6;914:1;911:13;903:218;;;982:13;;997:42;978:62;966:75;;1096:15;;;;1061:12;;;;939:1;932:9;903:218;;;-1:-1:-1;1138:3:165;;466:681;-1:-1:-1;;;;;;466:681:165:o;1152:1697::-;1356:4;1385:2;1425;1414:9;1410:18;1455:2;1444:9;1437:21;1478:6;1513;1507:13;1544:6;1536;1529:22;1570:2;1560:12;;1603:2;1592:9;1588:18;1581:25;;1665:2;1655:6;1652:1;1648:14;1637:9;1633:30;1629:39;1703:2;1695:6;1691:15;1724:1;1745;1755:1065;1771:6;1766:3;1763:15;1755:1065;;;1840:22;;;1864:66;1836:95;1824:108;;1955:13;;2042:9;;2053:42;2038:58;2023:74;;2136:11;;2130:18;2168:15;;;2161:27;;;2249:19;;1995:15;;;2281:24;;;2371:21;;;;2416:1;;2339:2;2327:15;;;2430:282;2446:8;2441:3;2438:17;2430:282;;;2527:15;;2544:66;2523:88;2509:103;;2681:17;;;;2474:1;2465:11;;;;;2638:14;;;;2430:282;;;-1:-1:-1;2798:12:165;;;;2735:5;-1:-1:-1;;;2763:15:165;;;;1797:1;1788:11;1755:1065;;;-1:-1:-1;2837:6:165;;1152:1697;-1:-1:-1;;;;;;;;;1152:1697:165:o;2854:258::-;2926:1;2936:113;2950:6;2947:1;2944:13;2936:113;;;3026:11;;;3020:18;3007:11;;;3000:39;2972:2;2965:10;2936:113;;;3067:6;3064:1;3061:13;3058:48;;;-1:-1:-1;;3102:1:165;3084:16;;3077:27;2854:258::o;3117:1119::-;3279:4;3308:2;3348;3337:9;3333:18;3378:2;3367:9;3360:21;3401:6;3436;3430:13;3467:6;3459;3452:22;3505:2;3494:9;3490:18;3483:25;;3567:2;3557:6;3554:1;3550:14;3539:9;3535:30;3531:39;3517:53;;3605:2;3597:6;3593:15;3626:1;3636:571;3650:6;3647:1;3644:13;3636:571;;;3739:66;3727:9;3719:6;3715:22;3711:95;3706:3;3699:108;3836:6;3830:13;3878:2;3872:9;3909:8;3901:6;3894:24;3931:61;3983:8;3978:2;3970:6;3966:15;3961:2;3957;3953:11;3931:61;:::i;:::-;4049:2;4035:17;4054:66;4031:90;4019:103;;;;4015:112;;;-1:-1:-1;4185:12:165;;;;4150:15;;;;3672:1;3665:9;3636:571;;;-1:-1:-1;4224:6:165;;3117:1119;-1:-1:-1;;;;;;;3117:1119:165:o;4433:184::-;4485:77;4482:1;4475:88;4582:4;4579:1;4572:15;4606:4;4603:1;4596:15;4622:236;4661:3;4689:18;4734:2;4731:1;4727:10;4764:2;4761:1;4757:10;4795:3;4791:2;4787:12;4782:3;4779:21;4776:47;;;4803:18;;:::i;:::-;4839:13;;4622:236;-1:-1:-1;;;;4622:236:165:o;5283:192::-;5362:13;;5415:34;5404:46;;5394:57;;5384:85;;5465:1;5462;5455:12;5480:466;5566:6;5574;5582;5635:2;5623:9;5614:7;5610:23;5606:32;5603:52;;;5651:1;5648;5641:12;5603:52;5674:40;5704:9;5674:40;:::i;:::-;5664:50;;5757:2;5746:9;5742:18;5736:25;5770:30;5794:5;5770:30;:::i;:::-;5869:2;5854:18;;5848:25;5819:5;;-1:-1:-1;5882:32:165;5848:25;5882:32;:::i;:::-;5933:7;5923:17;;;5480:466;;;;;:::o;5951:183::-;6020:6;6073:2;6061:9;6052:7;6048:23;6044:32;6041:52;;;6089:1;6086;6079:12;6041:52;-1:-1:-1;6112:16:165;;5951:183;-1:-1:-1;5951:183:165:o;6139:270::-;6178:7;6210:18;6255:2;6252:1;6248:10;6285:2;6282:1;6278:10;6341:3;6337:2;6333:12;6328:3;6325:21;6318:3;6311:11;6304:19;6300:47;6297:73;;;6350:18;;:::i;:::-;6390:13;;6139:270;-1:-1:-1;;;;6139:270:165:o;6414:128::-;6454:3;6485:1;6481:6;6478:1;6475:13;6472:39;;;6491:18;;:::i;:::-;-1:-1:-1;6527:9:165;;6414:128::o;6934:437::-;7013:1;7009:12;;;;7056;;;7077:61;;7131:4;7123:6;7119:17;7109:27;;7077:61;7184:2;7176:6;7173:14;7153:18;7150:38;7147:218;;7221:77;7218:1;7211:88;7322:4;7319:1;7312:15;7350:4;7347:1;7340:15;7147:218;;6934:437;;;:::o;7376:208::-;7446:6;7499:2;7487:9;7478:7;7474:23;7470:32;7467:52;;;7515:1;7512;7505:12;7467:52;7538:40;7568:9;7538:40;:::i;:::-;7528:50;7376:208;-1:-1:-1;;;7376:208:165:o;8321:417::-;8518:66;8510:6;8506:79;8501:3;8494:92;8476:3;8615:6;8609:13;8631:61;8685:6;8681:1;8676:3;8672:11;8665:4;8657:6;8653:17;8631:61;:::i;:::-;8712:16;;;;8730:1;8708:24;;8321:417;-1:-1:-1;;;8321:417:165:o;8743:274::-;8872:3;8910:6;8904:13;8926:53;8972:6;8967:3;8960:4;8952:6;8948:17;8926:53;:::i;:::-;8995:16;;;;;8743:274;-1:-1:-1;;8743:274:165:o;9022:277::-;9089:6;9142:2;9130:9;9121:7;9117:23;9113:32;9110:52;;;9158:1;9155;9148:12;9110:52;9190:9;9184:16;9243:5;9236:13;9229:21;9222:5;9219:32;9209:60;;9265:1;9262;9255:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testFuzz_meter_largeBlockDiff_succeeds(uint64,uint256)": "06768b58",
    "test_meter_initialResourceParams_succeeds()": "9c641be2",
    "test_meter_updateNoGasDelta_succeeds()": "b715d3bd",
    "test_meter_updateOneEmptyBlock_succeeds()": "024e2e1f",
    "test_meter_updateParamsNoChange_succeeds()": "5bc92698",
    "test_meter_updateTenEmptyBlocks_succeeds()": "143103b5",
    "test_meter_updateTwoEmptyBlocks_succeeds()": "09928413",
    "test_meter_useMax_succeeds()": "b388fd7d",
    "test_meter_useMoreThanMax_reverts()": "a8adc2b2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"opaqueData\",\"type\":\"bytes\"}],\"name\":\"TransactionDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_amount\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"_blockDiff\",\"type\":\"uint256\"}],\"name\":\"testFuzz_meter_largeBlockDiff_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_meter_initialResourceParams_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_meter_updateNoGasDelta_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_meter_updateOneEmptyBlock_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_meter_updateParamsNoChange_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_meter_updateTenEmptyBlocks_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_meter_updateTwoEmptyBlocks_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_meter_useMax_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_meter_useMoreThanMax_reverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/test/ResourceMetering.t.sol\":\"ResourceMetering_Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@openzeppelin/=node_modules/@openzeppelin/\",\":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/\",\":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/\",\":@rari-capital/=node_modules/@rari-capital/\",\":@rari-capital/solmate/=node_modules/@rari-capital/solmate/\",\":ds-test/=node_modules/ds-test/src/\",\":forge-std/=node_modules/forge-std/src/\"]},\"sources\":{\"contracts/L1/L1CrossDomainMessenger.sol\":{\"keccak256\":\"0x27de6ce0b237f70993cd99399e1d0d2ead91b4d39928e9ed57e9cb266ef1dd15\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://266212ced64456a77498eb512b648d14ff32f50ae155045ce604ba40bdfe50e6\",\"dweb:/ipfs/QmceV6DeDTYaDFjGuaTzmRcSkKQtBpAHYNEriANeYarUx7\"]},\"contracts/L1/L1ERC721Bridge.sol\":{\"keccak256\":\"0xb0ce6bbd7f6ddbe6349ad473f41e1b896db3a24cd21bf75b13f98c468a96ea10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bbe4982d036115d1390b62a93f85b0d5c76bc05df11f0e0b403b3564f6fa97dd\",\"dweb:/ipfs/QmdCpwwWqo6fD2RZAnwQysmHDHrRJmcuAB4sKYBeCzyJvr\"]},\"contracts/L1/L1StandardBridge.sol\":{\"keccak256\":\"0x9d880fe039fd55e268b52e41a579f2636d8f5dee5e830fca1f5a171b124b449f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://59c0fcf7eb68b6e640a8339cf607f51148d607d09841f428f25a3708dbc00b8b\",\"dweb:/ipfs/QmNsuuzMBQdmkHFv5Xwn2HQ2gfRDceNZv96Jpu3PDSotQh\"]},\"contracts/L1/L2OutputOracle.sol\":{\"keccak256\":\"0x4d2ba3903b49bd7579d70a6438cf1db4218a3f1241587f485396e0aac9cb4d95\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d0a74402435300c2f146b3f9d34c0fb3649b88feb60e2218165a0ebcf9c34e5\",\"dweb:/ipfs/QmbLa1PLV81xkfHsEK4HYzzcX4W3zhrXZbDaEjXsptTNby\"]},\"contracts/L1/MantlePortal.sol\":{\"keccak256\":\"0x90d4a0a0e2abe448d56105af7d3be34b6617c9944e077c7966f017bbd0e4556c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f974aae74cd7b843d1d66388c248e275f3cedabcb3bcdf6c970b318fe44153d1\",\"dweb:/ipfs/QmdXHb6aLuogDAQJiWgt29zkFHja4bfv65RRdYRMKKNucb\"]},\"contracts/L1/ResourceMetering.sol\":{\"keccak256\":\"0xdabbb6aac12331e465bf143cf5256f96257c29eda3481341ba171662b164f554\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bd546ed3f4e4ddcebc59833cb24b70e54613036af96270aa314dfce2cf5008c\",\"dweb:/ipfs/Qme8WabXvuuxMCFiWrjKsXDzjqCmJ1SJyNorvbnWMAXVQj\"]},\"contracts/L2/L2CrossDomainMessenger.sol\":{\"keccak256\":\"0x1000ef35db9886909bc8059e9891e6d1bf9dda410c7e76f33fbbc43bf2f430c8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c5502e1b4794426101c2562a628ec311361920addc438190838c22d1ee69967\",\"dweb:/ipfs/QmPF7HqGZASNzt5QxwjCbPHnB7LbBT37ei2PMUVkCe56Vg\"]},\"contracts/L2/L2ERC721Bridge.sol\":{\"keccak256\":\"0x573bcc72c8785138fc9ff8ff44d9ecc2d5d3d5bbd92c02622bc552d9b894eb82\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://81ab9d2b918ebb36aaee5da7bd8a07c33be6882404aa29136a3e50a64211542a\",\"dweb:/ipfs/QmYpUsffLxvBxEKD81EUhAs427yfrtarEDPT9e6mzJZChH\"]},\"contracts/L2/L2StandardBridge.sol\":{\"keccak256\":\"0x32993218778b2799c2a29f1f85fb53349f5172d77ba52675a2279c8282c1cf5d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4cf2629297d832dffa8b0201186f563f2f5676bdcc9537729b02657e5016e9f\",\"dweb:/ipfs/QmXSZgQRbmsT6hpxjqZTakbA6rQS8YaNtznqPtGGxzZETX\"]},\"contracts/L2/L2ToL1MessagePasser.sol\":{\"keccak256\":\"0xa385bda91d75c44f6d8b0bc5a61e1904ed455d98c07b308910ac1265e6536df1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dcbaab318b084e163992187aa87f9250782982c10d69be9e11959090e02cc912\",\"dweb:/ipfs/QmY81HgBPp4vcMigSbWQ8mDizXCQFvjN52BF7nGPc6f9Fm\"]},\"contracts/legacy/AddressManager.sol\":{\"keccak256\":\"0x1554e4da3af37bb795b99382aab7b17f790690480e1f81c0ea9603071678cd57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c1f67dc583d4737f4cda9d5197c8830cb5f4c0516624a7d7330e4e4ce6249407\",\"dweb:/ipfs/QmQZXHr6X9sF3byKvB3H83xCnvp7B4yqvVSFNo1E2XXwJj\"]},\"contracts/legacy/L1ChugSplashProxy.sol\":{\"keccak256\":\"0x6ae7bf6ea9ac0e3511ee4cb15d946589da0dd35098ff762c0b2903d064f24875\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://02028d86c1d38563021d5ead5282271ccdf1c03a24f2eaee056ae2157f0554ee\",\"dweb:/ipfs/QmW9urkBBRTmZ8FjL5Y5zWbdnRhPDruxCCLnpr2CTkozKM\"]},\"contracts/legacy/LegacyERC20ETH.sol\":{\"keccak256\":\"0x6fb98f8a958de64088b7220dbc4305544a3528ba7c3dd07aeb07584f3c5af4a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3b223c3d500c070dd6e355e76d4dda559513e179bca952e307b840897629eb6\",\"dweb:/ipfs/QmdnLcT4ps7LQ22VP3RrX1gCooW77pMMFS5hPq1W6Y6JSp\"]},\"contracts/legacy/ResolvedDelegateProxy.sol\":{\"keccak256\":\"0x90384a255dce9cff8c8785fa8bda804c80ebc64bc885a8de7f282134feec578f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88272d1373bf897167d68be8aa91598090bc4663e10a636314ed5bed0038af12\",\"dweb:/ipfs/QmWbUTaRGT4zhuYh1MECg8pRdJ2S9AdoCPFUxKEp63xGJn\"]},\"contracts/libraries/Arithmetic.sol\":{\"keccak256\":\"0xc8858039f87e48e6f18c1af8bc0b03e57cfef564acddfd06e4d91e3db7ac5ed6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fc79af1e844aa6dc1c68067bfe1d359df8d4e9a3e8881afb3bcfcbf68071714\",\"dweb:/ipfs/QmcNC4k8zmvwj4kZizSenTiWbx2DJQPbwqXXLF4iMbkRVD\"]},\"contracts/libraries/Burn.sol\":{\"keccak256\":\"0x54233b226ba6919dc46d438bc790108d8f855001002a1b9c3c37aed7a83e5f3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4051a4baca357a9191a6c9e3aa1593a17b69dd7915966e23e4cb269e9c1d9ed4\",\"dweb:/ipfs/QmadKjGKvxm53abVHQdsxrXBc8e9jXywu6vvhkAgjsx59J\"]},\"contracts/libraries/Bytes.sol\":{\"keccak256\":\"0x7aca6593fadf438ee9cd090d8fdc8f94a5202a2eb7f764c9a86f207712d87a48\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aac32157885c5a08bd0bc7dcd5511f66db12bb20d0c263dd7be9f58b91538fc1\",\"dweb:/ipfs/Qmb1iG11Z53yt9wNbGsuTvoydJXFosDDpWwRSADKyqiCjw\"]},\"contracts/libraries/Constants.sol\":{\"keccak256\":\"0x09a0d1616d822d77142123e6d1262be7ee71ee840e6022f75a4aa0c508659a99\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7bfbb81c230c0032a4d1c3e37b32708e82523c53b7b3b0df5558335c5c0949ee\",\"dweb:/ipfs/QmcRoHQTRxEbbngT1o9yPC5FfQiqqH8P1nTAB7RzgQbKVj\"]},\"contracts/libraries/Encoding.sol\":{\"keccak256\":\"0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b\",\"dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM\"]},\"contracts/libraries/Hashing.sol\":{\"keccak256\":\"0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0\",\"dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X\"]},\"contracts/libraries/Predeploys.sol\":{\"keccak256\":\"0x7e3206b5b47978d7fab230fc46c3a868466ecb4744feeee9aaff159de1e4c605\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c74edb3e68a84a4acc96ce3981ada0c9c7768d6c8d40e783b3b0d41a53e7f041\",\"dweb:/ipfs/QmcbhLFHv9ZgqsCpDUU18oYevrqynJjnp3cqJ1h9MR8y6K\"]},\"contracts/libraries/SafeCall.sol\":{\"keccak256\":\"0xbb0621c028c18e9d5a54cf1a8136cf2e77f161de48aeb8d911e230f6b280c9ed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://924ecc629c7642bc19e2f8a390f1b946d22862c8889453da681b5bc1a45d7703\",\"dweb:/ipfs/QmbNknQ8pzssXDXGVjXxzZ8zh1YnNCWtRJVepiM1TnqoqQ\"]},\"contracts/libraries/Types.sol\":{\"keccak256\":\"0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef\",\"dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF\"]},\"contracts/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0x50763c897f0fe84cb067985ec4d7c5721ce9004a69cf0327f96f8982ee8ca412\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://603af847b43933b075f9aac3a7b3cd65041ffe6d732826695458ca9575e1a809\",\"dweb:/ipfs/QmfByFEaCxT9y1VtqoLi5EsXZ9ihkPfj6g5x7pcPoQ7q2K\"]},\"contracts/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0\",\"dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio\"]},\"contracts/libraries/trie/MerkleTrie.sol\":{\"keccak256\":\"0xd27fc945d6dd2821636d840f3766f817823c8e9fbfdb87c2da7c73e4292d2f7f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://497cec37d09ebcdc8d1cccac608a4a0b9b9d83eac6cc7c9e8b73c4c6644e2209\",\"dweb:/ipfs/QmUYMsCcgU6epspvKV9Y6anHyyMb4hd1xVzUZheBY9mfG7\"]},\"contracts/libraries/trie/SecureMerkleTrie.sol\":{\"keccak256\":\"0x61b03a03779cb1f75cea3b88af16fdfd10629029b4b2d6be5238e71af8ef1b5f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1212951af291c0e033a7119b42de5cad6b6bf32da26777da7c2419e76fa8f314\",\"dweb:/ipfs/QmYbnifDmL6UkP9D1X9GaNLR1Q8wYwmDNeYqkJ71bycaE5\"]},\"contracts/test/CommonTest.t.sol\":{\"keccak256\":\"0xe03e1163453a4a7a55061f066fcfe254e06d06f8e7af171838dd55e449796db0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0c24ede58d34dbd9299455cb43dfbe72bc313589203da98a509d8d97a4a08ed2\",\"dweb:/ipfs/QmYaEo34SkBNzikASsPgQREAoZmzo5BMKoyxH47Ldrc1Kj\"]},\"contracts/test/ResourceMetering.t.sol\":{\"keccak256\":\"0x8fef4a8b4e3febe64ae57faf90ad2f26cdd71ec0ec0facf578b755c2b15a23dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://223c05bd52bb23214815266ef005973241891933c83a8f5da61e1fbd103c961f\",\"dweb:/ipfs/QmS6oXaNcxamn9iP1CfmD6xhmofEC9pJhJc97UnytVcttc\"]},\"contracts/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x3d8194c9e05aea4a9cefa1833ab4f3e95749b685ccf9a04719d235cac2fa3774\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c0043e95acd7c29de3836e98cdcc4292eef201e3ebfab2d768bcfe47f800df8d\",\"dweb:/ipfs/QmTZNQVBdodruQ2x38nhERY9DFjU9oEFU21j5Atf7HUi3U\"]},\"contracts/universal/ERC721Bridge.sol\":{\"keccak256\":\"0x6032381b640db519322fe9887ff40b973cfd9275d93349e7a41f3b4148ecc2e2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35d0ab2448a3df9f86cd0169a3b46fe186e0763695b7d064793009c94cbc9f6e\",\"dweb:/ipfs/QmdZRdX7vTYfjbsKm6QkP5RPMYcWhrxWWb4wZuquE9LFEh\"]},\"contracts/universal/IMantleMintableERC20.sol\":{\"keccak256\":\"0xdc156dcecc45f6a3d4e43ebf32ada4e138b10ba54bd14486a3e5ac245f1fec56\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ae5d3252cb0620ce50c7d3f24ad31a1e7f0f327bfcabde2c91edc917d9e2595e\",\"dweb:/ipfs/QmSJzMvdZRgTeGK9dvm9W1EAPMmzhmNMF9TEBGqDC5E5ve\"]},\"contracts/universal/IMantleMintableERC721.sol\":{\"keccak256\":\"0xf4aa6e62f36052985f3c191794edb8d0eef5bc3b169d5c4dc0de644d0c60b6e8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40f8608d2b87db614e41f394c61c2522f4118aabe85b8b2f77f90801bb0334de\",\"dweb:/ipfs/QmXwtsm92KXshL1HP5KZs9yk7je8gTQQaJpAbUEWBYys8s\"]},\"contracts/universal/MantleMintableERC20.sol\":{\"keccak256\":\"0xbae1a4767d3274d9e591264c0fa1e924dae72809191a96d39becd3fc0340d09c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://65dc69f7a27052ed082008268e5125ba1d97729db446a498d754baa0d13364d4\",\"dweb:/ipfs/QmUVUppu1N4zxk7CgxrH6xSccjYm7cdyX6YPhAmFZ9rhRz\"]},\"contracts/universal/MantleMintableERC20Factory.sol\":{\"keccak256\":\"0x2ea0884e8539675ff67deadea946f0010dc7d7228bdf2c88fd67cf9dc75886d0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b61c4299c64029f945823993f2a21f3b8cf84cc8b5707701c2449f4889a2e2bf\",\"dweb:/ipfs/QmahAJHa9kKG6Hgwh4cFt9r9FZhQoDPcPJBULUnqQbEF7e\"]},\"contracts/universal/MantleMintableERC721.sol\":{\"keccak256\":\"0xdf1ad9ca80e6fc61ca8433c4a081dc615640b13f0df726046add5d337d76bfdf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1690d75ef3f1552c9a1e3bbc5d51af8d01432500309470f2faeff8b7b263bd89\",\"dweb:/ipfs/QmVv9pkuAiuLDJocDYAnq4H4xyFx1wyr4ckYC67chTVgY9\"]},\"contracts/universal/MantleMintableERC721Factory.sol\":{\"keccak256\":\"0xf63245a6382fbf5bf76058d5eae06e2163e6e0ff09c593c062f6cdb0006f02b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ace75f68498e7c1fb904673bd66534ec717735caf61b64fefc06a8102e517c\",\"dweb:/ipfs/Qmd9oWjtKww1hvepq6A9RLEEqiv4DcBYPtceQB1r5sDGkV\"]},\"contracts/universal/Proxy.sol\":{\"keccak256\":\"0xfa08635f1866139673ac4fe7b07330f752f93800075b895d8fcb8484f4a3f753\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8f2247604d527f560edbb851c43b6c16b37e34972ddb305e16dd73623b8288cd\",\"dweb:/ipfs/QmfM8sLAZrxrnqyRdt1XJ5LyJh4wKbeEqk3VkvxG7BDqFj\"]},\"contracts/universal/Semver.sol\":{\"keccak256\":\"0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e\",\"dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m\"]},\"contracts/universal/StandardBridge.sol\":{\"keccak256\":\"0xd2ec8c4171f48c47216fdf3e9f58f2b95e9fdcc54f35609ed06195a5f92ea99c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ed3b1e5ca6d032a55fc44f7ed75d205f29833a25526b39635d9a61d72f69346\",\"dweb:/ipfs/QmTCwfHuZUFiLKCHnfjn3gkjSCGiqY8WSSeha173RcuRYy\"]},\"contracts/vendor/AddressAliasHelper.sol\":{\"keccak256\":\"0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88\",\"dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR\"]},\"node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol\":{\"keccak256\":\"0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768\",\"dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol\":{\"keccak256\":\"0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34\",\"dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR\"]},\"node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"node_modules/@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"node_modules/@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"node_modules/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"node_modules/ds-test/src/test.sol\":{\"keccak256\":\"0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5\",\"dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr\"]},\"node_modules/forge-std/src/Base.sol\":{\"keccak256\":\"0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363\",\"dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre\"]},\"node_modules/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x96a9fd8c9f51ab9b6efa5c805cc3398a96d25d8c7df77829a2fadeba0db789b7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://58fb1733f2eef8757add780af103975eebe17000ce0686529651bc03fab42be9\",\"dweb:/ipfs/QmXW67BtctfWpaaXJ6UmU7yvNLdeZtmCGYh5ZBRXL6Akf6\"]},\"node_modules/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17\",\"dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah\"]},\"node_modules/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4\",\"dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd\"]},\"node_modules/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"node_modules/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"node_modules/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"node_modules/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"node_modules/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"node_modules/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c\",\"dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4\"]},\"node_modules/forge-std/src/Test.sol\":{\"keccak256\":\"0x8134c22af343e12f0ee5c565a2eb0d8a5472da7f499abac7b519f634a69c7c4d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1552599c06a879f4938e14b1fd1e4a4a7eda097b1c984ce0a9cbca33ea64f7d6\",\"dweb:/ipfs/QmNxyLpvNX3woGMHJAQGz89dzRsMFaxT38ZmtgPVMG2DLD\"]},\"node_modules/forge-std/src/Vm.sol\":{\"keccak256\":\"0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10\",\"dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu\"]},\"node_modules/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"node_modules/forge-std/src/console2.sol\":{\"keccak256\":\"0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88\",\"dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW\"]},\"node_modules/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "opaqueData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransactionDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_amount",
              "type": "uint64"
            },
            {
              "internalType": "uint256",
              "name": "_blockDiff",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testFuzz_meter_largeBlockDiff_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_meter_initialResourceParams_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_meter_updateNoGasDelta_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_meter_updateOneEmptyBlock_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_meter_updateParamsNoChange_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_meter_updateTenEmptyBlocks_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_meter_updateTwoEmptyBlocks_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_meter_useMax_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_meter_useMoreThanMax_reverts"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin/=node_modules/@openzeppelin/",
        ":@openzeppelin/contracts-upgradeable/=node_modules/@openzeppelin/contracts-upgradeable/",
        ":@openzeppelin/contracts/=node_modules/@openzeppelin/contracts/",
        ":@rari-capital/=node_modules/@rari-capital/",
        ":@rari-capital/solmate/=node_modules/@rari-capital/solmate/",
        ":ds-test/=node_modules/ds-test/src/",
        ":forge-std/=node_modules/forge-std/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "contracts/test/ResourceMetering.t.sol": "ResourceMetering_Test"
      },
      "libraries": {}
    },
    "sources": {
      "contracts/L1/L1CrossDomainMessenger.sol": {
        "keccak256": "0x27de6ce0b237f70993cd99399e1d0d2ead91b4d39928e9ed57e9cb266ef1dd15",
        "urls": [
          "bzz-raw://266212ced64456a77498eb512b648d14ff32f50ae155045ce604ba40bdfe50e6",
          "dweb:/ipfs/QmceV6DeDTYaDFjGuaTzmRcSkKQtBpAHYNEriANeYarUx7"
        ],
        "license": "MIT"
      },
      "contracts/L1/L1ERC721Bridge.sol": {
        "keccak256": "0xb0ce6bbd7f6ddbe6349ad473f41e1b896db3a24cd21bf75b13f98c468a96ea10",
        "urls": [
          "bzz-raw://bbe4982d036115d1390b62a93f85b0d5c76bc05df11f0e0b403b3564f6fa97dd",
          "dweb:/ipfs/QmdCpwwWqo6fD2RZAnwQysmHDHrRJmcuAB4sKYBeCzyJvr"
        ],
        "license": "MIT"
      },
      "contracts/L1/L1StandardBridge.sol": {
        "keccak256": "0x9d880fe039fd55e268b52e41a579f2636d8f5dee5e830fca1f5a171b124b449f",
        "urls": [
          "bzz-raw://59c0fcf7eb68b6e640a8339cf607f51148d607d09841f428f25a3708dbc00b8b",
          "dweb:/ipfs/QmNsuuzMBQdmkHFv5Xwn2HQ2gfRDceNZv96Jpu3PDSotQh"
        ],
        "license": "MIT"
      },
      "contracts/L1/L2OutputOracle.sol": {
        "keccak256": "0x4d2ba3903b49bd7579d70a6438cf1db4218a3f1241587f485396e0aac9cb4d95",
        "urls": [
          "bzz-raw://6d0a74402435300c2f146b3f9d34c0fb3649b88feb60e2218165a0ebcf9c34e5",
          "dweb:/ipfs/QmbLa1PLV81xkfHsEK4HYzzcX4W3zhrXZbDaEjXsptTNby"
        ],
        "license": "MIT"
      },
      "contracts/L1/MantlePortal.sol": {
        "keccak256": "0x90d4a0a0e2abe448d56105af7d3be34b6617c9944e077c7966f017bbd0e4556c",
        "urls": [
          "bzz-raw://f974aae74cd7b843d1d66388c248e275f3cedabcb3bcdf6c970b318fe44153d1",
          "dweb:/ipfs/QmdXHb6aLuogDAQJiWgt29zkFHja4bfv65RRdYRMKKNucb"
        ],
        "license": "MIT"
      },
      "contracts/L1/ResourceMetering.sol": {
        "keccak256": "0xdabbb6aac12331e465bf143cf5256f96257c29eda3481341ba171662b164f554",
        "urls": [
          "bzz-raw://3bd546ed3f4e4ddcebc59833cb24b70e54613036af96270aa314dfce2cf5008c",
          "dweb:/ipfs/Qme8WabXvuuxMCFiWrjKsXDzjqCmJ1SJyNorvbnWMAXVQj"
        ],
        "license": "MIT"
      },
      "contracts/L2/L2CrossDomainMessenger.sol": {
        "keccak256": "0x1000ef35db9886909bc8059e9891e6d1bf9dda410c7e76f33fbbc43bf2f430c8",
        "urls": [
          "bzz-raw://0c5502e1b4794426101c2562a628ec311361920addc438190838c22d1ee69967",
          "dweb:/ipfs/QmPF7HqGZASNzt5QxwjCbPHnB7LbBT37ei2PMUVkCe56Vg"
        ],
        "license": "MIT"
      },
      "contracts/L2/L2ERC721Bridge.sol": {
        "keccak256": "0x573bcc72c8785138fc9ff8ff44d9ecc2d5d3d5bbd92c02622bc552d9b894eb82",
        "urls": [
          "bzz-raw://81ab9d2b918ebb36aaee5da7bd8a07c33be6882404aa29136a3e50a64211542a",
          "dweb:/ipfs/QmYpUsffLxvBxEKD81EUhAs427yfrtarEDPT9e6mzJZChH"
        ],
        "license": "MIT"
      },
      "contracts/L2/L2StandardBridge.sol": {
        "keccak256": "0x32993218778b2799c2a29f1f85fb53349f5172d77ba52675a2279c8282c1cf5d",
        "urls": [
          "bzz-raw://a4cf2629297d832dffa8b0201186f563f2f5676bdcc9537729b02657e5016e9f",
          "dweb:/ipfs/QmXSZgQRbmsT6hpxjqZTakbA6rQS8YaNtznqPtGGxzZETX"
        ],
        "license": "MIT"
      },
      "contracts/L2/L2ToL1MessagePasser.sol": {
        "keccak256": "0xa385bda91d75c44f6d8b0bc5a61e1904ed455d98c07b308910ac1265e6536df1",
        "urls": [
          "bzz-raw://dcbaab318b084e163992187aa87f9250782982c10d69be9e11959090e02cc912",
          "dweb:/ipfs/QmY81HgBPp4vcMigSbWQ8mDizXCQFvjN52BF7nGPc6f9Fm"
        ],
        "license": "MIT"
      },
      "contracts/legacy/AddressManager.sol": {
        "keccak256": "0x1554e4da3af37bb795b99382aab7b17f790690480e1f81c0ea9603071678cd57",
        "urls": [
          "bzz-raw://c1f67dc583d4737f4cda9d5197c8830cb5f4c0516624a7d7330e4e4ce6249407",
          "dweb:/ipfs/QmQZXHr6X9sF3byKvB3H83xCnvp7B4yqvVSFNo1E2XXwJj"
        ],
        "license": "MIT"
      },
      "contracts/legacy/L1ChugSplashProxy.sol": {
        "keccak256": "0x6ae7bf6ea9ac0e3511ee4cb15d946589da0dd35098ff762c0b2903d064f24875",
        "urls": [
          "bzz-raw://02028d86c1d38563021d5ead5282271ccdf1c03a24f2eaee056ae2157f0554ee",
          "dweb:/ipfs/QmW9urkBBRTmZ8FjL5Y5zWbdnRhPDruxCCLnpr2CTkozKM"
        ],
        "license": "MIT"
      },
      "contracts/legacy/LegacyERC20ETH.sol": {
        "keccak256": "0x6fb98f8a958de64088b7220dbc4305544a3528ba7c3dd07aeb07584f3c5af4a0",
        "urls": [
          "bzz-raw://c3b223c3d500c070dd6e355e76d4dda559513e179bca952e307b840897629eb6",
          "dweb:/ipfs/QmdnLcT4ps7LQ22VP3RrX1gCooW77pMMFS5hPq1W6Y6JSp"
        ],
        "license": "MIT"
      },
      "contracts/legacy/ResolvedDelegateProxy.sol": {
        "keccak256": "0x90384a255dce9cff8c8785fa8bda804c80ebc64bc885a8de7f282134feec578f",
        "urls": [
          "bzz-raw://88272d1373bf897167d68be8aa91598090bc4663e10a636314ed5bed0038af12",
          "dweb:/ipfs/QmWbUTaRGT4zhuYh1MECg8pRdJ2S9AdoCPFUxKEp63xGJn"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Arithmetic.sol": {
        "keccak256": "0xc8858039f87e48e6f18c1af8bc0b03e57cfef564acddfd06e4d91e3db7ac5ed6",
        "urls": [
          "bzz-raw://2fc79af1e844aa6dc1c68067bfe1d359df8d4e9a3e8881afb3bcfcbf68071714",
          "dweb:/ipfs/QmcNC4k8zmvwj4kZizSenTiWbx2DJQPbwqXXLF4iMbkRVD"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Burn.sol": {
        "keccak256": "0x54233b226ba6919dc46d438bc790108d8f855001002a1b9c3c37aed7a83e5f3f",
        "urls": [
          "bzz-raw://4051a4baca357a9191a6c9e3aa1593a17b69dd7915966e23e4cb269e9c1d9ed4",
          "dweb:/ipfs/QmadKjGKvxm53abVHQdsxrXBc8e9jXywu6vvhkAgjsx59J"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Bytes.sol": {
        "keccak256": "0x7aca6593fadf438ee9cd090d8fdc8f94a5202a2eb7f764c9a86f207712d87a48",
        "urls": [
          "bzz-raw://aac32157885c5a08bd0bc7dcd5511f66db12bb20d0c263dd7be9f58b91538fc1",
          "dweb:/ipfs/Qmb1iG11Z53yt9wNbGsuTvoydJXFosDDpWwRSADKyqiCjw"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Constants.sol": {
        "keccak256": "0x09a0d1616d822d77142123e6d1262be7ee71ee840e6022f75a4aa0c508659a99",
        "urls": [
          "bzz-raw://7bfbb81c230c0032a4d1c3e37b32708e82523c53b7b3b0df5558335c5c0949ee",
          "dweb:/ipfs/QmcRoHQTRxEbbngT1o9yPC5FfQiqqH8P1nTAB7RzgQbKVj"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Encoding.sol": {
        "keccak256": "0x341bfb4dd8b2edde503761b616c9c0cab8610bf39e5891a3128d5407ff71c018",
        "urls": [
          "bzz-raw://27235becbd89ee303dd0b2c5489d73430371b31c8bfc62c303a5bc7f4318198b",
          "dweb:/ipfs/QmZyuPiDmXin8HHYN5BvfK76EHRPVUSehB1Sd8STpscDMM"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Hashing.sol": {
        "keccak256": "0x72f50fa349759f9dba30784c77cae2682ec441773f209e569d6810ebc634251c",
        "urls": [
          "bzz-raw://12651105767d692acd425c573bc4c22ec798a0052e00244d82b47ba4a20b44c0",
          "dweb:/ipfs/QmQF7XM8cWRkBhWRbj11Mkrd1s5YdGYdUjTMkitRBahP6X"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Predeploys.sol": {
        "keccak256": "0x7e3206b5b47978d7fab230fc46c3a868466ecb4744feeee9aaff159de1e4c605",
        "urls": [
          "bzz-raw://c74edb3e68a84a4acc96ce3981ada0c9c7768d6c8d40e783b3b0d41a53e7f041",
          "dweb:/ipfs/QmcbhLFHv9ZgqsCpDUU18oYevrqynJjnp3cqJ1h9MR8y6K"
        ],
        "license": "MIT"
      },
      "contracts/libraries/SafeCall.sol": {
        "keccak256": "0xbb0621c028c18e9d5a54cf1a8136cf2e77f161de48aeb8d911e230f6b280c9ed",
        "urls": [
          "bzz-raw://924ecc629c7642bc19e2f8a390f1b946d22862c8889453da681b5bc1a45d7703",
          "dweb:/ipfs/QmbNknQ8pzssXDXGVjXxzZ8zh1YnNCWtRJVepiM1TnqoqQ"
        ],
        "license": "MIT"
      },
      "contracts/libraries/Types.sol": {
        "keccak256": "0x54edbe0a15a54574fb24f32ac58afc6d991f017611438ee450cf459f947b041a",
        "urls": [
          "bzz-raw://7c767f758b6575481dd9aebc8727d7b2521aa032979f34bf581c72fe71d3a3ef",
          "dweb:/ipfs/QmRURQkgaSi9LAqEwnunHsdmmn3ScNuGwfK9W4J5mw3uMF"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPReader.sol": {
        "keccak256": "0x50763c897f0fe84cb067985ec4d7c5721ce9004a69cf0327f96f8982ee8ca412",
        "urls": [
          "bzz-raw://603af847b43933b075f9aac3a7b3cd65041ffe6d732826695458ca9575e1a809",
          "dweb:/ipfs/QmfByFEaCxT9y1VtqoLi5EsXZ9ihkPfj6g5x7pcPoQ7q2K"
        ],
        "license": "MIT"
      },
      "contracts/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x5aa9d21c5b41c9786f23153f819d561ae809a1d55c7b0d423dfeafdfbacedc78",
        "urls": [
          "bzz-raw://921c44e6a0982b9a4011900fda1bda2c06b7a85894967de98b407a83fe9f90c0",
          "dweb:/ipfs/QmSsHLKDUQ82kpKdqB6VntVGKuPDb4W9VdotsubuqWBzio"
        ],
        "license": "MIT"
      },
      "contracts/libraries/trie/MerkleTrie.sol": {
        "keccak256": "0xd27fc945d6dd2821636d840f3766f817823c8e9fbfdb87c2da7c73e4292d2f7f",
        "urls": [
          "bzz-raw://497cec37d09ebcdc8d1cccac608a4a0b9b9d83eac6cc7c9e8b73c4c6644e2209",
          "dweb:/ipfs/QmUYMsCcgU6epspvKV9Y6anHyyMb4hd1xVzUZheBY9mfG7"
        ],
        "license": "MIT"
      },
      "contracts/libraries/trie/SecureMerkleTrie.sol": {
        "keccak256": "0x61b03a03779cb1f75cea3b88af16fdfd10629029b4b2d6be5238e71af8ef1b5f",
        "urls": [
          "bzz-raw://1212951af291c0e033a7119b42de5cad6b6bf32da26777da7c2419e76fa8f314",
          "dweb:/ipfs/QmYbnifDmL6UkP9D1X9GaNLR1Q8wYwmDNeYqkJ71bycaE5"
        ],
        "license": "MIT"
      },
      "contracts/test/CommonTest.t.sol": {
        "keccak256": "0xe03e1163453a4a7a55061f066fcfe254e06d06f8e7af171838dd55e449796db0",
        "urls": [
          "bzz-raw://0c24ede58d34dbd9299455cb43dfbe72bc313589203da98a509d8d97a4a08ed2",
          "dweb:/ipfs/QmYaEo34SkBNzikASsPgQREAoZmzo5BMKoyxH47Ldrc1Kj"
        ],
        "license": "MIT"
      },
      "contracts/test/ResourceMetering.t.sol": {
        "keccak256": "0x8fef4a8b4e3febe64ae57faf90ad2f26cdd71ec0ec0facf578b755c2b15a23dc",
        "urls": [
          "bzz-raw://223c05bd52bb23214815266ef005973241891933c83a8f5da61e1fbd103c961f",
          "dweb:/ipfs/QmS6oXaNcxamn9iP1CfmD6xhmofEC9pJhJc97UnytVcttc"
        ],
        "license": "MIT"
      },
      "contracts/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x3d8194c9e05aea4a9cefa1833ab4f3e95749b685ccf9a04719d235cac2fa3774",
        "urls": [
          "bzz-raw://c0043e95acd7c29de3836e98cdcc4292eef201e3ebfab2d768bcfe47f800df8d",
          "dweb:/ipfs/QmTZNQVBdodruQ2x38nhERY9DFjU9oEFU21j5Atf7HUi3U"
        ],
        "license": "MIT"
      },
      "contracts/universal/ERC721Bridge.sol": {
        "keccak256": "0x6032381b640db519322fe9887ff40b973cfd9275d93349e7a41f3b4148ecc2e2",
        "urls": [
          "bzz-raw://35d0ab2448a3df9f86cd0169a3b46fe186e0763695b7d064793009c94cbc9f6e",
          "dweb:/ipfs/QmdZRdX7vTYfjbsKm6QkP5RPMYcWhrxWWb4wZuquE9LFEh"
        ],
        "license": "MIT"
      },
      "contracts/universal/IMantleMintableERC20.sol": {
        "keccak256": "0xdc156dcecc45f6a3d4e43ebf32ada4e138b10ba54bd14486a3e5ac245f1fec56",
        "urls": [
          "bzz-raw://ae5d3252cb0620ce50c7d3f24ad31a1e7f0f327bfcabde2c91edc917d9e2595e",
          "dweb:/ipfs/QmSJzMvdZRgTeGK9dvm9W1EAPMmzhmNMF9TEBGqDC5E5ve"
        ],
        "license": "MIT"
      },
      "contracts/universal/IMantleMintableERC721.sol": {
        "keccak256": "0xf4aa6e62f36052985f3c191794edb8d0eef5bc3b169d5c4dc0de644d0c60b6e8",
        "urls": [
          "bzz-raw://40f8608d2b87db614e41f394c61c2522f4118aabe85b8b2f77f90801bb0334de",
          "dweb:/ipfs/QmXwtsm92KXshL1HP5KZs9yk7je8gTQQaJpAbUEWBYys8s"
        ],
        "license": "MIT"
      },
      "contracts/universal/MantleMintableERC20.sol": {
        "keccak256": "0xbae1a4767d3274d9e591264c0fa1e924dae72809191a96d39becd3fc0340d09c",
        "urls": [
          "bzz-raw://65dc69f7a27052ed082008268e5125ba1d97729db446a498d754baa0d13364d4",
          "dweb:/ipfs/QmUVUppu1N4zxk7CgxrH6xSccjYm7cdyX6YPhAmFZ9rhRz"
        ],
        "license": "MIT"
      },
      "contracts/universal/MantleMintableERC20Factory.sol": {
        "keccak256": "0x2ea0884e8539675ff67deadea946f0010dc7d7228bdf2c88fd67cf9dc75886d0",
        "urls": [
          "bzz-raw://b61c4299c64029f945823993f2a21f3b8cf84cc8b5707701c2449f4889a2e2bf",
          "dweb:/ipfs/QmahAJHa9kKG6Hgwh4cFt9r9FZhQoDPcPJBULUnqQbEF7e"
        ],
        "license": "MIT"
      },
      "contracts/universal/MantleMintableERC721.sol": {
        "keccak256": "0xdf1ad9ca80e6fc61ca8433c4a081dc615640b13f0df726046add5d337d76bfdf",
        "urls": [
          "bzz-raw://1690d75ef3f1552c9a1e3bbc5d51af8d01432500309470f2faeff8b7b263bd89",
          "dweb:/ipfs/QmVv9pkuAiuLDJocDYAnq4H4xyFx1wyr4ckYC67chTVgY9"
        ],
        "license": "MIT"
      },
      "contracts/universal/MantleMintableERC721Factory.sol": {
        "keccak256": "0xf63245a6382fbf5bf76058d5eae06e2163e6e0ff09c593c062f6cdb0006f02b7",
        "urls": [
          "bzz-raw://92ace75f68498e7c1fb904673bd66534ec717735caf61b64fefc06a8102e517c",
          "dweb:/ipfs/Qmd9oWjtKww1hvepq6A9RLEEqiv4DcBYPtceQB1r5sDGkV"
        ],
        "license": "MIT"
      },
      "contracts/universal/Proxy.sol": {
        "keccak256": "0xfa08635f1866139673ac4fe7b07330f752f93800075b895d8fcb8484f4a3f753",
        "urls": [
          "bzz-raw://8f2247604d527f560edbb851c43b6c16b37e34972ddb305e16dd73623b8288cd",
          "dweb:/ipfs/QmfM8sLAZrxrnqyRdt1XJ5LyJh4wKbeEqk3VkvxG7BDqFj"
        ],
        "license": "MIT"
      },
      "contracts/universal/Semver.sol": {
        "keccak256": "0x400059d3edb9efc9c23e6fbc18de6710f9235a4ffba4ab23bdb9f825273f093b",
        "urls": [
          "bzz-raw://9baf7797439c0ae6512f4639dfc6a1934dbd4e4d7cbb8e63e99264ff47682c9e",
          "dweb:/ipfs/QmawAuhppPyeoZH3rC1uh87xDELa9Lyfw5pYsBqE8myE1m"
        ],
        "license": "MIT"
      },
      "contracts/universal/StandardBridge.sol": {
        "keccak256": "0xd2ec8c4171f48c47216fdf3e9f58f2b95e9fdcc54f35609ed06195a5f92ea99c",
        "urls": [
          "bzz-raw://0ed3b1e5ca6d032a55fc44f7ed75d205f29833a25526b39635d9a61d72f69346",
          "dweb:/ipfs/QmTCwfHuZUFiLKCHnfjn3gkjSCGiqY8WSSeha173RcuRYy"
        ],
        "license": "MIT"
      },
      "contracts/vendor/AddressAliasHelper.sol": {
        "keccak256": "0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237",
        "urls": [
          "bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88",
          "dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e",
        "urls": [
          "bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea",
          "dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f",
        "urls": [
          "bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f",
          "dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da",
        "urls": [
          "bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708",
          "dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/ERC721Enumerable.sol": {
        "keccak256": "0x0a79511df8151b10b0a0004d6a76ad956582d32824af4c0f4886bdbdfe5746e5",
        "urls": [
          "bzz-raw://afbedcf17f31db719e6fdc56caa8f458799c5fa2eb94cb1e94ef18f89af85768",
          "dweb:/ipfs/QmVmqRdBfbgYThpZSoAJ5o9mnAMjx8mCHHjv3Rh8cQAAg3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Enumerable.sol": {
        "keccak256": "0xd1556954440b31c97a142c6ba07d5cade45f96fafd52091d33a14ebe365aecbf",
        "urls": [
          "bzz-raw://26fef835622b46a5ba08b3ef6b46a22e94b5f285d0f0fb66b703bd30217d2c34",
          "dweb:/ipfs/QmZ548qdwfL1qF7aXz3xh1GCdTiST81kGGuKRqVUfYmPZR"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9",
        "urls": [
          "bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146",
          "dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b",
        "urls": [
          "bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d",
          "dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "node_modules/@openzeppelin/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "node_modules/@rari-capital/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "node_modules/ds-test/src/test.sol": {
        "keccak256": "0xb39cd1d5220cb474947b131e15a4538334b7e886af244b440ae5c9c6bba96a54",
        "urls": [
          "bzz-raw://3101520221449ac0070bda3881311a71d9aa87e5210765e875246922cb5cb5f5",
          "dweb:/ipfs/Qmbg6kAHNoG7ox9N9Xqd9Ere2H2XixMFWFqvyPwFCzB3Gr"
        ],
        "license": "GPL-3.0-or-later"
      },
      "node_modules/forge-std/src/Base.sol": {
        "keccak256": "0x609e3a00319169988cc8272e837f350a9ba77cf8f8f62e4897a8e4a8a5f0fb27",
        "urls": [
          "bzz-raw://b24435e35ba5b080ebd6e8976c23fb735c7212d042be8462ffd2ea50c5250363",
          "dweb:/ipfs/QmPeVvN7FS4oMmCuYAeRdZihTfrG4tA7Vvunuvv59a6wre"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x96a9fd8c9f51ab9b6efa5c805cc3398a96d25d8c7df77829a2fadeba0db789b7",
        "urls": [
          "bzz-raw://58fb1733f2eef8757add780af103975eebe17000ce0686529651bc03fab42be9",
          "dweb:/ipfs/QmXW67BtctfWpaaXJ6UmU7yvNLdeZtmCGYh5ZBRXL6Akf6"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdChains.sol": {
        "keccak256": "0x097b75f7171af89f433407e040d11b22fc26e2fe03793c2cfe18cad390d7af8b",
        "urls": [
          "bzz-raw://19d1dca7b398e517499ffa65ad44df69cdd016f37dc57e2d07d50279d3ddee17",
          "dweb:/ipfs/QmfMFR25367GB5PoBi1KZxWs1hZcJtC3eANiioG3dKj8ah"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdCheats.sol": {
        "keccak256": "0xf6746576912986486f4e5eccdb6b3bbb03e47c4da75a59acc4b1c313b8d31d9f",
        "urls": [
          "bzz-raw://01fd4243d8a85cc7f07b6c5ac9e3f5f38b2443ef82025953c3badb39099fe2e4",
          "dweb:/ipfs/QmVDUyQ3tE4a2b87wJDAkwwyFwRpUPGuy8yJDV9JgHqnrd"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/StdUtils.sol": {
        "keccak256": "0x6584855fecbe5b6a9f8ebdb26b37c58532c5bc5cc6e1737dfa7c8a045087be55",
        "urls": [
          "bzz-raw://40a35a4d292b4fed02e11d5f25fb474f10a7c4eb99f75b5383dc23fcb6e55d3c",
          "dweb:/ipfs/QmYZ2nz1EmNh4xLWf4YybZoa1Da1z3Wq3w4pneMhkouMi4"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Test.sol": {
        "keccak256": "0x8134c22af343e12f0ee5c565a2eb0d8a5472da7f499abac7b519f634a69c7c4d",
        "urls": [
          "bzz-raw://1552599c06a879f4938e14b1fd1e4a4a7eda097b1c984ce0a9cbca33ea64f7d6",
          "dweb:/ipfs/QmNxyLpvNX3woGMHJAQGz89dzRsMFaxT38ZmtgPVMG2DLD"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/Vm.sol": {
        "keccak256": "0x4ba6040f75ea4425c4cf5f77a8ea99f3a7a0fcb5bf13d0186d0952cf505b8203",
        "urls": [
          "bzz-raw://363bd98c4de695b34709e318213b2955d8a493d0249857701c05966c81341b10",
          "dweb:/ipfs/QmdtS71RFemQhq8WYT3WP5UQ4FAsCnaw2JbiPJ3vTUYYRu"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/console2.sol": {
        "keccak256": "0xcd5706f5a7025825d9fd389c89b49bf571f9abaea8a062dc4048320b5b43bf46",
        "urls": [
          "bzz-raw://c066485a7d4bd18d44efb4c89274b0959e8066b9a480383a2ce07d7f31555f88",
          "dweb:/ipfs/QmckeYfA5FtAjcxaytq69Dpj6uY57tbQ61kNPPxXi9kgbW"
        ],
        "license": "MIT"
      },
      "node_modules/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 54213,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 54215,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 57242,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "initialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 57263,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)57258_storage)"
      },
      {
        "astId": 57267,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 57271,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 57274,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 57938,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 59492,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)60912_storage"
      },
      {
        "astId": 59950,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 59953,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 59956,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 59959,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 59962,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 59965,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 59969,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)59947_storage)dyn_storage"
      },
      {
        "astId": 59973,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)59947_storage)dyn_storage"
      },
      {
        "astId": 55967,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)60912_storage"
      },
      {
        "astId": 11102,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "alice",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 11108,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "bob",
        "offset": 0,
        "slot": "28",
        "type": "t_address"
      },
      {
        "astId": 11114,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "multisig",
        "offset": 0,
        "slot": "29",
        "type": "t_address"
      },
      {
        "astId": 11143,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "nonZeroHash",
        "offset": 0,
        "slot": "30",
        "type": "t_bytes32"
      },
      {
        "astId": 11146,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "NON_ZERO_DATA",
        "offset": 0,
        "slot": "31",
        "type": "t_bytes_storage"
      },
      {
        "astId": 11159,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "ffi",
        "offset": 0,
        "slot": "32",
        "type": "t_contract(FFIInterface)13435"
      },
      {
        "astId": 39522,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "meter",
        "offset": 0,
        "slot": "33",
        "type": "t_contract(MeterUser)39517"
      },
      {
        "astId": 39524,
        "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
        "label": "initialBlockNum",
        "offset": 20,
        "slot": "33",
        "type": "t_uint64"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)59947_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)59947_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(FFIInterface)13435": {
        "encoding": "inplace",
        "label": "contract FFIInterface",
        "numberOfBytes": "20"
      },
      "t_contract(MeterUser)39517": {
        "encoding": "inplace",
        "label": "contract MeterUser",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)57258_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)57258_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)57258_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 57251,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 57253,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 57255,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 57257,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)59947_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 59943,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 59946,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)60912_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 60892,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 60900,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 60903,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 60905,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 60907,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 60909,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 60911,
            "contract": "contracts/test/ResourceMetering.t.sol:ResourceMetering_Test",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev"
  },
  "ast": {
    "absolutePath": "contracts/test/ResourceMetering.t.sol",
    "id": 39997,
    "exportedSymbols": {
      "CommonTest": [
        11257
      ],
      "MeterUser": [
        39517
      ],
      "Proxy": [
        44152
      ],
      "ResourceMetering": [
        2148
      ],
      "ResourceMetering_Test": [
        39996
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4632:89",
    "nodes": [
      {
        "id": 39483,
        "nodeType": "PragmaDirective",
        "src": "32:23:89",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 39485,
        "nodeType": "ImportDirective",
        "src": "57:48:89",
        "nodes": [],
        "absolutePath": "contracts/test/CommonTest.t.sol",
        "file": "./CommonTest.t.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39997,
        "sourceUnit": 13590,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39484,
              "name": "CommonTest",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11257,
              "src": "66:10:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39487,
        "nodeType": "ImportDirective",
        "src": "106:62:89",
        "nodes": [],
        "absolutePath": "contracts/L1/ResourceMetering.sol",
        "file": "../L1/ResourceMetering.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39997,
        "sourceUnit": 2149,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39486,
              "name": "ResourceMetering",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2148,
              "src": "115:16:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39489,
        "nodeType": "ImportDirective",
        "src": "169:47:89",
        "nodes": [],
        "absolutePath": "contracts/universal/Proxy.sol",
        "file": "../universal/Proxy.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 39997,
        "sourceUnit": 44153,
        "symbolAliases": [
          {
            "foreign": {
              "id": 39488,
              "name": "Proxy",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 44152,
              "src": "178:5:89",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 39517,
        "nodeType": "ContractDefinition",
        "src": "218:240:89",
        "nodes": [
          {
            "id": 39498,
            "nodeType": "FunctionDefinition",
            "src": "263:43:89",
            "nodes": [],
            "body": {
              "id": 39497,
              "nodeType": "Block",
              "src": "277:29:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39494,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39507,
                      "src": "287:10:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 39495,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "287:12:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39496,
                  "nodeType": "ExpressionStatement",
                  "src": "287:12:89"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 39492,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "274:2:89"
            },
            "returnParameters": {
              "id": 39493,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "277:0:89"
            },
            "scope": 39517,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39507,
            "nodeType": "FunctionDefinition",
            "src": "312:83:89",
            "nodes": [],
            "body": {
              "id": 39506,
              "nodeType": "Block",
              "src": "353:42:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 39503,
                      "name": "__ResourceMetering_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2147,
                      "src": "363:23:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 39504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "363:25:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39505,
                  "nodeType": "ExpressionStatement",
                  "src": "363:25:89"
                }
              ]
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 39501,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39500,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 46281,
                  "src": "341:11:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "341:11:89"
              }
            ],
            "name": "initialize",
            "nameLocation": "321:10:89",
            "parameters": {
              "id": 39499,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "331:2:89"
            },
            "returnParameters": {
              "id": 39502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "353:0:89"
            },
            "scope": 39517,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 39516,
            "nodeType": "FunctionDefinition",
            "src": "401:55:89",
            "nodes": [],
            "body": {
              "id": 39515,
              "nodeType": "Block",
              "src": "454:2:89",
              "nodes": [],
              "statements": []
            },
            "functionSelector": "b4b64fbb",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 39512,
                    "name": "_amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 39509,
                    "src": "445:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 39513,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 39511,
                  "name": "metered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2128,
                  "src": "437:7:89"
                },
                "nodeType": "ModifierInvocation",
                "src": "437:16:89"
              }
            ],
            "name": "use",
            "nameLocation": "410:3:89",
            "parameters": {
              "id": 39510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39509,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "421:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39516,
                  "src": "414:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 39508,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "414:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "413:16:89"
            },
            "returnParameters": {
              "id": 39514,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "454:0:89"
            },
            "scope": 39517,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39490,
              "name": "ResourceMetering",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2148,
              "src": "240:16:89"
            },
            "id": 39491,
            "nodeType": "InheritanceSpecifier",
            "src": "240:16:89"
          }
        ],
        "canonicalName": "MeterUser",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39517,
          2148,
          46361
        ],
        "name": "MeterUser",
        "nameLocation": "227:9:89",
        "scope": 39997,
        "usedErrors": []
      },
      {
        "id": 39996,
        "nodeType": "ContractDefinition",
        "src": "460:4203:89",
        "nodes": [
          {
            "id": 39522,
            "nodeType": "VariableDeclaration",
            "src": "511:24:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "meter",
            "nameLocation": "530:5:89",
            "scope": 39996,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_MeterUser_$39517",
              "typeString": "contract MeterUser"
            },
            "typeName": {
              "id": 39521,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 39520,
                "name": "MeterUser",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 39517,
                "src": "511:9:89"
              },
              "referencedDeclaration": 39517,
              "src": "511:9:89",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MeterUser_$39517",
                "typeString": "contract MeterUser"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39524,
            "nodeType": "VariableDeclaration",
            "src": "541:22:89",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "initialBlockNum",
            "nameLocation": "548:15:89",
            "scope": 39996,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 39523,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "541:6:89",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 39549,
            "nodeType": "FunctionDefinition",
            "src": "570:152:89",
            "nodes": [],
            "body": {
              "id": 39548,
              "nodeType": "Block",
              "src": "611:111:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39528,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "621:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_ResourceMetering_Test_$39996_$",
                          "typeString": "type(contract super ResourceMetering_Test)"
                        }
                      },
                      "id": 39530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setUp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11224,
                      "src": "621:11:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 39531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "621:13:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39532,
                  "nodeType": "ExpressionStatement",
                  "src": "621:13:89"
                },
                {
                  "expression": {
                    "id": 39538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39533,
                      "name": "meter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39522,
                      "src": "644:5:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MeterUser_$39517",
                        "typeString": "contract MeterUser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 39536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "652:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_MeterUser_$39517_$",
                          "typeString": "function () returns (contract MeterUser)"
                        },
                        "typeName": {
                          "id": 39535,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 39534,
                            "name": "MeterUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 39517,
                            "src": "656:9:89"
                          },
                          "referencedDeclaration": 39517,
                          "src": "656:9:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_MeterUser_$39517",
                            "typeString": "contract MeterUser"
                          }
                        }
                      },
                      "id": 39537,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "652:15:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_MeterUser_$39517",
                        "typeString": "contract MeterUser"
                      }
                    },
                    "src": "644:23:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MeterUser_$39517",
                      "typeString": "contract MeterUser"
                    }
                  },
                  "id": 39539,
                  "nodeType": "ExpressionStatement",
                  "src": "644:23:89"
                },
                {
                  "expression": {
                    "id": 39546,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 39540,
                      "name": "initialBlockNum",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 39524,
                      "src": "677:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 39543,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "702:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 39544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "702:12:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 39542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "695:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 39541,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "695:6:89",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 39545,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "695:20:89",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "677:38:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 39547,
                  "nodeType": "ExpressionStatement",
                  "src": "677:38:89"
                }
              ]
            },
            "baseFunctions": [
              11224
            ],
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "579:5:89",
            "overrides": {
              "id": 39526,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "602:8:89"
            },
            "parameters": {
              "id": 39525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "584:2:89"
            },
            "returnParameters": {
              "id": 39527,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "611:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 39580,
            "nodeType": "FunctionDefinition",
            "src": "728:303:89",
            "nodes": [],
            "body": {
              "id": 39579,
              "nodeType": "Block",
              "src": "790:241:89",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39553,
                    39555,
                    39557
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39553,
                      "mutability": "mutable",
                      "name": "prevBaseFee",
                      "nameLocation": "809:11:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39579,
                      "src": "801:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 39552,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "801:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39555,
                      "mutability": "mutable",
                      "name": "prevBoughtGas",
                      "nameLocation": "829:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39579,
                      "src": "822:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39554,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "822:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39557,
                      "mutability": "mutable",
                      "name": "prevBlockNum",
                      "nameLocation": "851:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39579,
                      "src": "844:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39556,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "844:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39561,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39558,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "867:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "867:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "867:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "800:81:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39563,
                        "name": "prevBaseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39553,
                        "src": "901:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 39564,
                            "name": "meter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39522,
                            "src": "914:5:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_MeterUser_$39517",
                              "typeString": "contract MeterUser"
                            }
                          },
                          "id": 39565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "INITIAL_BASE_FEE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1934,
                          "src": "914:22:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$",
                            "typeString": "function () view external returns (uint128)"
                          }
                        },
                        "id": 39566,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "914:24:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 39562,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "892:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "892:47:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39568,
                  "nodeType": "ExpressionStatement",
                  "src": "892:47:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39570,
                        "name": "prevBoughtGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39555,
                        "src": "958:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 39571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "973:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 39569,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "949:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39572,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "949:26:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39573,
                  "nodeType": "ExpressionStatement",
                  "src": "949:26:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39575,
                        "name": "prevBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39557,
                        "src": "994:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 39576,
                        "name": "initialBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39524,
                        "src": "1008:15:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39574,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "985:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "985:39:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39578,
                  "nodeType": "ExpressionStatement",
                  "src": "985:39:89"
                }
              ]
            },
            "functionSelector": "9c641be2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_meter_initialResourceParams_succeeds",
            "nameLocation": "737:41:89",
            "parameters": {
              "id": 39550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "778:2:89"
            },
            "returnParameters": {
              "id": 39551,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "790:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39631,
            "nodeType": "FunctionDefinition",
            "src": "1037:494:89",
            "nodes": [],
            "body": {
              "id": 39630,
              "nodeType": "Block",
              "src": "1098:433:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 39586,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1118:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 39583,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "1108:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39585,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "1108:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1108:12:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39588,
                  "nodeType": "ExpressionStatement",
                  "src": "1108:12:89"
                },
                {
                  "assignments": [
                    39590,
                    39592,
                    39594
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39590,
                      "mutability": "mutable",
                      "name": "prevBaseFee",
                      "nameLocation": "1200:11:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39630,
                      "src": "1192:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 39589,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1192:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39592,
                      "mutability": "mutable",
                      "name": "prevBoughtGas",
                      "nameLocation": "1220:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39630,
                      "src": "1213:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39591,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1213:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39594,
                      "mutability": "mutable",
                      "name": "prevBlockNum",
                      "nameLocation": "1242:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39630,
                      "src": "1235:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39593,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1235:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39598,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39595,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "1258:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "1258:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1258:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1191:81:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 39602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1292:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 39599,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "1282:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "1282:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1282:12:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39604,
                  "nodeType": "ExpressionStatement",
                  "src": "1282:12:89"
                },
                {
                  "assignments": [
                    39606,
                    39608,
                    39610
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39606,
                      "mutability": "mutable",
                      "name": "postBaseFee",
                      "nameLocation": "1313:11:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39630,
                      "src": "1305:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 39605,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1305:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39608,
                      "mutability": "mutable",
                      "name": "postBoughtGas",
                      "nameLocation": "1333:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39630,
                      "src": "1326:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39607,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1326:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39610,
                      "mutability": "mutable",
                      "name": "postBlockNum",
                      "nameLocation": "1355:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39630,
                      "src": "1348:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39609,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1348:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39614,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39611,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "1371:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39612,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "1371:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39613,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1371:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1304:81:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39616,
                        "name": "postBaseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39606,
                        "src": "1405:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "id": 39617,
                        "name": "prevBaseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39590,
                        "src": "1418:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 39615,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "1396:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39618,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1396:34:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39619,
                  "nodeType": "ExpressionStatement",
                  "src": "1396:34:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39621,
                        "name": "postBoughtGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39608,
                        "src": "1449:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 39622,
                        "name": "prevBoughtGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39592,
                        "src": "1464:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39620,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "1440:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1440:38:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39624,
                  "nodeType": "ExpressionStatement",
                  "src": "1440:38:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39626,
                        "name": "postBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39610,
                        "src": "1497:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 39627,
                        "name": "prevBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39594,
                        "src": "1511:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39625,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "1488:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1488:36:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39629,
                  "nodeType": "ExpressionStatement",
                  "src": "1488:36:89"
                }
              ]
            },
            "functionSelector": "5bc92698",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_meter_updateParamsNoChange_succeeds",
            "nameLocation": "1046:40:89",
            "parameters": {
              "id": 39581,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1086:2:89"
            },
            "returnParameters": {
              "id": 39582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39676,
            "nodeType": "FunctionDefinition",
            "src": "1537:389:89",
            "nodes": [],
            "body": {
              "id": 39675,
              "nodeType": "Block",
              "src": "1597:329:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39637,
                          "name": "initialBlockNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39524,
                          "src": "1615:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 39638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1633:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1615:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 39634,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55964,
                        "src": "1607:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$64511",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64176,
                      "src": "1607:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 39640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1607:28:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39641,
                  "nodeType": "ExpressionStatement",
                  "src": "1607:28:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 39645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1655:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 39642,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "1645:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39644,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "1645:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1645:12:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39647,
                  "nodeType": "ExpressionStatement",
                  "src": "1645:12:89"
                },
                {
                  "assignments": [
                    39649,
                    39651,
                    39653
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39649,
                      "mutability": "mutable",
                      "name": "prevBaseFee",
                      "nameLocation": "1676:11:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39675,
                      "src": "1668:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 39648,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "1668:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39651,
                      "mutability": "mutable",
                      "name": "prevBoughtGas",
                      "nameLocation": "1696:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39675,
                      "src": "1689:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39650,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1689:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39653,
                      "mutability": "mutable",
                      "name": "prevBlockNum",
                      "nameLocation": "1718:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39675,
                      "src": "1711:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39652,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "1711:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39657,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39654,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "1734:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39655,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "1734:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39656,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1734:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1667:81:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39659,
                        "name": "prevBaseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39649,
                        "src": "1807:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "383735303030303030",
                        "id": 39660,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1820:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_875000000_by_1",
                          "typeString": "int_const 875000000"
                        },
                        "value": "875000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_875000000_by_1",
                          "typeString": "int_const 875000000"
                        }
                      ],
                      "id": 39658,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "1798:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1798:32:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39662,
                  "nodeType": "ExpressionStatement",
                  "src": "1798:32:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39664,
                        "name": "prevBoughtGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39651,
                        "src": "1849:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 39665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1864:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 39663,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "1840:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:26:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39667,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:26:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39669,
                        "name": "prevBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39653,
                        "src": "1885:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39670,
                          "name": "initialBlockNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39524,
                          "src": "1899:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 39671,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1917:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "1899:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39668,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "1876:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1876:43:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39674,
                  "nodeType": "ExpressionStatement",
                  "src": "1876:43:89"
                }
              ]
            },
            "functionSelector": "024e2e1f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_meter_updateOneEmptyBlock_succeeds",
            "nameLocation": "1546:39:89",
            "parameters": {
              "id": 39632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:2:89"
            },
            "returnParameters": {
              "id": 39633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1597:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39721,
            "nodeType": "FunctionDefinition",
            "src": "1932:351:89",
            "nodes": [],
            "body": {
              "id": 39720,
              "nodeType": "Block",
              "src": "1993:290:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39682,
                          "name": "initialBlockNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39524,
                          "src": "2011:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 39683,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2029:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2011:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 39679,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55964,
                        "src": "2003:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$64511",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64176,
                      "src": "2003:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 39685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2003:28:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39686,
                  "nodeType": "ExpressionStatement",
                  "src": "2003:28:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 39690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2051:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 39687,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "2041:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39689,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "2041:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2041:12:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39692,
                  "nodeType": "ExpressionStatement",
                  "src": "2041:12:89"
                },
                {
                  "assignments": [
                    39694,
                    39696,
                    39698
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39694,
                      "mutability": "mutable",
                      "name": "prevBaseFee",
                      "nameLocation": "2072:11:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39720,
                      "src": "2064:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 39693,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2064:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39696,
                      "mutability": "mutable",
                      "name": "prevBoughtGas",
                      "nameLocation": "2092:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39720,
                      "src": "2085:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39695,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2085:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39698,
                      "mutability": "mutable",
                      "name": "prevBlockNum",
                      "nameLocation": "2114:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39720,
                      "src": "2107:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39697,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2107:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39702,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39699,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "2130:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "2130:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2130:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2063:81:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39704,
                        "name": "prevBaseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39694,
                        "src": "2164:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "373635363234393939",
                        "id": 39705,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2177:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_765624999_by_1",
                          "typeString": "int_const 765624999"
                        },
                        "value": "765624999"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_765624999_by_1",
                          "typeString": "int_const 765624999"
                        }
                      ],
                      "id": 39703,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2155:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39706,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2155:32:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39707,
                  "nodeType": "ExpressionStatement",
                  "src": "2155:32:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39709,
                        "name": "prevBoughtGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39696,
                        "src": "2206:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 39710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2221:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 39708,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2197:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2197:26:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39712,
                  "nodeType": "ExpressionStatement",
                  "src": "2197:26:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39714,
                        "name": "prevBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39698,
                        "src": "2242:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39715,
                          "name": "initialBlockNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39524,
                          "src": "2256:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 39716,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2274:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "2256:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39713,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2233:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2233:43:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39719,
                  "nodeType": "ExpressionStatement",
                  "src": "2233:43:89"
                }
              ]
            },
            "functionSelector": "09928413",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_meter_updateTwoEmptyBlocks_succeeds",
            "nameLocation": "1941:40:89",
            "parameters": {
              "id": 39677,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1981:2:89"
            },
            "returnParameters": {
              "id": 39678,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1993:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39766,
            "nodeType": "FunctionDefinition",
            "src": "2289:353:89",
            "nodes": [],
            "body": {
              "id": 39765,
              "nodeType": "Block",
              "src": "2350:292:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39727,
                          "name": "initialBlockNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39524,
                          "src": "2368:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 39728,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2386:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "2368:20:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 39724,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55964,
                        "src": "2360:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$64511",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64176,
                      "src": "2360:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 39730,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2360:29:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39731,
                  "nodeType": "ExpressionStatement",
                  "src": "2360:29:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 39735,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2409:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 39732,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "2399:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "2399:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39736,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2399:12:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39737,
                  "nodeType": "ExpressionStatement",
                  "src": "2399:12:89"
                },
                {
                  "assignments": [
                    39739,
                    39741,
                    39743
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39739,
                      "mutability": "mutable",
                      "name": "prevBaseFee",
                      "nameLocation": "2430:11:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39765,
                      "src": "2422:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 39738,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2422:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39741,
                      "mutability": "mutable",
                      "name": "prevBoughtGas",
                      "nameLocation": "2450:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39765,
                      "src": "2443:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39740,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2443:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39743,
                      "mutability": "mutable",
                      "name": "prevBlockNum",
                      "nameLocation": "2472:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39765,
                      "src": "2465:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39742,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2465:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39747,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39744,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "2488:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "2488:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2488:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2421:81:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39749,
                        "name": "prevBaseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39739,
                        "src": "2522:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "323633303735353736",
                        "id": 39750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2535:9:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_263075576_by_1",
                          "typeString": "int_const 263075576"
                        },
                        "value": "263075576"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_263075576_by_1",
                          "typeString": "int_const 263075576"
                        }
                      ],
                      "id": 39748,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2513:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2513:32:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39752,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:32:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39754,
                        "name": "prevBoughtGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39741,
                        "src": "2564:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 39755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2579:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 39753,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2555:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2555:26:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39757,
                  "nodeType": "ExpressionStatement",
                  "src": "2555:26:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39759,
                        "name": "prevBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39743,
                        "src": "2600:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39762,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39760,
                          "name": "initialBlockNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39524,
                          "src": "2614:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "3130",
                          "id": 39761,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2632:2:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "src": "2614:20:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39758,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2591:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39763,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2591:44:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39764,
                  "nodeType": "ExpressionStatement",
                  "src": "2591:44:89"
                }
              ]
            },
            "functionSelector": "143103b5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_meter_updateTenEmptyBlocks_succeeds",
            "nameLocation": "2298:40:89",
            "parameters": {
              "id": 39722,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2338:2:89"
            },
            "returnParameters": {
              "id": 39723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2350:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39813,
            "nodeType": "FunctionDefinition",
            "src": "2648:388:89",
            "nodes": [],
            "body": {
              "id": 39812,
              "nodeType": "Block",
              "src": "2705:331:89",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39770
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39770,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "2722:6:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39812,
                      "src": "2715:13:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39769,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2715:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39780,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39775,
                                "name": "meter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39522,
                                "src": "2746:5:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MeterUser_$39517",
                                  "typeString": "contract MeterUser"
                                }
                              },
                              "id": 39776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TARGET_RESOURCE_LIMIT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1908,
                              "src": "2746:27:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                "typeString": "function () view external returns (int256)"
                              }
                            },
                            "id": 39777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2746:29:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 39774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2738:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 39773,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "2738:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2738:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2731:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 39771,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2731:6:89",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 39779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2731:46:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2715:62:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39784,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39770,
                        "src": "2797:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 39781,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "2787:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39783,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "2787:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2787:17:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39786,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:17:89"
                },
                {
                  "assignments": [
                    39788,
                    39790,
                    39792
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39788,
                      "mutability": "mutable",
                      "name": "prevBaseFee",
                      "nameLocation": "2823:11:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39812,
                      "src": "2815:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 39787,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "2815:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39790,
                      "mutability": "mutable",
                      "name": "prevBoughtGas",
                      "nameLocation": "2843:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39812,
                      "src": "2836:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39789,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2836:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 39792,
                      "mutability": "mutable",
                      "name": "prevBlockNum",
                      "nameLocation": "2865:12:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39812,
                      "src": "2858:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39791,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "2858:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39796,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39793,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "2881:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39794,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "2881:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39795,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2814:81:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39798,
                        "name": "prevBaseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39788,
                        "src": "2915:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31303030303030303030",
                        "id": 39799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2928:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        },
                        "value": "1000000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000_by_1",
                          "typeString": "int_const 1000000000"
                        }
                      ],
                      "id": 39797,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2906:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2906:33:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39801,
                  "nodeType": "ExpressionStatement",
                  "src": "2906:33:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39803,
                        "name": "prevBoughtGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39790,
                        "src": "2958:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 39804,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39770,
                        "src": "2973:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39802,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2949:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2949:31:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39806,
                  "nodeType": "ExpressionStatement",
                  "src": "2949:31:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39808,
                        "name": "prevBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39792,
                        "src": "2999:12:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 39809,
                        "name": "initialBlockNum",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39524,
                        "src": "3013:15:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39807,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "2990:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2990:39:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39811,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:39:89"
                }
              ]
            },
            "functionSelector": "b715d3bd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_meter_updateNoGasDelta_succeeds",
            "nameLocation": "2657:36:89",
            "parameters": {
              "id": 39767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2693:2:89"
            },
            "returnParameters": {
              "id": 39768,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2705:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39887,
            "nodeType": "FunctionDefinition",
            "src": "3042:558:89",
            "nodes": [],
            "body": {
              "id": 39886,
              "nodeType": "Block",
              "src": "3089:511:89",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39817
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39817,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "3106:6:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39886,
                      "src": "3099:13:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39816,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3099:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39827,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39822,
                                "name": "meter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39522,
                                "src": "3130:5:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MeterUser_$39517",
                                  "typeString": "contract MeterUser"
                                }
                              },
                              "id": 39823,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TARGET_RESOURCE_LIMIT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1908,
                              "src": "3130:27:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                "typeString": "function () view external returns (int256)"
                              }
                            },
                            "id": 39824,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3130:29:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 39821,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3122:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 39820,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3122:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39825,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3122:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3115:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 39818,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3115:6:89",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 39826,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3115:46:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3099:62:89"
                },
                {
                  "assignments": [
                    39829
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39829,
                      "mutability": "mutable",
                      "name": "elasticity",
                      "nameLocation": "3178:10:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39886,
                      "src": "3171:17:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39828,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3171:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39839,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39834,
                                "name": "meter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39522,
                                "src": "3206:5:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MeterUser_$39517",
                                  "typeString": "contract MeterUser"
                                }
                              },
                              "id": 39835,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ELASTICITY_MULTIPLIER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1902,
                              "src": "3206:27:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                "typeString": "function () view external returns (int256)"
                              }
                            },
                            "id": 39836,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3206:29:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 39833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3198:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 39832,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3198:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39837,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3198:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3191:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 39830,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3191:6:89",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 39838,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3191:46:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3171:66:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39843,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39817,
                          "src": "3257:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 39844,
                          "name": "elasticity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39829,
                          "src": "3266:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "3257:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 39840,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "3247:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39842,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "3247:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3247:30:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39847,
                  "nodeType": "ExpressionStatement",
                  "src": "3247:30:89"
                },
                {
                  "assignments": [
                    null,
                    39849,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 39849,
                      "mutability": "mutable",
                      "name": "prevBoughtGas",
                      "nameLocation": "3298:13:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39886,
                      "src": "3291:20:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39848,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3291:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 39853,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39850,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "3317:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "3317:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3317:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3288:43:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39855,
                        "name": "prevBoughtGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39849,
                        "src": "3350:13:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39856,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39817,
                          "src": "3365:6:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "id": 39857,
                          "name": "elasticity",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39829,
                          "src": "3374:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "3365:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "id": 39854,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "3341:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3341:44:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39860,
                  "nodeType": "ExpressionStatement",
                  "src": "3341:44:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39864,
                          "name": "initialBlockNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39524,
                          "src": "3404:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 39865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3422:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3404:19:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 39861,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55964,
                        "src": "3396:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$64511",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39863,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64176,
                      "src": "3396:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 39867,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3396:28:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39868,
                  "nodeType": "ExpressionStatement",
                  "src": "3396:28:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 39872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3444:1:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 39869,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "3434:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "3434:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3434:12:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39874,
                  "nodeType": "ExpressionStatement",
                  "src": "3434:12:89"
                },
                {
                  "assignments": [
                    39876,
                    null,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39876,
                      "mutability": "mutable",
                      "name": "postBaseFee",
                      "nameLocation": "3465:11:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39886,
                      "src": "3457:19:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint128",
                        "typeString": "uint128"
                      },
                      "typeName": {
                        "id": 39875,
                        "name": "uint128",
                        "nodeType": "ElementaryTypeName",
                        "src": "3457:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null
                  ],
                  "id": 39880,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 39877,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "3484:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39878,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "params",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1938,
                      "src": "3484:12:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint128_$_t_uint64_$_t_uint64_$",
                        "typeString": "function () view external returns (uint128,uint64,uint64)"
                      }
                    },
                    "id": 39879,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3484:14:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint128_$_t_uint64_$_t_uint64_$",
                      "typeString": "tuple(uint128,uint64,uint64)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3456:42:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39882,
                        "name": "postBaseFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39876,
                        "src": "3569:11:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      },
                      {
                        "hexValue": "31333735303030303030",
                        "id": 39883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3582:10:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1375000000_by_1",
                          "typeString": "int_const 1375000000"
                        },
                        "value": "1375000000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        {
                          "typeIdentifier": "t_rational_1375000000_by_1",
                          "typeString": "int_const 1375000000"
                        }
                      ],
                      "id": 39881,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        56102,
                        56127,
                        56140,
                        56156,
                        56198,
                        56240,
                        56282,
                        56319,
                        56356,
                        56393,
                        54445,
                        54470,
                        54500,
                        54525,
                        54584,
                        54609,
                        54639,
                        54664,
                        55764,
                        55799
                      ],
                      "referencedDeclaration": 54639,
                      "src": "3560:8:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 39884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3560:33:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39885,
                  "nodeType": "ExpressionStatement",
                  "src": "3560:33:89"
                }
              ]
            },
            "functionSelector": "b388fd7d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_meter_useMax_succeeds",
            "nameLocation": "3051:26:89",
            "parameters": {
              "id": 39814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3077:2:89"
            },
            "returnParameters": {
              "id": 39815,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3089:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39931,
            "nodeType": "FunctionDefinition",
            "src": "3606:344:89",
            "nodes": [],
            "body": {
              "id": 39930,
              "nodeType": "Block",
              "src": "3660:290:89",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    39891
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39891,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "3677:6:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39930,
                      "src": "3670:13:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39890,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3670:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39901,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39896,
                                "name": "meter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39522,
                                "src": "3701:5:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MeterUser_$39517",
                                  "typeString": "contract MeterUser"
                                }
                              },
                              "id": 39897,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TARGET_RESOURCE_LIMIT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1908,
                              "src": "3701:27:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                "typeString": "function () view external returns (int256)"
                              }
                            },
                            "id": 39898,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3701:29:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 39895,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3693:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 39894,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3693:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39899,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3693:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3686:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 39892,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3686:6:89",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 39900,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3686:46:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3670:62:89"
                },
                {
                  "assignments": [
                    39903
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39903,
                      "mutability": "mutable",
                      "name": "elasticity",
                      "nameLocation": "3749:10:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39930,
                      "src": "3742:17:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39902,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3742:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39913,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39908,
                                "name": "meter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39522,
                                "src": "3777:5:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MeterUser_$39517",
                                  "typeString": "contract MeterUser"
                                }
                              },
                              "id": 39909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ELASTICITY_MULTIPLIER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1902,
                              "src": "3777:27:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                "typeString": "function () view external returns (int256)"
                              }
                            },
                            "id": 39910,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3777:29:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 39907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3769:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 39906,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "3769:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39911,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3769:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39905,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3762:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 39904,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "3762:6:89",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 39912,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3762:46:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3742:66:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5265736f757263654d65746572696e673a2063616e6e6f7420627579206d6f726520676173207468616e20617661696c61626c6520676173206c696d6974",
                        "id": 39917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3834:64:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0f4ab91394e0f4ff418dca162b1eae355504cb775c6778ff48927b4e41c65c44",
                          "typeString": "literal_string \"ResourceMetering: cannot buy more gas than available gas limit\""
                        },
                        "value": "ResourceMetering: cannot buy more gas than available gas limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0f4ab91394e0f4ff418dca162b1eae355504cb775c6778ff48927b4e41c65c44",
                          "typeString": "literal_string \"ResourceMetering: cannot buy more gas than available gas limit\""
                        }
                      ],
                      "expression": {
                        "id": 39914,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55964,
                        "src": "3818:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$64511",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39916,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64253,
                      "src": "3818:15:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 39918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3818:81:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39919,
                  "nodeType": "ExpressionStatement",
                  "src": "3818:81:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 39925,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 39923,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39891,
                            "src": "3919:6:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 39924,
                            "name": "elasticity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39903,
                            "src": "3928:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "3919:19:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 39926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3941:1:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "3919:23:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 39920,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "3909:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39922,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "3909:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39928,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3909:34:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39929,
                  "nodeType": "ExpressionStatement",
                  "src": "3909:34:89"
                }
              ]
            },
            "functionSelector": "a8adc2b2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_meter_useMoreThanMax_reverts",
            "nameLocation": "3615:33:89",
            "parameters": {
              "id": 39888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3648:2:89"
            },
            "returnParameters": {
              "id": 39889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3660:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 39995,
            "nodeType": "FunctionDefinition",
            "src": "4068:593:89",
            "nodes": [],
            "body": {
              "id": 39994,
              "nodeType": "Block",
              "src": "4161:500:89",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39943,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39941,
                          "name": "_blockDiff",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39935,
                          "src": "4324:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "343333353736323831303538313634323137373533323235323338363737393030383734343538363931",
                          "id": 39942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4337:42:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_433576281058164217753225238677900874458691_by_1",
                            "typeString": "int_const 4335...(34 digits omitted)...8691"
                          },
                          "value": "433576281058164217753225238677900874458691"
                        },
                        "src": "4324:55:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 39938,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55964,
                        "src": "4314:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$64511",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64157,
                      "src": "4314:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 39944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4314:66:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39945,
                  "nodeType": "ExpressionStatement",
                  "src": "4314:66:89"
                },
                {
                  "assignments": [
                    39947
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39947,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4398:6:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39994,
                      "src": "4391:13:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39946,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4391:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39957,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39952,
                                "name": "meter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39522,
                                "src": "4422:5:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MeterUser_$39517",
                                  "typeString": "contract MeterUser"
                                }
                              },
                              "id": 39953,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "TARGET_RESOURCE_LIMIT",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1908,
                              "src": "4422:27:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                "typeString": "function () view external returns (int256)"
                              }
                            },
                            "id": 39954,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4422:29:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 39951,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4414:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 39950,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4414:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39955,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4414:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4407:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 39948,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4407:6:89",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 39956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4407:46:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4391:62:89"
                },
                {
                  "assignments": [
                    39959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 39959,
                      "mutability": "mutable",
                      "name": "elasticity",
                      "nameLocation": "4470:10:89",
                      "nodeType": "VariableDeclaration",
                      "scope": 39994,
                      "src": "4463:17:89",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "typeName": {
                        "id": 39958,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4463:6:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 39969,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 39964,
                                "name": "meter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 39522,
                                "src": "4498:5:89",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_MeterUser_$39517",
                                  "typeString": "contract MeterUser"
                                }
                              },
                              "id": 39965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ELASTICITY_MULTIPLIER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1902,
                              "src": "4498:27:89",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_int256_$",
                                "typeString": "function () view external returns (int256)"
                              }
                            },
                            "id": 39966,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4498:29:89",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 39963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4490:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 39962,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "4490:7:89",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 39967,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4490:38:89",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 39961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4483:6:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint64_$",
                        "typeString": "type(uint64)"
                      },
                      "typeName": {
                        "id": 39960,
                        "name": "uint64",
                        "nodeType": "ElementaryTypeName",
                        "src": "4483:6:89",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 39968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4483:46:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4463:66:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 39977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39973,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39933,
                          "src": "4549:7:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 39976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 39974,
                            "name": "target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39947,
                            "src": "4559:6:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 39975,
                            "name": "elasticity",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 39959,
                            "src": "4568:10:89",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "4559:19:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "4549:29:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 39970,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55964,
                        "src": "4539:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$64511",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "assume",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64157,
                      "src": "4539:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure external"
                      }
                    },
                    "id": 39978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4539:40:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39979,
                  "nodeType": "ExpressionStatement",
                  "src": "4539:40:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 39985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 39983,
                          "name": "initialBlockNum",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39524,
                          "src": "4597:15:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "id": 39984,
                          "name": "_blockDiff",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 39935,
                          "src": "4615:10:89",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4597:28:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 39980,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 55964,
                        "src": "4589:2:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$64511",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 39982,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "roll",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 64176,
                      "src": "4589:7:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 39986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4589:37:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39987,
                  "nodeType": "ExpressionStatement",
                  "src": "4589:37:89"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 39991,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39933,
                        "src": "4646:7:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      ],
                      "expression": {
                        "id": 39988,
                        "name": "meter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 39522,
                        "src": "4636:5:89",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_MeterUser_$39517",
                          "typeString": "contract MeterUser"
                        }
                      },
                      "id": 39990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "use",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39516,
                      "src": "4636:9:89",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint64_$returns$__$",
                        "typeString": "function (uint64) external"
                      }
                    },
                    "id": 39992,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4636:18:89",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 39993,
                  "nodeType": "ExpressionStatement",
                  "src": "4636:18:89"
                }
              ]
            },
            "functionSelector": "06768b58",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFuzz_meter_largeBlockDiff_succeeds",
            "nameLocation": "4077:38:89",
            "parameters": {
              "id": 39936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 39933,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4123:7:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39995,
                  "src": "4116:14:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 39932,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "4116:6:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 39935,
                  "mutability": "mutable",
                  "name": "_blockDiff",
                  "nameLocation": "4140:10:89",
                  "nodeType": "VariableDeclaration",
                  "scope": 39995,
                  "src": "4132:18:89",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 39934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4132:7:89",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4115:36:89"
            },
            "returnParameters": {
              "id": 39937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4161:0:89"
            },
            "scope": 39996,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 39518,
              "name": "CommonTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11257,
              "src": "494:10:89"
            },
            "id": 39519,
            "nodeType": "InheritanceSpecifier",
            "src": "494:10:89"
          }
        ],
        "canonicalName": "ResourceMetering_Test",
        "contractDependencies": [
          13435,
          39517
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          39996,
          11257,
          63199,
          55971,
          55968,
          63152,
          60162,
          59872,
          59483,
          57911,
          57217,
          55911
        ],
        "name": "ResourceMetering_Test",
        "nameLocation": "469:21:89",
        "scope": 39997,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 89
}